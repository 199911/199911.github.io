<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Coding Sunday</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://199911.github.io/"/>
  <updated>2017-03-18T07:57:25.000Z</updated>
  <id>http://199911.github.io/</id>
  
  <author>
    <name>Sunday Ku</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>&quot;Professional: JavaScript for Web Developers, Third Edition&quot; part 2</title>
    <link href="http://199911.github.io/review/2017/03/18/professional-javascript-for-web-developers-3rd-edition-2/"/>
    <id>http://199911.github.io/review/2017/03/18/professional-javascript-for-web-developers-3rd-edition-2/</id>
    <published>2017-03-17T16:00:00.000Z</published>
    <updated>2017-03-18T07:57:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>In chapter 6, the book demonstrate how to control JavaScript object’s property with its internal value. I think immuntable.js may make sure this techniques in implementation.<br>In chapter 7, is show some interest property in function object, but it is not accessible in strict mode, it is not very useful.<br>In chapter 9, this book explain how user agent evolve, and meaning of each component. It is quite interesting.</p>
<a id="more"></a>
<h1 id="Chapter-6-Object-Oriented-Programming"><a href="#Chapter-6-Object-Oriented-Programming" class="headerlink" title="Chapter 6: Object-Oriented Programming"></a>Chapter 6: Object-Oriented Programming</h1><h2 id="Internal-values-of-property-of-objects"><a href="#Internal-values-of-property-of-objects" class="headerlink" title="Internal values of property of objects"></a>Internal values of property of objects</h2><p><code>Object.defineProperty()</code> and <code>Object.defineProperties()</code> can change the internal value</p>
<ul>
<li>data attribute<ul>
<li>configurable</li>
<li>enumerable</li>
<li>writable</li>
<li>value</li>
</ul>
</li>
<li>accessor attribute<ul>
<li>configurable</li>
<li>enumerable</li>
<li>get</li>
<li>set</li>
</ul>
</li>
</ul>
<h2 id="Other-Information"><a href="#Other-Information" class="headerlink" title="Other Information"></a>Other Information</h2><ul>
<li><code>instanceof</code> check prototype chain</li>
<li>constructor will create a new context, changing the <code>this</code> value</li>
</ul>
<h2 id="Class-Inheritance"><a href="#Class-Inheritance" class="headerlink" title="Class Inheritance"></a>Class Inheritance</h2><p>The books spent lots of time to talk about implementation of class inheritance in JavaScript. I skipped it as ES6 have support <code>class</code>. What is the es5 equivalent of es6 class may be an interesting question.</p>
<ul>
<li>Prototype share all functions<ul>
<li>But access time is long</li>
</ul>
</li>
<li>In ECMAScript spec, prototype is internal object, but many browsers implement <code>__proto__</code><ul>
<li>Standard way to get prototype is <code>getPrototypeOf</code></li>
</ul>
</li>
<li><code>in</code> operator<ul>
<li><code>(name in object)</code> return true if the object have an index <code>name</code><ul>
<li>no matter it is a instance property or prototype property</li>
</ul>
</li>
</ul>
</li>
<li>All native object use prototype</li>
<li>Prototype and constructor can be different</li>
<li>Drawback of prototype, can change inheritance during execution</li>
<li>Although possible, it is not recommended to modify native object prototypes in a production environment.</li>
<li>Share data value (especially array and object) in prototype can cause tricky bugs<ul>
<li>One solution is use constructor for data property, prototype for function property<ul>
<li>I think we should stick to es6 class if possible, it is over-complicated to implement class in es5</li>
</ul>
</li>
</ul>
</li>
<li><code>return</code> statement in constructor can override the value return by constructor by default</li>
</ul>
<h1 id="Chapter-7-Function-Expressions"><a href="#Chapter-7-Function-Expressions" class="headerlink" title="Chapter 7: Function Expressions"></a>Chapter 7: Function Expressions</h1><ul>
<li>Recursion<ul>
<li>callee vs function f() and f = function()<ul>
<li>callee is not available in strict mode</li>
<li>anonymous function fail if the function varaible changed<ul>
<li>as the recursion coerced to the variable</li>
</ul>
</li>
<li>Use named function in recursion</li>
</ul>
</li>
</ul>
</li>
<li>Anonymous function != closure<ul>
<li>Closures are functions that have access to variables from another function’s scope.</li>
</ul>
</li>
<li>Closures carry with them the containing function’s scope<ul>
<li>They take up more memory than other functions.</li>
<li>It’s recommended you use them only when absolutely necessary.</li>
<li>Beware which context do <code>this</code> refer to</li>
</ul>
</li>
<li>Can use closure to mimic block scope<ul>
<li><code>let</code> keyword in es6 create variable in block scope</li>
</ul>
</li>
</ul>
<h1 id="Chapter-8-The-Browser-Object-Model"><a href="#Chapter-8-The-Browser-Object-Model" class="headerlink" title="Chapter 8: The Browser Object Model"></a>Chapter 8: The Browser Object Model</h1><h2 id="window-and-frame"><a href="#window-and-frame" class="headerlink" title="window and frame"></a>window and frame</h2><ul>
<li><code>window</code> in BOM is global in ECMAScript</li>
<li>All frames have its own <code>window</code><ul>
<li>It means there are multiple global object, one object for one frame</li>
</ul>
</li>
<li><code>window.frames</code> store all <code>window</code> object for frames in this frame</li>
<li><code>window</code> is current frame</li>
<li>The <code>window.top</code> object always points to the very top (outermost) frame, which is the browser window itself.</li>
<li>Root’s <code>window.parent</code> is itself</li>
<li><code>screenLeft</code> and <code>screenTop</code> give frame position information</li>
<li><p><code>window.self</code> = <code>window</code></p>
</li>
<li><p>Cross browser window position detection</p>
<ul>
<li>Check both screenLeft and screenX</li>
<li>Is it standardized now?</li>
</ul>
</li>
<li>Window size<ul>
<li><code>window.innerWidth</code> and <code>document.body.clientWidth</code></li>
<li>Is it standardized now?</li>
</ul>
</li>
</ul>
<h2 id="Pop-up-window"><a href="#Pop-up-window" class="headerlink" title="Pop up window"></a>Pop up window</h2><ul>
<li><code>window.open()</code> can change the content of iframe.</li>
<li>special windows’ name <code>_self</code>, <code>_parent</code>, <code>_top</code>, or <code>_blank</code>.</li>
<li>Also have lots of setting to control pop up window</li>
<li><code>open()</code> return <code>null</code> if it is blocked by build-in pop up blocker</li>
</ul>
<h2 id="Set-time-out"><a href="#Set-time-out" class="headerlink" title="Set time out"></a>Set time out</h2><ul>
<li>Can accept string input instead of function<ul>
<li>but it is not recommended, because there are performance penalty</li>
</ul>
</li>
<li><code>this</code> in timeout callback refer to <code>window</code><ul>
<li>if <code>bind()</code> is not called</li>
</ul>
</li>
</ul>
<h2 id="Location-object"><a href="#Location-object" class="headerlink" title="Location object"></a>Location object</h2><ul>
<li><code>assign()</code> process the new url and add to history<ul>
<li>equivalent assign url to <code>window.location</code> and <code>location.href</code></li>
</ul>
</li>
<li>If you don’t want to update history, use <code>replace()</code></li>
<li><code>reload()</code> may load the page from browser cache<ul>
<li>use <code>reload(true)</code> to force browser to get a new page</li>
</ul>
</li>
</ul>
<h2 id="Navigator-object"><a href="#Navigator-object" class="headerlink" title="Navigator object"></a>Navigator object</h2><ul>
<li>usually for client detection</li>
<li><code>appcodename</code> always return <code>mozilla</code></li>
<li>Can detect plugin like flash shockwave</li>
<li><code>registerContentHandler()</code> and <code>registerProtocolHandler()</code><ul>
<li>Don’t know what is it</li>
</ul>
</li>
</ul>
<h2 id="screen-object"><a href="#screen-object" class="headerlink" title="screen object"></a><code>screen</code> object</h2><p>Is it standard? From MDN, seems in working draft</p>
<h2 id="history-object"><a href="#history-object" class="headerlink" title="history object"></a><code>history</code> object</h2><p>It will refresh page, how web app work?</p>
<ul>
<li><code>go()</code><ul>
<li>integer / url string</li>
</ul>
</li>
<li><code>back()</code></li>
<li><code>forward()</code></li>
</ul>
<h1 id="Chapter-9-Client-Detection"><a href="#Chapter-9-Client-Detection" class="headerlink" title="Chapter 9: Client Detection"></a>Chapter 9: Client Detection</h1><ul>
<li>Capability detection<ul>
<li>Use JavaScripts to check<ul>
<li>Make sure method exist and make sure the method is a function.</li>
<li>But IE 8 have buggy <code>typeof</code>, sometimes return object instead of function</li>
<li>We can use double NOT operator to produce a Boolean result<ul>
<li>Which is more optimal to store and access</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Quirks Detection<ul>
<li>Detect browser bugs</li>
</ul>
</li>
<li>User-Agent Detection<ul>
<li>Identifying the rendering engine<ul>
<li>The exact name and version of a browser isn’t as important as the rendering engine being used.</li>
</ul>
</li>
<li>Detect platform is also useful<ul>
<li>Notice that game systems have web browser now</li>
</ul>
</li>
</ul>
</li>
<li>Capability detection &gt; Quirks Detection &gt; User-Agent Detection</li>
</ul>
<h1 id="Chapter-10-The-Document-Object-Model"><a href="#Chapter-10-The-Document-Object-Model" class="headerlink" title="Chapter 10: The Document Object Model"></a>Chapter 10: The Document Object Model</h1><ul>
<li>12 types of node, all of which inherit from a base type.<ul>
<li>Node.ELEMENT_NODE (1)</li>
<li>Node.ATTRIBUTE_NODE (2)</li>
<li>Node.TEXT_NODE (3)</li>
<li>Node.CDATA_SECTION_NODE (4)</li>
<li>Node.ENTITY_REFERENCE_NODE (5)</li>
<li>Node.ENTITY_NODE (6)</li>
<li>Node.PROCESSING_INSTRUCTION_NODE (7)</li>
<li>Node.COMMENT_NODE (8)</li>
<li>Node.DOCUMENT_NODE (9)</li>
<li>Node.DOCUMENT_TYPE_NODE (10)</li>
<li>Node.DOCUMENT_FRAGMENT_NODE (11)</li>
<li>Node.NOTATION_NODE (12)</li>
<li>Not all types are supported</li>
</ul>
</li>
</ul>
<h2 id="node-interface"><a href="#node-interface" class="headerlink" title="node interface"></a><code>node</code> interface</h2><ul>
<li>Basic properties<ul>
<li>nodeName is tag name</li>
<li>nodeValue is null (if element)</li>
</ul>
</li>
<li>Node relationship<ul>
<li>childNodes contain NodeList<ul>
<li>NodeList is an array like object, but not instance of Array)</li>
</ul>
</li>
<li>Node list is living, any change reflect directly</li>
<li>Related properties<ul>
<li><code>parentNode</code></li>
<li><code>previousSibling</code></li>
<li><code>nextSibling</code></li>
<li><code>firstChild</code></li>
<li><code>lastChild</code></li>
<li><code>hasChildNodes()</code></li>
</ul>
</li>
<li>One final relationship is shared by every node.<ul>
<li>The <code>ownerDocument</code> property is a pointer to the document node that represents the entire document.</li>
</ul>
</li>
</ul>
</li>
<li>Manipulating Nodes<ul>
<li>DOM node exist at most one location in a document</li>
<li><code>appendChild()</code>, which adds a node to the end of the childNodes list<ul>
<li>It does not create new node, it move node.</li>
</ul>
</li>
<li><code>insertBefore()</code></li>
<li><code>replaceChild()</code></li>
<li><code>removeChild()</code></li>
<li><code>cloneNode()</code><ul>
<li>It only copy attributes and, optionally, child nodes.</li>
<li>Event handlers are not cloned</li>
</ul>
</li>
<li><code>normalize()</code><ul>
<li>Merge text node and remove empty text node</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Document-node"><a href="#Document-node" class="headerlink" title="Document node"></a>Document node</h2><ul>
<li>Can be accessed by <code>window.document</code></li>
<li><code>nodeType</code> is 9.</li>
<li><code>nodeName</code> is “#document”.</li>
<li><code>parentNode</code> is null.</li>
<li><code>ownerDocument</code> is null.</li>
<li><code>document.documentElement</code>, which always points to the <html> element in an HTML page.</html></li>
<li><code>document.body</code></li>
<li><code>document.doctype</code><ul>
<li>Inconsistent browser support</li>
</ul>
</li>
<li>Useful properties<ul>
<li><code>title</code>, <code>URL</code>, <code>domain</code>, and <code>referrer</code></li>
<li>The ability to set document.domain is useful when there is a frame or iframe on the page from a different subdomain.<ul>
<li>Pages from different subdomains can’t communicate with one another via JavaScript because of cross-domain security restrictions.<ul>
<li>By setting document.domain in each page to the same value, the pages can access JavaScript objects from each other.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><code>document.getElementById()</code></li>
<li><code>document.getElementsByTagName()</code><ul>
<li>Tag names are case insensitive for html, but sensitive for xml and xhtml</li>
</ul>
</li>
<li>Special collections<ul>
<li><code>document.anchors</code></li>
<li><code>document.applets</code></li>
<li><code>document.forms</code></li>
<li><code>document.images</code></li>
<li><code>document.links</code></li>
</ul>
</li>
<li>DOM Conformance Detection<ul>
<li><code>document.implementation.hasFeature()</code><ul>
<li>Browser vendor may not implement the feature correctly</li>
<li>This is not very reliable</li>
</ul>
</li>
</ul>
</li>
<li><code>document.write()</code><ul>
<li>Write content to document directly</li>
</ul>
</li>
</ul>
<h2 id="Inline-script-injection"><a href="#Inline-script-injection" class="headerlink" title="Inline script injection"></a>Inline script injection</h2><p>Beware cannot have string contains <code>&#39;&lt;/script&gt;&#39;</code>, it will be parsed as close tag of javascript. We need to escape <code>/</code>, like <code>&#39;&lt;\/script&gt;&#39;</code></p>
<p>Document writing is not supported in strict XHTML documents. For pages that are served with the application/xml+xhtml content type, these methods will not work.</p>
<h2 id="Element-node"><a href="#Element-node" class="headerlink" title="Element node"></a>Element node</h2><ul>
<li><code>nodeType</code> is 1.</li>
<li><code>nodeName</code> is the element’s tag name.</li>
<li><code>nodeValue</code> is null.</li>
<li><code>parentNode</code> may be a Document or Element.</li>
<li><code>nodeName</code> is always in uppercase</li>
<li>Standard attributes<ul>
<li><code>id</code>, <code>title</code>, <code>lang</code>, <code>dir</code>, <code>className</code><ul>
<li><code>dir</code> is the direction of language, can be <code>ltr</code> or <code>rtl</code></li>
<li><code>className</code> is <code>class</code> attributes in HTML<ul>
<li><code>class</code> is not used in JavaScript because it is reserved word</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>There are lots of subtype for element node, each represent a HTML tag</li>
<li><code>style</code> object is not living (change not directly reflect)</li>
<li><code>element.attributes</code> is living</li>
<li><code>NameNodeMap</code> type<ul>
<li><code>getNamedItem(name)</code> — Returns the node whose <code>nodeName</code> property is equal to <code>name</code>.</li>
<li><code>removeNamedItem(</code>name<code>)</code> — Removes the node whose <code>nodeName</code> property is equal to name from the list.</li>
<li><code>setNamedItem(node)</code> — Adds the <code>node</code> to the list, indexing it by its <code>nodeName</code> property.</li>
<li><code>item(pos)</code> — Returns the node in the numerical position <code>pos</code>.</li>
</ul>
</li>
</ul>
<h2 id="Text-node"><a href="#Text-node" class="headerlink" title="Text node"></a>Text node</h2><ul>
<li><code>nodeType</code> is 3.</li>
<li><code>nodeName</code> is “#text”.</li>
<li><code>nodeValue</code> is text contained in the node.</li>
<li>Child nodes are not supported.<ul>
<li><code>appendData(text)</code> — Appends text to the end of the node.</li>
<li><code>deleteData(offset, count)</code> — Deletes count number of characters starting at position offset.</li>
<li><code>insertData(offset, text)</code> — Inserts text at position offset.</li>
<li><code>replaceData(offset, count, text)</code> — Replaces the text starting at offset through offset + count with text.</li>
<li><code>splitText(offset)</code> — Splits the text node into two text nodes separated at position offset.</li>
<li><code>substringData(offset, count)</code> — Extracts a string from the text beginning at position offset and continuing until offset + count.</li>
</ul>
</li>
<li>length property return the length of text</li>
<li>The special characters add to text node by method is automatically escaped</li>
<li><code>parentNode.normalize()</code> merge the adjacent children or remove empty text node</li>
</ul>
<h2 id="Comment-node"><a href="#Comment-node" class="headerlink" title="Comment node"></a>Comment node</h2><ul>
<li><code>nodeType</code> is 8.</li>
<li><code>nodeName</code> is “#comment”.</li>
<li><code>nodeValue</code> is the content of the comment.</li>
<li><code>parentNode</code> is a Document or Element.</li>
<li>Child nodes are not supported.</li>
<li>Inherit from text node, having the methods.</li>
<li>can access text by <code>node.data</code></li>
<li>Browsers don’t recognize comments that exist after the closing  tag.</li>
</ul>
<h2 id="CDATASection"><a href="#CDATASection" class="headerlink" title="CDATASection"></a>CDATASection</h2><p>CDATA sections are specific to XML-based documents</p>
<ul>
<li><code>nodeType</code> is 4.</li>
<li><code>nodeName</code> is “#cdata-section”.</li>
<li><code>nodeValue</code> is the contents of the CDATA section.</li>
<li><code>parentNode</code> is a Document or Element.</li>
<li>Child nodes are not supported.</li>
<li>Also inherit form text node</li>
<li>CDATA sections are valid only in XML documents<ul>
<li>So most browsers will incorrectly parse a CDATA section into either a Comment or an Element.</li>
</ul>
</li>
</ul>
<h2 id="DocumentType"><a href="#DocumentType" class="headerlink" title="DocumentType"></a>DocumentType</h2><ul>
<li><code>nodeType</code> is 10.</li>
<li><code>nodeName</code> is the name of the doctype.</li>
<li><code>nodeValue</code> is null.</li>
<li><code>parentNode</code> is a Document.</li>
<li>Child nodes are not supported.</li>
<li>Cannot be create by code in DOM level 1<ul>
<li>Only the <code>name</code> property is useful in html and xhtml, <code>entities</code> and <code>notations</code> are empty</li>
</ul>
</li>
</ul>
<h2 id="The-DocumentFragment-Type"><a href="#The-DocumentFragment-Type" class="headerlink" title="The DocumentFragment Type"></a>The DocumentFragment Type</h2><ul>
<li><code>nodeType</code> is 11.</li>
<li><code>nodeName</code> is “#document-fragment”.</li>
<li><code>nodeValue</code> is null.</li>
<li><code>parentNode</code> is null.</li>
<li>No representation in markup</li>
<li>Cannot be add to document directly</li>
<li>For render performance<ul>
<li>Can create a document fragment with multiple element to prevent live update of each insertion<ul>
<li>In another word, we can achieve batch update with doucment fragment</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Attr-type"><a href="#Attr-type" class="headerlink" title="Attr type"></a>Attr type</h2><ul>
<li><code>nodeType</code> is 11.</li>
<li><code>nodeName</code> is the attribute name.</li>
<li><code>nodeValue</code> is the attribute value.</li>
<li><code>parentNode</code> is null.</li>
<li>Child nodes are not supported in HTML.<ul>
<li>Child nodes may be Text or EntityReference in XML.</li>
</ul>
</li>
<li>Exist in an element’s attributes property.<ul>
<li>But not considered part of the DOM document tree</li>
<li>There are three properties on an Attr object:<ul>
<li><code>name</code>, which is the attribute name (same as nodeName)</li>
<li><code>value</code>, which is the attribute value (same as nodeValue)</li>
<li><code>specified</code> always return <code>true</code></li>
</ul>
</li>
</ul>
</li>
<li>From <a href="https://developer.mozilla.org/en-US/docs/Web/API/Attr" target="_blank" rel="external">MDN</a>, attribute node no longer inherit from node in DOM 4<br>-The <code>getAttribute()</code>, <code>setAttribute()</code>, and <code>removeAttribute()</code> methods are preferable over manipulating attribute nodes.<ul>
<li>Custom properties does not show up in object, need to use <code>getAttribute()</code></li>
<li>Attribute names get normalized to lowercase when set using <code>setAttribute()</code></li>
</ul>
</li>
</ul>
<h2 id="Manipulating-Tables"><a href="#Manipulating-Tables" class="headerlink" title="Manipulating Tables"></a>Manipulating Tables</h2><p>There are methods to make create table element easier</p>
<h2 id="Element-Traversal"><a href="#Element-Traversal" class="headerlink" title="Element Traversal"></a>Element Traversal</h2><p>There are new properties and methods to help us access sibling, children elements and number of children elements (not include comment and text node)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In chapter 6, the book demonstrate how to control JavaScript object’s property with its internal value. I think immuntable.js may make sure this techniques in implementation.&lt;br&gt;In chapter 7, is show some interest property in function object, but it is not accessible in strict mode, it is not very useful.&lt;br&gt;In chapter 9, this book explain how user agent evolve, and meaning of each component. It is quite interesting.&lt;/p&gt;
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
  <entry>
    <title>&quot;Professional: JavaScript for Web Developers, Third Edition&quot; part 1</title>
    <link href="http://199911.github.io/review/2017/03/14/professional-javascript-for-web-developers-3rd-edition-1/"/>
    <id>http://199911.github.io/review/2017/03/14/professional-javascript-for-web-developers-3rd-edition-1/</id>
    <published>2017-03-13T16:00:00.000Z</published>
    <updated>2017-03-13T23:44:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>This books is published on 2012, some information is outdated. But it is still a good start to get deeper understand on javascript, not only the language itself, also the implementation in different browsers. The book spent certain pages to explain the workaround in IE, we can just skip them. This book skips some JavaScript specification which does not implemented by any browser (at that time). We may need to get up-to-date information from other place</p>
<a id="more"></a>
<h1 id="Chapter-1-What-is-JavaScript"><a href="#Chapter-1-What-is-JavaScript" class="headerlink" title="Chapter 1: What is JavaScript?"></a>Chapter 1: What is JavaScript?</h1><ul>
<li>ECMAScript != JavaScript<ul>
<li>ECMAScript is part of JavaScript</li>
<li>JavaScript include<ul>
<li>The Core (ECMAScript)</li>
<li>The Document Object Model</li>
<li>The Browser Object Model</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="The-Document-Object-Model"><a href="#The-Document-Object-Model" class="headerlink" title="The Document Object Model"></a>The Document Object Model</h2><ul>
<li>DOM provides methods and interfaces for working with the content of a web page</li>
<li>Allow programmer change the page appearance without reload the page</li>
<li>DOM is also implement in other language</li>
<li>DOM levels<ul>
<li>Level 1<ul>
<li>DOM core: map xml based document to data structure which is easy to access<ul>
<li>Should be DOM tree, but I don’t know does it provide extra feature</li>
</ul>
</li>
<li>DOM HTML: extended DOM core by adding HTML-specific objects and method</li>
</ul>
</li>
<li>Level 2<ul>
<li>DOM View</li>
<li>DOM Events</li>
<li>DOM style</li>
<li>DOM Traversal and Range</li>
</ul>
</li>
<li>Level 3<ul>
<li>DOM Load and Save</li>
<li>DOM Validation</li>
<li>Extended DOM core to support all XML 1.0</li>
</ul>
</li>
</ul>
</li>
<li>Other DOMs<ul>
<li>SVG</li>
<li>MathML</li>
<li>Synchronized Multimedia Integration Language (SMIL)</li>
</ul>
</li>
</ul>
<h2 id="The-Browser-Object-Model-BOM"><a href="#The-Browser-Object-Model-BOM" class="headerlink" title="The Browser Object Model (BOM)"></a>The Browser Object Model (BOM)</h2><ul>
<li>BOM provides methods and interfaces for interacting with the browser<ul>
<li>pop up new windows</li>
<li>move, resize and close browser windows</li>
<li><code>navigator</code> object</li>
<li><code>location</code> object</li>
</ul>
</li>
<li>It is not standardize for a long time, until HTML5</li>
</ul>
<h1 id="Chapter-2-JavaScript-in-HTML"><a href="#Chapter-2-JavaScript-in-HTML" class="headerlink" title="Chapter 2: JavaScript in HTML"></a>Chapter 2: JavaScript in HTML</h1><ul>
<li>Traditionally, we put JavaScript on header<ul>
<li>It is download and parsed before content (blocking)</li>
<li>Use <code>async</code> and <code>defer</code> attributes in <code>&lt;script&gt;</code></li>
</ul>
</li>
<li>Or put it at the end of body, so the html content is parsed first</li>
</ul>
<h2 id="Defer"><a href="#Defer" class="headerlink" title="Defer"></a>Defer</h2><ul>
<li>The purpose of defer is to indicate that a script won’t be changing the structure of the page as it executes.<ul>
<li>Even the HTML5 specific defer script will run in order, but this may not happen in real world.</li>
<li>So keep at most one defer script</li>
</ul>
</li>
<li>Script can be loaded before DOMContentLoaded</li>
</ul>
<h2 id="Async"><a href="#Async" class="headerlink" title="Async"></a>Async</h2><ul>
<li>async, run immediately after download, can run before or after DOMContentloaded, but guaranteed before loaded</li>
</ul>
<h2 id="Inline-script-in-XHTML"><a href="#Inline-script-in-XHTML" class="headerlink" title="Inline script in XHTML"></a>Inline script in XHTML</h2><ul>
<li>Less than sign make in script tag make XHTML broken, as it is consider as an open tag<ul>
<li>Use &lt;</li>
<li>Use CDATA section</li>
</ul>
</li>
</ul>
<h2 id="External-script-is-better"><a href="#External-script-is-better" class="headerlink" title="External script is better"></a>External script is better</h2><ul>
<li>Maintainable</li>
<li>Caching</li>
<li>Future-proof<ul>
<li>Don’t need to use the hack for XHTML</li>
<li>Same script work in both HTML and XTHML</li>
</ul>
</li>
</ul>
<h1 id="Chapter-3-Language-Basics"><a href="#Chapter-3-Language-Basics" class="headerlink" title="Chapter 3: Language Basics"></a>Chapter 3: Language Basics</h1><ul>
<li>variable not declared by <code>var</code> will be global</li>
<li><code>typeof</code> null return <code>object</code></li>
<li><code>typeof</code> regex is object (chrome 7 have a bug, which return function)</li>
<li>variable not declared !== undefined variable<ul>
<li>using variables not declared throw error (reference error)</li>
</ul>
</li>
<li><code>typeof</code> variables not declared return undefined</li>
</ul>
<h2 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h2><ul>
<li>octal number start with 0</li>
<li>octal number is invalid in strict mode</li>
<li>octal number can be tricky: 078-077 = 15</li>
<li>number large than max value or small than smallest value will become (negative) infinity</li>
<li><code>typeof</code> NaN is number</li>
<li>NaN will make the computation return NaN</li>
<li>NaN not equal to any value<ul>
<li>so we have to use isNaN()</li>
</ul>
</li>
</ul>
<h2 id="Number-vs-Parser-Int"><a href="#Number-vs-Parser-Int" class="headerlink" title="Number vs Parser Int"></a>Number vs Parser Int</h2><ul>
<li>be careful when parsing number with leading 0<ul>
<li>number start with 0 will be consider as octal number</li>
<li>always include 10 in second parameter</li>
</ul>
</li>
</ul>
<h2 id="Built-in-object-method"><a href="#Built-in-object-method" class="headerlink" title="Built in object method"></a>Built in object method</h2><ul>
<li><code>null</code> and <code>undefined</code> don’t have toString()</li>
<li><code>String()</code> alway return string, it is good when you don’t know the value whether null or undefined</li>
<li>Can also convert to string by concatenating empty string<ul>
<li>I think it is more straight forward.</li>
</ul>
</li>
<li><code>hasOwnProperty(&#39;propertyName&#39;)</code> checks the property exist (do not check prototype)</li>
<li><code>propertyIsEnumerable(&#39;propertyName&#39;)</code>, whether can use for-in</li>
<li><code>toLocateString()</code> return localization string</li>
<li><code>valueOf()</code>, <code>toString()</code> will be called if apply operator on object</li>
</ul>
<p><strong>Notice that BOM and DOM is not included in ES standard, they may or may not follow the ES object standard</strong></p>
<h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><ul>
<li>bitwise operator<ul>
<li>value converted to number by Number() (32 bit numbers)</li>
</ul>
</li>
<li><code>arguments</code> is an array-like object, but it is not array</li>
<li>string is not object in JavaScript, unlike other language</li>
<li>ECMA-262 specifies that any object implementing the internal [[Call]] method should return “function” from typeof<ul>
<li>user defined <code>call()</code> seems does not works</li>
</ul>
</li>
</ul>
<h1 id="Chapter-4-Variables-Scope-and-Memory"><a href="#Chapter-4-Variables-Scope-and-Memory" class="headerlink" title="Chapter 4: Variables, Scope, and Memory"></a>Chapter 4: Variables, Scope, and Memory</h1><ul>
<li>In browser, global context = windows</li>
<li>5 types of scope in browser<ul>
<li>global, function, eval(), catch block, with block</li>
</ul>
</li>
<li>browser optimized variable look up, don’t worry about access variable from different scope</li>
<li>Circular reference no longer leak memory, in browser</li>
<li>Garbage collect can be trigger by code in some browser, but it is not recommended</li>
<li>Release memory by dereference them (set variable to null)</li>
</ul>
<h1 id="Chapter-5-Reference-Types"><a href="#Chapter-5-Reference-Types" class="headerlink" title="Chapter 5 Reference Types"></a>Chapter 5 Reference Types</h1><ul>
<li>Function interface<ul>
<li>The best approach is to use named arguments for those that are required arguments</li>
<li>And an object literal to encompass multiple optional arguments.</li>
</ul>
</li>
<li>Use <code>{}</code> and <code>[]</code> create object and array, the <code>Object()</code> and <code>Array()</code> constructor is not called</li>
<li>Arrays can contain a maximum of 4,294,967,295 items.<ul>
<li>If you try to add more than that number, an exception occurs.</li>
<li>A long-running script error may be thrown before you reach the arrays’ maximum.</li>
</ul>
</li>
<li><code>instanceof</code> assumes a single global execution context.<ul>
<li>Different frames in a web page haves distinct global execution contexts and therefore two versions of the Array constructor.</li>
<li>If you were to pass an array from one frame into a second frame, that array has a different constructor function than an array created natively in the second frame.</li>
<li>To solve this problem, ECMAScript 5 introduced the Array.isArray() method</li>
</ul>
</li>
<li><code>toString()</code> of date object of different browser return stings with different format</li>
<li>use string to define regex, need to escape the slash as it is escape character in string (not regex)<ul>
<li><code>source</code> property in regex object does not have slash</li>
<li>Better not to use string to create REGEX</li>
</ul>
</li>
<li>function constructor is not recommended, as it caused performance issue.</li>
<li>strict mode does not support <code>callee</code> and <code>caller</code><ul>
<li>Using <code>arguments.callee</code> can decouple recursive functions</li>
<li><code>arguments.callee.caller</code> return parent function</li>
</ul>
</li>
<li><code>length</code> property of a function is # of named arguments</li>
<li>In strict mode, the <code>this</code> value of a function called without a context object is not coerced to window.<ul>
<li><code>this</code> becomes undefined unless explicitly set by either attaching the function to an object or using apply() or call().</li>
</ul>
</li>
<li>Primitive type cannot have custom properties<ul>
<li>Can workaround by using constructor to create primitive type wrapper<ul>
<li><code>var j = new Number(1234);</code></li>
</ul>
</li>
<li><code>typeof</code> return Object for primitive type wrapper</li>
</ul>
</li>
<li>There was method to format HTML dynamically, but it is not implemented by browsers now.</li>
<li>Singleton object<ul>
<li>global scope and Math</li>
</ul>
</li>
<li>In strict mode, the variable created in eval() cannot be access from outside</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This books is published on 2012, some information is outdated. But it is still a good start to get deeper understand on javascript, not only the language itself, also the implementation in different browsers. The book spent certain pages to explain the workaround in IE, we can just skip them. This book skips some JavaScript specification which does not implemented by any browser (at that time). We may need to get up-to-date information from other place&lt;/p&gt;
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
  <entry>
    <title>文集十三</title>
    <link href="http://199911.github.io/insight/2017/02/19/readings-13/"/>
    <id>http://199911.github.io/insight/2017/02/19/readings-13/</id>
    <published>2017-02-18T16:00:00.000Z</published>
    <updated>2017-02-19T13:51:03.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="混合型的-Javascript"><a href="#混合型的-Javascript" class="headerlink" title="混合型的 Javascript"></a><a href="http://www.codemud.net/~thinker/GinGin_CGI.py/show_id_doc/476" target="_blank" rel="external">混合型的 Javascript</a></h1><p>Generate javascript code from server side. The use case in example is generating database connect function. It is a quite interesting idea, but I cannot come up with any use cases.</p>
<a id="more"></a>
<h1 id="快樂的小成就"><a href="#快樂的小成就" class="headerlink" title="快樂的小成就"></a><a href="http://www.codemud.net/~thinker/GinGin_CGI.py/show_id_doc/469" target="_blank" rel="external">快樂的小成就</a></h1><p>Quite interesting idea. The article suggest us to enjoy every little small progress. It is ok to be confident, even the how small the achievements are.</p>
<h1 id="反思「過早最佳化是萬惡的根源」"><a href="#反思「過早最佳化是萬惡的根源」" class="headerlink" title="反思「過早最佳化是萬惡的根源」"></a><a href="http://www.codemud.net/~thinker/GinGin_CGI.py/show_id_doc/472" target="_blank" rel="external">反思「過早最佳化是萬惡的根源」</a></h1><p><code>Early optimization is root of evil</code> is reasonable on performance optimization. If we put this idea into architecture and system design, it would bring some problems. Because other team mate will follow the pattern of the system. The bad design and pattern will be reproduced if we don’t fix it in early stage. Therefore, architecture and system design have to be well planned and design as soon as possible.</p>
<h1 id="真正的「矽谷精神」是讓年輕人不需要賭身家，就有資源實現自己的技術和理想"><a href="#真正的「矽谷精神」是讓年輕人不需要賭身家，就有資源實現自己的技術和理想" class="headerlink" title="真正的「矽谷精神」是讓年輕人不需要賭身家，就有資源實現自己的技術和理想"></a><a href="https://hk.thenewslens.com/article/61910" target="_blank" rel="external">真正的「矽谷精神」是讓年輕人不需要賭身家，就有資源實現自己的技術和理想</a></h1><p>金句：</p>
<ul>
<li>新創公司就是要突破傳統，要選擇最激進的路。拿自己的錢出來，玩自己的公司，容易考慮太保守，失敗的機率就很大</li>
<li>矽谷的精髓不在這些新創的技術，而是這樣一個良好的生態圈。如果我們的新創公司，需要年輕人傾家蕩產，把所有的東西和人脈一次賭出去，做決策的時候一定綁手綁腳，無法做出正確的決定。</li>
</ul>
<h1 id="JavaScript-Type-and-Code-Coverage-Profiling"><a href="#JavaScript-Type-and-Code-Coverage-Profiling" class="headerlink" title="JavaScript Type and Code Coverage Profiling"></a><a href="https://webkit.org/blog/3846/type-profiling-and-code-coverage-profiling-for-javascript/" target="_blank" rel="external">JavaScript Type and Code Coverage Profiling</a></h1><p>原來safari inspector 有 type 同 code coverage profiling</p>
<p><a href="https://blog.jscrambler.com/how-captcha-works/" target="_blank" rel="external">How CAPTCHA Works</a></p>
<p>Interesting history of CAPTCAH</p>
<ul>
<li>The text image is generated by machine from normal text.<ul>
<li>Distorting text and adding background</li>
</ul>
</li>
<li>There are audio version for blinds<ul>
<li>Background noise is added</li>
</ul>
</li>
<li>The second generation of Captcha ask user to recognizing image<ul>
<li>Easier than recognizing distorted text</li>
<li>Mobile friendly</li>
<li>More difficult question for machine</li>
</ul>
</li>
<li>new reCaptcha analysis browser history<ul>
<li>Fallback to image / text recognition if cannot determine</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;混合型的-Javascript&quot;&gt;&lt;a href=&quot;#混合型的-Javascript&quot; class=&quot;headerlink&quot; title=&quot;混合型的 Javascript&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.codemud.net/~thinker/GinGin_CGI.py/show_id_doc/476&quot;&gt;混合型的 Javascript&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Generate javascript code from server side. The use case in example is generating database connect function. It is a quite interesting idea, but I cannot come up with any use cases.&lt;/p&gt;
    
    </summary>
    
      <category term="Insight" scheme="http://199911.github.io/categories/Insight/"/>
    
    
  </entry>
  
  <entry>
    <title>Udemy: Introduction to CSS Development</title>
    <link href="http://199911.github.io/diary/2017/02/12/udemy-introduction-to-css-development/"/>
    <id>http://199911.github.io/diary/2017/02/12/udemy-introduction-to-css-development/</id>
    <published>2017-02-11T16:00:00.000Z</published>
    <updated>2017-02-12T10:37:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>It is a free Course. The first few section is simple and basic, you can learn those thing from lots of place. But the ‘CSS architecture’ section make this worth taking. I may write another post to talk about that part.</p>
<h2 id="Points"><a href="#Points" class="headerlink" title="Points"></a>Points</h2><ul>
<li>Horizontal margin<ul>
<li>It does not mention any limitation on these two methods, I am quite disappointed</li>
</ul>
</li>
<li>vertical-align<ul>
<li>The table cell will fill the table by default, it is the drawback of table-cell method.</li>
</ul>
</li>
<li>Clearfix<ul>
<li>It is good. Drawback is mentioned.</li>
<li>But it is basically the content of <a href="https://css-tricks.com/all-about-floats/" target="_blank" rel="external">All About Floats</a></li>
<li>If you want to see live demo, you can watch the video, otherwise, the article is better.</li>
</ul>
</li>
<li>Specificity<ul>
<li>The <a href="http://specificity.keegan.st/" target="_blank" rel="external">calculator</a> may be useful</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;It is a free Course. The first few section is simple and basic, you can learn those thing from lots of place. But the ‘CSS architecture’ 
    
    </summary>
    
      <category term="Diary" scheme="http://199911.github.io/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>文集十二</title>
    <link href="http://199911.github.io/insight/2017/02/11/readings-12/"/>
    <id>http://199911.github.io/insight/2017/02/11/readings-12/</id>
    <published>2017-02-10T16:00:00.000Z</published>
    <updated>2017-02-18T17:05:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Web-Dev’s-Valentine"><a href="#A-Web-Dev’s-Valentine" class="headerlink" title="A Web Dev’s Valentine"></a><a href="http://codepen.io/AllThingsSmitty/pen/pNLVWm/" target="_blank" rel="external">A Web Dev’s Valentine</a></h1><p>Create a heart with CSS and html</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">.heart:before,</div><div class="line">.heart:after &#123;</div><div class="line">  background: #cd231b;</div><div class="line">  border-radius: 50px 50px 0 0;</div><div class="line">  content: &quot;&quot;;</div><div class="line">  height: 25px;</div><div class="line">  left: 15px;</div><div class="line">  position: absolute;</div><div class="line">  transform: rotate(-45deg);</div><div class="line">  transform-origin: 0 100%;</div><div class="line">  width: 15px;</div><div class="line">&#125;</div><div class="line">.heart:after &#123;</div><div class="line">  left: 0;</div><div class="line">  transform: rotate(45deg);</div><div class="line">  transform-origin: 100% 100%;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Dear-JavaScript-Maintainers"><a href="#Dear-JavaScript-Maintainers" class="headerlink" title="Dear JavaScript Maintainers,"></a><a href="http://thefullstack.xyz/dear-javascript-maintainers/" target="_blank" rel="external">Dear JavaScript Maintainers,</a></h1><p>MIT license stated the code is not guarenteed to work properly.</p>
<h1 id="JavaScript-Will-Finally-Get-Proper-Asynchronous-Programming"><a href="#JavaScript-Will-Finally-Get-Proper-Asynchronous-Programming" class="headerlink" title="JavaScript Will Finally Get Proper Asynchronous Programming"></a><a href="http://thenewstack.io/async-officially-coming-javascript-year/" target="_blank" rel="external">JavaScript Will Finally Get Proper Asynchronous Programming</a></h1><p><code>async</code> will be available in ES2017. It make the javascript non blocking, even there are long running code.</p>
<h1 id="The-end-of-the-clearfix-hack"><a href="#The-end-of-the-clearfix-hack" class="headerlink" title="The end of the clearfix hack?"></a><a href="https://www.rachelandrew.co.uk/archives/2017/01/24/the-end-of-the-clearfix-hack/" target="_blank" rel="external">The end of the clearfix hack?</a></h1><p>We apply clearfix hack to float element container to prevent it collapse. But there a new value <code>flow-root</code> for <code>display</code> to solve this problem. We don’t need to have clearfix hack in the future.<br>FYI: <a href="http://caniuse.com/#search=flow-root" target="_blank" rel="external">Can I Use</a></p>
<h1 id="CSS-only-3d-Macbook-Air"><a href="#CSS-only-3d-Macbook-Air" class="headerlink" title="CSS only 3d Macbook Air"></a><a href="http://codepen.io/neoberg/full/istyp/" target="_blank" rel="external">CSS only 3d Macbook Air</a></h1><p>Crazy CSS and HTML only macbook air animation</p>
<h1 id="Hard-Reset-Using-the-CSS-Initial-Value"><a href="#Hard-Reset-Using-the-CSS-Initial-Value" class="headerlink" title="Hard Reset: Using the CSS Initial Value"></a><a href="http://thenewcode.com/1172/Hard-Reset-Using-the-CSS-Initial-Value" target="_blank" rel="external">Hard Reset: Using the CSS Initial Value</a></h1><p><code>initial</code> value reset the property to default value of user’s browser. So the normalized style will be reset too.<br><code>initial</code> does not work in all IE, even IE 11. WTF.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;A-Web-Dev’s-Valentine&quot;&gt;&lt;a href=&quot;#A-Web-Dev’s-Valentine&quot; class=&quot;headerlink&quot; title=&quot;A Web Dev’s Valentine&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen
    
    </summary>
    
      <category term="Insight" scheme="http://199911.github.io/categories/Insight/"/>
    
    
  </entry>
  
  <entry>
    <title>All about css float</title>
    <link href="http://199911.github.io/review/2017/02/08/all-about-css-float/"/>
    <id>http://199911.github.io/review/2017/02/08/all-about-css-float/</id>
    <published>2017-02-07T16:00:00.000Z</published>
    <updated>2017-02-08T15:15:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>This article explain the behaviour of CSS float property. I like this article because it compare float with other CSS layout properties, but it is an old post from 2008.</p>
<h2 id="Auto-reflow"><a href="#Auto-reflow" class="headerlink" title="Auto reflow"></a>Auto reflow</h2><p>Float can reflow after resize (Push the adjacent element automatically). If use <code>position: absolute;</code>, the resized element may cover adjacent elements.</p>
<h2 id="Three-clear-float-solutions"><a href="#Three-clear-float-solutions" class="headerlink" title="Three clear float solutions"></a>Three clear float solutions</h2><ul>
<li>The Empty Div Method:<ul>
<li>Add an empty div with <code>clear: both;</code></li>
</ul>
</li>
<li>The overflow method:<ul>
<li>If this property is set to auto or hidden on the parent element, the parent will expand to contain the floats</li>
</ul>
</li>
<li>The Easy Clearing Method:<ul>
<li>Use the following CSS (also used by bootstrap 3)<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.clearfix:after &#123;</div><div class="line">   content: &quot;.&quot;;</div><div class="line">   visibility: hidden;</div><div class="line">   display: block;</div><div class="line">   height: 0;</div><div class="line">   clear: both;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="Problems-with-floats"><a href="#Problems-with-floats" class="headerlink" title="Problems with floats"></a>Problems with floats</h2><ul>
<li>Push down<ul>
<li>The image overflow from parent and push the adjacent elements downward.</li>
</ul>
</li>
</ul>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://css-tricks.com/all-about-floats/" target="_blank" rel="external">All About Floats</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This article explain the behaviour of CSS float property. I like this article because it compare float with other CSS layout properties, 
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
  <entry>
    <title>Udemy: 掌握 Git &amp; Github 程式時光機</title>
    <link href="http://199911.github.io/diary/2017/02/07/udemy-git-and-github/"/>
    <id>http://199911.github.io/diary/2017/02/07/udemy-git-and-github/</id>
    <published>2017-02-06T16:00:00.000Z</published>
    <updated>2017-02-07T15:49:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前係Facebook見到有couple，可以免費Take。</p>
<p>課程用普通話，係台灣人教，內容比較基本，冇咩特別。除左tag之外，入邊D feature我平時有用開，入邊教D野太簡單，冇咩大insight。就算係tag果part，都只係一個簡單嘅overview。</p>
<p>我睇左個course先知原來Github可以用 <code>master</code> branch做Github page，己經唔洗特別整一條 <code>gh-pages</code> branch。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前係Facebook見到有couple，可以免費Take。&lt;/p&gt;
&lt;p&gt;課程用普通話，係台灣人教，內容比較基本，冇咩特別。除左tag之外，入邊D feature我平時有用開，入邊教D野太簡單，冇咩大insight。就算係tag果part，都只係一個簡單嘅overview
    
    </summary>
    
      <category term="Diary" scheme="http://199911.github.io/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>Using Redux in server-side</title>
    <link href="http://199911.github.io/diary/2017/01/29/using-redux-in-backend/"/>
    <id>http://199911.github.io/diary/2017/01/29/using-redux-in-backend/</id>
    <published>2017-01-28T16:00:00.000Z</published>
    <updated>2017-01-29T14:10:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>Redux store the state of whole app into a single object. Which make the system’s state transition predictable and manageable. I try to apply Redux as an event system in backend. But unfortunately, it does not work.</p>
<a id="more"></a>
<h1 id="How-I-use-Redux-in-server-side"><a href="#How-I-use-Redux-in-server-side" class="headerlink" title="How I use Redux in server side"></a>How I use Redux in server side</h1><p>My idea is, every time user send a request to server, we queue it up (add the request to store). After that the server will take action base on the state. The server subscribes the change of store and decide which action to take.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(Server router get request) -&gt; (dispatch action) -&gt; (reducer put the request in the state)</div><div class="line">                                    ^                                  |</div><div class="line">                                    |                                  v</div><div class="line">                         (Server process requests) -&gt;  (Server subscribe the change)</div></pre></td></tr></table></figure>
<p>The diagram looks good, the logic flow is very clear. But there are lots of problems during implementation</p>
<h2 id="Server-action-care-actions-not-states"><a href="#Server-action-care-actions-not-states" class="headerlink" title="Server action care actions, not states"></a>Server action care actions, not states</h2><p>In server side, the most logic only care ‘changes’, not ‘state’. Take web server as an example.</p>
<p>At first, there are no request, so the store looks like <code>{queue: []}</code>.<br>When there is a ‘index.html’ request, I will store the request in the queue and start processing it. The store looks like <code>{queue: [&#39;index.html&#39;]}</code>.<br>If we get ‘index.html’ request from another user, we can found there is a same request. From the app state, we don’t know we are computing the result or not, we don’t know should we process the request.<br>Therefore, we have to store the state of request. like<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  queue: [</div><div class="line">    &#123;page:&apos;index.html&apos;, state:&apos;processing&apos;&#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>And we need to have lots of action and reducer to transit the state of request.</p>
<p>These kind of state does not means much in server side. If the request is processing, we only need to wait, we don’t have logic hooked on the <code>processing</code> state. But in client side, we may have a lot UI to update when the request is processing, the state will be very useful to prevent user from confusion.</p>
<p>Short conclusion: Redux keeps all app state in a clear way. It is very important in client side, because we need to guarantee the data present to user is consistent and up-to-date. But in server side logic, we only care “what is do we need to process”, instead of “what are we processing now”. Using “state first” approach in server side introduce lots of boilerplate code.</p>
<h2 id="Hook-and-Anchor-pattern-implementation-is-complex-in-Redux"><a href="#Hook-and-Anchor-pattern-implementation-is-complex-in-Redux" class="headerlink" title="Hook and Anchor pattern implementation is complex in Redux"></a>Hook and Anchor pattern implementation is complex in Redux</h2><p>Hook and anchor pattern is useful in server side, like the <code>the_content</code> hook in Wordpress, which will be call before the post content sent to client, allow programmer inject customization content component easily. But in Redux, the implementation is not very straight forward.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">const reducer = (action, state) =&gt; &#123;</div><div class="line">  switch(action.type) &#123;</div><div class="line">    &apos;UPDATE_FETCH_POST_STATE&apos;:</div><div class="line">      return action.state;</div><div class="line">    ...</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">dispatch(&#123;type:&apos;UPDATE_FETCH_POST_STATE&apos;, state:&apos;preparing&apos;&#125;);</div><div class="line">dispatch(&#123;type:&apos;UPDATE_FETCH_POST_STATE&apos;, state:&apos;running&apos;&#125;);</div><div class="line">fetchPost()</div><div class="line">  .then(() =&gt; &#123;</div><div class="line">    dispatch(&#123;type:&apos;UPDATE_FETCH_POST_STATE&apos;, state:&apos;done&apos;&#125;);</div><div class="line">  &#125;)</div></pre></td></tr></table></figure>
<p>To implement the filter, we need to have 2 action to change the state to preparing and running. Because the ‘event subscriber’ in Redux can only see the state, we need to create a short ‘section’ to notify the subscriber. The implementation is more complex than the pub-sub.</p>
<h2 id="Difficult-to-handle-async-hook-handler-in-Redux"><a href="#Difficult-to-handle-async-hook-handler-in-Redux" class="headerlink" title="Difficult to handle async hook handler in Redux"></a>Difficult to handle async hook handler in Redux</h2><p>As dispatch does not return the anything about the subscriber, don’t know what subscriber did. If the subscriber is async, we cannot know it is finished or not. In some scenarios, it is a big problem.</p>
<p>For example, I want to insert the author data in post content, we need to run <code>getAuthorAsync()</code> before sent the content. We cannot guarantee <code>getAuthorAsync()</code> finished before <code>fetchPost()</code> using <code>dispatch()</code>.</p>
<p>In another implementation, we can implement this in a very simple way.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">// Return all return value of hook handlers</div><div class="line">const handlers = willFetchPostHooks();</div><div class="line">Promise.all(handlers)</div><div class="line">  .then(() =&gt; &#123;</div><div class="line">    return fetchPost();</div><div class="line">  &#125;)</div><div class="line">  .then((post) =&gt; &#123;</div><div class="line">    ...</div><div class="line">    return Promise.all(didFetchPostHooks());</div><div class="line">  &#125;)</div></pre></td></tr></table></figure></p>
<p>Asynchronous hooks are very common in server side, as most task in backend take a longer process time. But in client side, it is not a big problem, as most of the action (UI update) are short and synchronous.</p>
<h1 id="Better-way-in-server-side"><a href="#Better-way-in-server-side" class="headerlink" title="Better way in server side"></a>Better way in server side</h1><p>Redux separate the state of each component, and store them in a single store. But we don’t need to do it in server side, because server side logic don’t have lots of share states. Using traditional OOP, each object take care of their own states may be good enough.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Redux store the state of whole app into a single object. Which make the system’s state transition predictable and manageable. I try to apply Redux as an event system in backend. But unfortunately, it does not work.&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="http://199911.github.io/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>&quot;CSS: The Definitive Guide 3rd Edition&quot; part 2</title>
    <link href="http://199911.github.io/review/2017/01/22/css-the-definitive-guide-3rd-edition-2/"/>
    <id>http://199911.github.io/review/2017/01/22/css-the-definitive-guide-3rd-edition-2/</id>
    <published>2017-01-21T16:00:00.000Z</published>
    <updated>2017-01-22T12:54:55.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="4-Values-and-Units"><a href="#4-Values-and-Units" class="headerlink" title="4 Values and Units"></a>4 Values and Units</h1><ul>
<li>There are only 17 defined color in css 2.1, but CSS 3 have 140 color, which recongized by most browsers.</li>
<li><code>rgb(50%, 0%, 100%)</code> is a valid color</li>
<li>The “web-safe” colors are those colors that generally avoid dithering on 256-color computer systems<ul>
<li>Value can be express in multiple of 20%</li>
<li>I think we don’t need to care these nowadays</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h2 id="Length-units"><a href="#Length-units" class="headerlink" title="Length units"></a>Length units</h2><ul>
<li>Valid units: <code>in</code>, <code>cm</code>, <code>mm</code>, <code>pt</code>, <code>pc</code> (picas)</li>
<li><code>em</code> and <code>ex</code> stand for “em-height” and “x-height”<ul>
<li>Different fonts with same <code>em</code> may have different <code>ex</code>, as the font design is different<ul>
<li>But in practical, not all font have <code>ex</code> defined, will fallback to convention (<code>0.5 em</code> = <code>1 ex</code>)</li>
</ul>
</li>
</ul>
</li>
<li><code>1 em</code> = <code>14 px</code></li>
<li><code>12 pt</code> = <code>1 pc</code></li>
<li><code>72 pt</code> = <code>1 in</code> is only correct in classic mac, as the monitor have different ppi (pt per in).<ul>
<li>Don’t assume OS can convert <code>pt</code> to accurate length on monitor, it is the reason to avoid <code>pt</code>.</li>
</ul>
</li>
<li><code>in</code> is a reliable unit</li>
<li>Absolute unit (in, cm, mm) is more useful in <code>print</code> media</li>
<li><code>px</code> may scale when print, so it is defined as relative unit</li>
<li><code>ex</code> is not commonly used, use <code>em</code> or <code>px</code> is better</li>
</ul>
<h2 id="List-of-value"><a href="#List-of-value" class="headerlink" title="List of value"></a>List of value</h2><ul>
<li>number</li>
<li>color</li>
<li>uri</li>
<li>keyword</li>
<li>angle (deg, grad, rad)</li>
<li>time</li>
<li>frequency</li>
</ul>
<h1 id="5-Fonts"><a href="#5-Fonts" class="headerlink" title="5 Fonts"></a>5 Fonts</h1><ul>
<li>Don’t forget provide fallback for font family</li>
<li>Use quotation mark as font family may have special characters</li>
<li>Fonts have variant<ul>
<li>Example: Zurich Bold, Zurich Black, Zurich UltraBlack, Zurich Light, and Zurich Regular</li>
<li><code>font-weight</code> is using different font variant</li>
<li><code>font-weight</code> to font variant conversion is complex, check the book if needed.</li>
</ul>
</li>
<li>lighter / bolder is relative value<ul>
<li>Increase / decrease <code>font-weight</code> inherit by parent</li>
</ul>
</li>
<li>Font size is the size of em box<ul>
<li>From baseline to extra leading</li>
<li>Font size is not size of any characters</li>
</ul>
</li>
<li>There absolutive and relative font size value keywords<ul>
<li>Absolute keywords: (increase or decrease by a constant factor for each keywords)</li>
<li>Relative keywords: (larger / smaller) same factor as absolute keywords<ul>
<li>Relative keywords in font size and weight is useful when define style of tags like <code>&lt;em&gt;</code>, <code>&lt;strong&gt;</code></li>
</ul>
</li>
</ul>
</li>
<li>Percentage value in font-size is effectively cumulative<ul>
<li>PS: Round off to integer</li>
</ul>
</li>
<li>Small caps font variant<ul>
<li>Instead of upper and lowercase letters, a small-caps font employs uppercase letters of different sizes.</li>
</ul>
</li>
<li><code>font-stretch</code> and <code>font-size-adjust</code> are not implemented</li>
</ul>
<h2 id="System-fonts"><a href="#System-fonts" class="headerlink" title="System fonts"></a>System fonts</h2><p>These are used to take the font size, family, weight, style, and variant of elements of the operating system, and apply them to an element.</p>
<ul>
<li>caption</li>
<li>icon</li>
<li>menu</li>
<li>message-box</li>
<li>small-caption</li>
<li>status-bar</li>
</ul>
<h2 id="Font-synthesis"><a href="#Font-synthesis" class="headerlink" title="Font synthesis"></a>Font synthesis</h2><p>From <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font-synthesis" target="_blank" rel="external">MDN</a>, <code>font-synthesis</code> control the generaton of missing typefaces</p>
<h1 id="6-Text-Properties"><a href="#6-Text-Properties" class="headerlink" title="6 Text Properties"></a>6 Text Properties</h1><ul>
<li><p><code>text-indent</code></p>
<ul>
<li>Only works on block level elements. Use padding in inline elements</li>
<li>Percentage is relative to the parent’s width</li>
<li>Always inherited the computed value, not declared value</li>
</ul>
</li>
<li><p><code>text-align</code> can be ugly when</p>
<ul>
<li>the container is too narrow</li>
<li>the word are too long (can use hyphenation)</li>
</ul>
</li>
<li><p><code>line-height</code></p>
<ul>
<li>The line will be short when the children have a larger font size</li>
<li>Use factors (number without value) to overcome inheritances problem<ul>
<li>Because the value is relative to font size</li>
</ul>
</li>
</ul>
</li>
<li><p><code>vertical-align</code> does not work on block elements</p>
<ul>
<li>We can use it to align <code>inline-block</code> and <code>inline</code> elements</li>
</ul>
</li>
<li><p><code>text-decoration</code> is not inherited, but the decoration is still appear in children (it is from parent, not children’s decoration)</p>
<ul>
<li>To remove the children’s decoration, use text-decoration: none;<ul>
<li>In other elements, we use <code>initial</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="White-space"><a href="#White-space" class="headerlink" title="White space"></a>White space</h2><ul>
<li>pre: keep all, no auto line wrapping (no line break unless there are new line character)</li>
<li>pre-wrap: keep all space, and line wrap normally</li>
<li>pre-line: collapse the space within the same line, and line wrap normally</li>
</ul>
<h2 id="Text-direction"><a href="#Text-direction" class="headerlink" title="Text direction"></a>Text direction</h2><p><code>direction</code> affects the writing direction of text in a block-level element, the direction of table column layout, the direction in which content horizontally overflows its element box, and the position of the last line of a fully justified element.<br>For inline elements, direction applies only if the property unicode-bidi is set to either embed or bidi-override.<br>For top to bottom language, CSS 3 have writing mode</p>
<h1 id="7-Basic-Visual-Formatting"><a href="#7-Basic-Visual-Formatting" class="headerlink" title="7 Basic Visual Formatting"></a>7 Basic Visual Formatting</h1><ul>
<li>margin can be negative, but size, padding and border cannot be negative</li>
<li>The computed value of percentage size is taken as the height of the containing block-level</li>
<li>Size <code>auto</code> is the minimum size that contain the whole content</li>
</ul>
<h2 id="Collapsing-margin"><a href="#Collapsing-margin" class="headerlink" title="Collapsing margin"></a>Collapsing margin</h2><p>Only vertical will collapse. not horizontal margins. For other case, refer to <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing" target="_blank" rel="external">MDN</a>.</p>
<ul>
<li>anonymous text<ul>
<li>the texts in inline elements but don’t inside the nested inline element</li>
</ul>
</li>
<li>em box</li>
<li>inline box</li>
<li>content area</li>
<li>leading<ul>
<li>height of the box = line-height (box of one line)</li>
</ul>
</li>
<li>line box<ul>
<li>shortest box bounds the highest and the lowest points of inline boxes (multi line inline box)</li>
</ul>
</li>
<li>percentage value of vertical-align take value from line-height<ul>
<li>Because vertical-align is align in line level, not block level</li>
</ul>
</li>
<li>Line in the same block can have different computed value of line-height, if we use number without unit<ul>
<li>It is computed base on height of elements in each line.</li>
</ul>
</li>
<li>Characters are usually smaller than their em boxes<ul>
<li>But cursives fonts usually have character glyphs larger than their em boxes.</li>
</ul>
</li>
<li>Adding padding and borders does not affect the height of the inline box</li>
<li>Margin top and bottom does not apply to inline non-replaced elements</li>
<li>Inline replaced element is align to baseline<ul>
<li>which may create a gap which is half leading</li>
</ul>
</li>
<li>Computed value of display can change if an element is floated or positioned.</li>
</ul>
<h1 id="8-Padding-Borders-and-Margins"><a href="#8-Padding-Borders-and-Margins" class="headerlink" title="8 Padding, Borders and Margins"></a>8 Padding, Borders and Margins</h1><ul>
<li>Percentage margin depends on parent’s width, even margin-top and margin-bottom<ul>
<li>If margin-top and margin-bottom depends on parent’s height, there will be infinite loop</li>
<li>The treatment of percentage values for top and bottom margins is different for positioned elements<ul>
<li>I guess it is because the size of element does not depends on parent anymore</li>
</ul>
</li>
</ul>
</li>
<li>Margin top and bottom does not work in inline element<ul>
<li>Only line height, font size and vertical align can change the distance between lines</li>
</ul>
</li>
<li>Default border value<ul>
<li>border: none</li>
<li>weight: medium</li>
<li>color: foreground color</li>
</ul>
</li>
<li>In CSS 2.1, the element’s background is the background of the content, padding, and border areas.</li>
<li>Border cannot have percentage value</li>
</ul>
<h1 id="9-Colors-and-Backgrounds"><a href="#9-Colors-and-Backgrounds" class="headerlink" title="9 Colors and Backgrounds"></a>9 Colors and Backgrounds</h1><ul>
<li><code>color</code> properties also change border color of elements if <code>border-color</code> is not set.</li>
<li>Many form elements have border by default.</li>
<li>Foreground color can be inherited, but not background.</li>
<li><code>transparent</code> is a color keyword</li>
</ul>
<ul>
<li>Background image with background color<ul>
<li>Serve as fallback when image fail to load</li>
<li>Some image have alpha value<ul>
<li>Background image is on top of background color<ul>
<li>Need some extra CSS to set up image overlay</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>The background image-placement context in CSS 2 and 2.1 is the inner border edge</li>
<li><code>background-attachment</code> attaches image to viewport</li>
</ul>
<h2 id="Class-naming"><a href="#Class-naming" class="headerlink" title="Class naming"></a>Class naming</h2><p>It’s actually better to pick class names that describe the type of information contained within, not the visual effect you’re trying to achieve. It’s preferable to pick a class name which actually mean something and, more importantly, are independent of any presentational concepts. So we don’t need to rename if we want to change the visual effect</p>
<h1 id="10-Floating-and-Positioning"><a href="#10-Floating-and-Positioning" class="headerlink" title="10 Floating and Positioning"></a>10 Floating and Positioning</h1><h2 id="Float"><a href="#Float" class="headerlink" title="Float"></a>Float</h2><ul>
<li>Float will convert the element to <code>display: block</code></li>
<li>Negative margin can make a float element higher than parent</li>
<li>when the element is larger than parent it will overflow</li>
<li>An inline box that overlaps with a float has its borders, background, and content all rendered “on top” of the float.</li>
<li>A block box that overlaps with a float has its borders and background rendered “behind” the float, whereas its content is rendered “on top” of the float.</li>
<li>PS: the overlap behavior is independent of source order</li>
<li>Clearance is extra spacing added above an element’s top margin to push it past any floated elements</li>
<li>(percentage) max/min size is useful when use with float elements</li>
</ul>
<h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><ul>
<li>Beside overflow hidden, we can clip the content by <code>clip</code></li>
<li>Clip can have negative value (use with overflow hidden?)<ul>
<li>But the browser implementation is not consistent</li>
</ul>
</li>
<li><code>top: auto;</code> does not align the absolute positioned block vertical center<ul>
<li>It is used to reset the <code>top</code> property</li>
</ul>
</li>
</ul>
<h1 id="11-Table-Layout"><a href="#11-Table-Layout" class="headerlink" title="11 Table Layout"></a>11 Table Layout</h1><ul>
<li>It is impossible to give table cell margin (browser will ignore them)</li>
<li>The position of first table column depends on language direction</li>
<li>The CSS specification discourages, but does not prohibit, the positioning of table cells and other internal table elements.</li>
<li>Table header and footer will be repeated in printed version, if the whole table is not fit in one page</li>
<li>CSS table layout pick the “row primacy” principle:<ul>
<li>User explicitly define row, the browser find the column by calculation (we use <code>tr</code> but no <code>col</code> in table)</li>
<li>In another words, it is row-oriented</li>
</ul>
</li>
<li>Anonymous table object - table with missing cell<ul>
<li>Browser will insert the missing cell automatically</li>
</ul>
</li>
<li>Table layer<ul>
<li>Table elements: cell, row, row groups, columns, columns, table</li>
</ul>
</li>
<li>Table style will be drawn first</li>
<li>Border spacing = cell margin</li>
<li><code>empty-cell: hidden;</code> make browser set empty cell to <code>display: none;</code></li>
</ul>
<h2 id="table-layout"><a href="#table-layout" class="headerlink" title="table-layout"></a>table-layout</h2><ul>
<li><code>auto</code>: the table size is depends on the content</li>
<li><code>fixed</code>: the table size is defined by the first row<ul>
<li><code>fixed</code> layout is fast to render, no need to go through all content</li>
</ul>
</li>
<li>Vertical align content in table center is easy, can use vertical align directly</li>
<li><code>vertical-align</code> will make browser ignore <code>sub</code>, <code>super</code>, <code>text-top</code>, and <code>text-bottom</code> when applied to table cells</li>
<li>Table layout can cause text wrap problem<ul>
<li><code>fixed</code> vs <code>auto</code>?</li>
</ul>
</li>
</ul>
<h1 id="12-List-and-Generated-Content"><a href="#12-List-and-Generated-Content" class="headerlink" title="12 List and Generated Content"></a>12 List and Generated Content</h1><p>CSS does not define the behavior of nonnumeric counting styles for negative counter</p>
<h1 id="13-User-Interface-Styles"><a href="#13-User-Interface-Styles" class="headerlink" title="13 User Interface Styles"></a>13 User Interface Styles</h1><ul>
<li>There are default system style:<ul>
<li>font</li>
<li>color</li>
<li>cursor<ul>
<li>can have graphic cursor</li>
</ul>
</li>
<li>outline</li>
</ul>
</li>
</ul>
<h1 id="14-Non-Screen-Media"><a href="#14-Non-Screen-Media" class="headerlink" title="14 Non-Screen Media"></a>14 Non-Screen Media</h1><h2 id="Print-version"><a href="#Print-version" class="headerlink" title="Print version"></a>Print version</h2><ul>
<li>Some suggested style to apply to printed version<ul>
<li>Overwrite background and font color</li>
<li>No float and no column (width: auto)</li>
<li>Position element out side the page is not a good solution to avoid rendering<ul>
<li>Because this produce lots of blank page in printed version</li>
</ul>
</li>
</ul>
</li>
<li>Some style for paged media<ul>
<li><code>page-break-[before|after|inside]</code> prevent page break insert to the elements</li>
<li><code>widow</code> and <code>orphan</code>: min number of word when having a new page</li>
<li>There are detail page break rules explained in the book</li>
</ul>
</li>
<li>running head: item appear in every page<ul>
<li>use position fixed to implement running head</li>
</ul>
</li>
</ul>
<h2 id="Projection"><a href="#Projection" class="headerlink" title="Projection"></a>Projection</h2><p>Not implemented by many browser</p>
<h2 id="Speaker"><a href="#Speaker" class="headerlink" title="Speaker"></a>Speaker</h2><p>The book mentions styles in CSS2. The CSS3 specification is not finalised.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;4-Values-and-Units&quot;&gt;&lt;a href=&quot;#4-Values-and-Units&quot; class=&quot;headerlink&quot; title=&quot;4 Values and Units&quot;&gt;&lt;/a&gt;4 Values and Units&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;There are only 17 defined color in css 2.1, but CSS 3 have 140 color, which recongized by most browsers.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rgb(50%, 0%, 100%)&lt;/code&gt; is a valid color&lt;/li&gt;
&lt;li&gt;The “web-safe” colors are those colors that generally avoid dithering on 256-color computer systems&lt;ul&gt;
&lt;li&gt;Value can be express in multiple of 20%&lt;/li&gt;
&lt;li&gt;I think we don’t need to care these nowadays&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
  <entry>
    <title>&quot;CSS: The Definitive Guide 3rd Edition&quot; part 1</title>
    <link href="http://199911.github.io/review/2017/01/16/css-the-definitive-guide-3rd-edition-1/"/>
    <id>http://199911.github.io/review/2017/01/16/css-the-definitive-guide-3rd-edition-1/</id>
    <published>2017-01-15T16:00:00.000Z</published>
    <updated>2017-01-16T15:14:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>This book have lots of details. Mention the support of some very old browser, like IE 6 and IE 7. It also explain how the CSS algorithm runs, like calculation of line height, size of content box. It is pity that CSS3 is not included.</p>
<p>This book may be a little bit outdated, but it is still worth reading if you want to have a better foundation on CSS, but you still need other books to learn CSS 3 feature which are commonly used.</p>
<a id="more"></a>
<h1 id="1-CSS-and-Documents"><a href="#1-CSS-and-Documents" class="headerlink" title="1 CSS and Documents"></a>1 CSS and Documents</h1><p>Replaced elements and non-replaced elements</p>
<ul>
<li>content is replaced or not</li>
<li>(img is replaced), no actual content, the content is replaced by data outside HTML file</li>
<li>From <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Replaced_element" target="_blank" rel="external">MDN</a>, their representation is outside the scope of CSS.</li>
</ul>
<p>Alternate style sheet</p>
<ul>
<li>Example: <code>&lt;link rel=&quot;alternate stylesheet&quot; type=&quot;text/css&quot; href=&quot;bigtext.css&quot; title=&quot;Big Text&quot; /&gt;</code></li>
<li>Fecko-based browser support alternate style sheet. browser provide options to let user select the stylesheet.</li>
<li>Will it be downloaded even user not selected them?</li>
<li>What is the behaviour in other browser?</li>
</ul>
<p>Some old browser does not support @import, which can use this ‘feature’ to hide css from old browsers</p>
<ul>
<li>CSS cannot have nested comment, like <code>/* /* nested comment */ */</code> is invalid</li>
</ul>
<h1 id="2-Selector"><a href="#2-Selector" class="headerlink" title="2 Selector"></a>2 Selector</h1><p>Pseudo-elements must be the last item in selector. <code>p:first-line em</code> is not valid, as the last item is <code>em</code> but not <code>first-line</code>. There are limited properties to be applied to <code>first-line</code> and <code>first-letter</code> pseudo-element.</p>
<h1 id="3-Structure-and-the-Cascade"><a href="#3-Structure-and-the-Cascade" class="headerlink" title="3 Structure and the Cascade"></a>3 Structure and the Cascade</h1><ul>
<li>Universal selector have no specificity: (0,0,0,0)<ul>
<li><strong> Universal selector will break inheritance </strong></li>
</ul>
</li>
<li>Attribute selector on id attribute is still consider attribute selector<ul>
<li>It can be a temp fix on specificity war of ID<ul>
<li><code>tr[id=&quot;totals&quot;]</code>, specificity (0,0,0,1)</li>
<li><code>#totals</code>, specificity (0,1,0,0)</li>
</ul>
</li>
</ul>
</li>
<li>Inherit value don’t have specificity, even universal selector can override<ul>
<li><strong> Universal selector will break inheritance </strong></li>
</ul>
</li>
<li>In CSS3 inline style override all non-important style<ul>
<li><code>!important</code> can be used to override inline style written by others</li>
<li>In CSS 2 inline style have the same specificity as id</li>
</ul>
</li>
<li>Non-CSS style (html attribute) can be override by user or author style</li>
</ul>
<h2 id="Exception-of-downward-propagation"><a href="#Exception-of-downward-propagation" class="headerlink" title="Exception of downward propagation"></a>Exception of downward propagation</h2><p>There is upward propagation rule in HTML, background style in <code>body</code> element can be passed to the <code>html</code> element.<br>From <a href="http://stackoverflow.com/questions/5225237/why-does-styling-the-background-of-the-body-element-affect-the-entire-screen/5225321" target="_blank" rel="external">this</a>, if you apply the following CSS to <code>&lt;body /&gt;</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">body &#123;</div><div class="line">  height: 100px;</div><div class="line">  width: 100px;</div><div class="line">  background: black</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>the whole screen will be black, unless you apply <code>html { background: white; }</code> explicitly.</p>
<h2 id="Three-kinds-of-agent-stylesheet"><a href="#Three-kinds-of-agent-stylesheet" class="headerlink" title="Three kinds of agent stylesheet"></a>Three kinds of agent stylesheet</h2><ul>
<li>User agent stylesheet<ul>
<li>The browser’s default style</li>
</ul>
</li>
<li>Reader stylesheet<ul>
<li>The style configure by user</li>
</ul>
</li>
<li>Author stylesheet<ul>
<li>The style provide by the website owner</li>
</ul>
</li>
<li>Priority:<ul>
<li>author &gt; reader &gt; user agent stylesheet</li>
<li>Seems reader does not work if we have reset script</li>
</ul>
</li>
<li>But reader <code>!important</code> style override author style<ul>
<li>Need confirm to test</li>
</ul>
</li>
</ul>
<h2 id="Order-to-apply-CSS-on-element-with-pseudo-classes"><a href="#Order-to-apply-CSS-on-element-with-pseudo-classes" class="headerlink" title="Order to apply CSS on element with pseudo-classes"></a>Order to apply CSS on element with pseudo-classes</h2><ul>
<li>An element can have multiple pseudo class, if apply in wrong other, some styles will never be applied</li>
<li>The order: <code>:link</code>, <code>:visited</code>, <code>:hover</code>, <code>:active</code><ul>
<li>mnemonic “LoVe - HA”</li>
</ul>
</li>
<li>Define all combination is also a solution</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This book have lots of details. Mention the support of some very old browser, like IE 6 and IE 7. It also explain how the CSS algorithm runs, like calculation of line height, size of content box. It is pity that CSS3 is not included.&lt;/p&gt;
&lt;p&gt;This book may be a little bit outdated, but it is still worth reading if you want to have a better foundation on CSS, but you still need other books to learn CSS 3 feature which are commonly used.&lt;/p&gt;
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
  <entry>
    <title>npm</title>
    <link href="http://199911.github.io/diary/2017/01/08/npm/"/>
    <id>http://199911.github.io/diary/2017/01/08/npm/</id>
    <published>2017-01-07T16:00:00.000Z</published>
    <updated>2017-01-08T09:44:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>Just read the <a href="https://docs.npmjs.com/getting-started" target="_blank" rel="external">“Getting Started” section</a> of npm docs.</p>
<h2 id="Update-npm-packages"><a href="#Update-npm-packages" class="headerlink" title="Update npm packages"></a>Update npm packages</h2><p>We can use <code>npm outdated</code> to check which package is outdated and <code>npm update &lt;package name&gt;</code> to update.</p>
<h2 id="Versioning"><a href="#Versioning" class="headerlink" title="Versioning"></a>Versioning</h2><p>The versioning number look likes “<major release="">.<minor release="">.<patch release="">“<br>Say the current version is 1.0.0:</patch></minor></major></p>
<ul>
<li>If a bug fix is publish, new version should be 1.0.1 (Patch release)</li>
<li>If new features which don’t break existing features is publish, new version should be 1.1.0 (Minor release)</li>
<li>If there is changes which break backward, new version should be 2.0.0 (Major release)</li>
</ul>
<p>We can close our eyes if the update is minor or patch release. If it is Major release, we need to take extra cares.</p>
<h2 id="Host-npm-package-with-github"><a href="#Host-npm-package-with-github" class="headerlink" title="Host npm package with github"></a>Host npm package with github</h2><p>It is possible to use github to host npm package. Not sure does it works with private github repo. <a href="http://stackoverflow.com/questions/16350673/depend-on-a-branch-or-tag-using-a-git-url-in-a-package-json" target="_blank" rel="external">REF</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Just read the &lt;a href=&quot;https://docs.npmjs.com/getting-started&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;“Getting Started” section&lt;/a&gt; of npm docs.&lt;
    
    </summary>
    
      <category term="Diary" scheme="http://199911.github.io/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>How to fallback CSS file to different CDN</title>
    <link href="http://199911.github.io/diary/2016/12/05/how-to-fallback-to-different-CDN/"/>
    <id>http://199911.github.io/diary/2016/12/05/how-to-fallback-to-different-CDN/</id>
    <published>2016-12-04T16:00:00.000Z</published>
    <updated>2016-12-05T15:32:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>A user in UK report our site is broken. From the captured screen, it is easy to it is because CSS file fail to load. After testing using <a href="https://www.webpagetest.org/" target="_blank" rel="external">Webpage Test</a>, I found out the machine in London fail to get the CSS file from MAXCDN. After long comunication with the customer support of CDN and lots of black box remote testing, they confirmed it is some local network error. MaxCDN and I can do nothing but wait until ISP fix the network.</p>
<p>I come up an idea, can we fallback to other CDN automatically if the current one is fail?</p>
<a id="more"></a>
<h2 id="Javascript-file-detection"><a href="#Javascript-file-detection" class="headerlink" title="Javascript file detection"></a>Javascript file detection</h2><p>Actually, it is very common in Javascript files. Many dependency management tools ,like require.js and yepnope.js, have built in CDN fallback feature for javascript. <a href="http://stackoverflow.com/questions/1014203/best-way-to-use-googles-hosted-jquery-but-fall-back-to-my-hosted-library-on-go" target="_blank" rel="external">The implementation is very simple</a>. For example, <code>!!window.jQuery</code> can be used to check jQuery is loaded or not.</p>
<h2 id="CSS-file-detection-in-fallback-js"><a href="#CSS-file-detection-in-fallback-js" class="headerlink" title="CSS file detection in fallback.js"></a>CSS file detection in fallback.js</h2><p>CSS have nothing do with javascript, how can we detect the style is loaded or not? From the source code of <a href="https://github.com/dolox/fallback/blob/v1/fallback.js#L212" target="_blank" rel="external">fallback.js</a>, we can use the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/styleSheets" target="_blank" rel="external">style sheets web apis</a>. We can get every single rules in the styleSheets by javascript. In fallback.js, <code>selectorText</code> is used to detect the style sheet. Notices that it use exact string matching, for example, if you only have a rules <code>.css.is.loaded { display: none; }</code> and the checking of <code>.loaded</code> will be fail, because the value of <code>selectorText</code> is <code>.css.is.loaded</code></p>
<h2 id="Style-Sheets-API-fallback"><a href="#Style-Sheets-API-fallback" class="headerlink" title="Style Sheets API fallback"></a>Style Sheets API fallback</h2><p><a href="http://caniuse.com/#search=stylesheets" target="_blank" rel="external">IE 11 and Edge 14 still not support style sheets api</a>, the fallback.js implementation does not works. In this <a href="http://eddmann.com/posts/providing-local-js-and-css-resources-for-cdn-fallbacks/" target="_blank" rel="external">article</a>, it suggests to have a string match which the background color style: <code>$(&#39;body&#39;).css(&#39;color&#39;) !== &#39;rgb(51, 51, 51)&#39;)</code>. It looks not very reliable, as the css need to have exactly the same format as <code>rgb(DD, DD, DD)</code>, I have check a few browser and the string format is exactly the same.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A user in UK report our site is broken. From the captured screen, it is easy to it is because CSS file fail to load. After testing using &lt;a href=&quot;https://www.webpagetest.org/&quot;&gt;Webpage Test&lt;/a&gt;, I found out the machine in London fail to get the CSS file from MAXCDN. After long comunication with the customer support of CDN and lots of black box remote testing, they confirmed it is some local network error. MaxCDN and I can do nothing but wait until ISP fix the network.&lt;/p&gt;
&lt;p&gt;I come up an idea, can we fallback to other CDN automatically if the current one is fail?&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="http://199911.github.io/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>文集十一</title>
    <link href="http://199911.github.io/insight/2016/11/26/readings-11/"/>
    <id>http://199911.github.io/insight/2016/11/26/readings-11/</id>
    <published>2016-11-25T16:00:00.000Z</published>
    <updated>2016-11-26T10:49:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我要成為前端工程師！給-JavaScript-新手的建議與學習資源整理"><a href="#我要成為前端工程師！給-JavaScript-新手的建議與學習資源整理" class="headerlink" title="我要成為前端工程師！給 JavaScript 新手的建議與學習資源整理"></a><a href="http://www.inside.com.tw/2016/02/19/javascript-novice-advice-and-learning-resources" target="_blank" rel="external">我要成為前端工程師！給 JavaScript 新手的建議與學習資源整理</a></h1><ul>
<li>當睇唔明人地D code<ul>
<li>查書<ul>
<li>唔知要查嘅野係邊頁</li>
<li>要先對成個知識體系有基本了解，先可以有效率咁search</li>
</ul>
</li>
<li>查Google<ul>
<li>唔知用咩keyword去search</li>
<li>同查書一樣</li>
</ul>
</li>
<li>試+靠估<ul>
<li>可能會得出錯嘅結論，學左D錯嘅野</li>
</ul>
</li>
</ul>
</li>
<li>做住學<ul>
<li>要有觀念打底先扎實<ul>
<li>都係要了解左成個知識體系先</li>
</ul>
</li>
<li>我好同意E一點，要打好底咁先學到野。因為做野果時好多時都有deadline，一定要好有效率咁學，唔係最後係壓力下，只係patch到work就算，可唔到可以reuse嘅knowledge。</li>
</ul>
</li>
<li>會寫的多、看懂的少<ul>
<li>如果你還是用一知半解的觀念去開發，你會花上大把大把的時間在除錯、鬼打牆、生悶氣、捶心肝。<ul>
<li>其實就係leaky abstraction 嘅問題<ul>
<li>當你要maintain D code，就算D third party library 好勁，好可靠，都要花時間去理解佢點運作。</li>
<li>因為世上係冇完美嘅abstraction，當一遇到底層嘅問題，必需要對library有深入嘅了解先solve到。</li>
<li>當出左事先抽時間去學，好可能會趕唔切，因為未必可以locate到個問題係邊個abstraction layer出事。</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>當中推介D書遲D抽時間速睇。</li>
</ul>
<a id="more"></a>
<h1 id="閱讀程式碼的心理層面"><a href="#閱讀程式碼的心理層面" class="headerlink" title="閱讀程式碼的心理層面"></a><a href="http://www.codemud.net/~thinker/GinGin_CGI.py/show_id_doc/497" target="_blank" rel="external">閱讀程式碼的心理層面</a></h1><p>講點樣睇code，其實好多篇文都講類似嘅野</p>
<ol>
<li>先掌握整體結構，了解各檔案、目錄、模組嘅作用<ul>
<li>咁先可以知道自己係邊個abstraction layer，<ul>
<li>揾到自已想睇嘅code同skip D 唔重要嘅野</li>
</ul>
</li>
</ul>
</li>
<li>靠file, function 同 variable name去估D code做咩<ul>
<li>前提都要D code都要寫得好</li>
</ul>
</li>
<li>睇class 同 function declaration<ul>
<li>Interface 係這個abstraction object 之間溝通嘅方法</li>
<li>睇完structure，估到個大約結構可以睇下 interface 驗證自己嘅想法</li>
</ul>
</li>
<li>先睇Data structure 再睇 code<ul>
<li>Code 係用黎process data, program 就好似一條變化緊嘅data stream咁，由stream嘅源頭，姐係data structure睇會易明D。</li>
<li>但係當D code唔係用黎handle data就唔work，例如一D dev ops 嘅code</li>
</ul>
</li>
<li>睇人地嘅註解<ul>
<li>放到咁後係當有comment 果時己經去到睇 code 嘅level，未了解structure就睇code好易睇錯野。</li>
</ul>
</li>
<li>要focus，唔好心急跳黎睇<ul>
<li>未清楚曬就skip好易中伏，到最後仲用多左時間，</li>
</ul>
</li>
</ol>
<h1 id="Reflections-of-an-“Old”-Programmer"><a href="#Reflections-of-an-“Old”-Programmer" class="headerlink" title="Reflections of an “Old” Programmer"></a><a href="http://www.bennorthrop.com/Essays/2016/reflections-of-an-old-programmer.php" target="_blank" rel="external">Reflections of an “Old” Programmer</a></h1><ul>
<li>Knowledge decay<ul>
<li>隨住科技嘅進步，好多舊嘅技術會慢慢fade out</li>
</ul>
</li>
<li>Knowledge accumulation rate<ul>
<li>學野嘅速度</li>
</ul>
</li>
<li>Three stages<ul>
<li>Eager apprentice<ul>
<li>快速咁去學好多新嘅language, library 同 framework</li>
</ul>
</li>
<li>Rising start<ul>
<li>對現今流行嘅野都有掌握，開始精進</li>
<li>開始面對轉折點<ul>
<li>成為左senior要教新人，review人地D code，少左時間自己學野</li>
<li>D knowledge會開始decay，出現 accumulation rate &lt; decay rate 嘅情況</li>
</ul>
</li>
</ul>
</li>
<li>Steady veteran<ul>
<li>要keep住用空閒時間學新野，唔係就會變返新手</li>
<li>有人會決定轉去做management, sales, testing … etc</li>
</ul>
</li>
</ul>
</li>
<li>Advice<ul>
<li>睇長線D<ul>
<li>㨂D有得接觸新野嘅公司，寧可低pay D<ul>
<li>以防工作用嘅technology 第時decay曬</li>
</ul>
</li>
</ul>
</li>
<li>學decay level 低嘅knowledge<ul>
<li>algorithms, application security, performance optimization, and architecture</li>
<li>唔好不停去追新嘅libraries</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="咖啡館師傅的啟示，如何正確跟他人學東西？"><a href="#咖啡館師傅的啟示，如何正確跟他人學東西？" class="headerlink" title="咖啡館師傅的啟示，如何正確跟他人學東西？"></a><a href="http://www.playpcesor.com/2016/09/lifehack-18.html" target="_blank" rel="external">咖啡館師傅的啟示，如何正確跟他人學東西？</a></h1><p>好多野都係context dependent，要睇情況同時機。所以學野唔係要學人地嘅經驗，唔係要學硬性嘅規則，而係學背後的邏輯、方法。咁先可以因應唔同嘅情況調整。</p>
<h1 id="學徒之路"><a href="#學徒之路" class="headerlink" title="學徒之路"></a><a href="http://www.codemud.net/~thinker/GinGin_CGI.py/show_id_doc/493" target="_blank" rel="external">學徒之路</a></h1><p>同上邊幾篇文都有D共通點</p>
<ul>
<li>基礎的知識、理論<ul>
<li>Decay rate 比較低嘅knowledge</li>
<li>可以透過書本、文件、或別人的教導獲得</li>
</ul>
</li>
<li>經驗和應用類的知識<ul>
<li>Decay rate 高</li>
<li>好似上一篇提及嘅學習方法咁<ul>
<li>不該全盤接受別人的想法，特別是經驗</li>
<li>可以引以為鑑，反省自己的做法和想法</li>
</ul>
</li>
<li>例子<ul>
<li>Design Pattern</li>
<li>Test Driven Development</li>
<li>Agile</li>
</ul>
</li>
</ul>
</li>
<li>次要嘅發展方向的內容<ul>
<li>以理論派嘅方式， 就係以研讀和理解的方式學習</li>
</ul>
</li>
<li>主要嘅發展方向的內容先多花時間以實戰方式進行</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;我要成為前端工程師！給-JavaScript-新手的建議與學習資源整理&quot;&gt;&lt;a href=&quot;#我要成為前端工程師！給-JavaScript-新手的建議與學習資源整理&quot; class=&quot;headerlink&quot; title=&quot;我要成為前端工程師！給 JavaScript 新手的建議與學習資源整理&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.inside.com.tw/2016/02/19/javascript-novice-advice-and-learning-resources&quot;&gt;我要成為前端工程師！給 JavaScript 新手的建議與學習資源整理&lt;/a&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;當睇唔明人地D code&lt;ul&gt;
&lt;li&gt;查書&lt;ul&gt;
&lt;li&gt;唔知要查嘅野係邊頁&lt;/li&gt;
&lt;li&gt;要先對成個知識體系有基本了解，先可以有效率咁search&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;查Google&lt;ul&gt;
&lt;li&gt;唔知用咩keyword去search&lt;/li&gt;
&lt;li&gt;同查書一樣&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;試+靠估&lt;ul&gt;
&lt;li&gt;可能會得出錯嘅結論，學左D錯嘅野&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;做住學&lt;ul&gt;
&lt;li&gt;要有觀念打底先扎實&lt;ul&gt;
&lt;li&gt;都係要了解左成個知識體系先&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;我好同意E一點，要打好底咁先學到野。因為做野果時好多時都有deadline，一定要好有效率咁學，唔係最後係壓力下，只係patch到work就算，可唔到可以reuse嘅knowledge。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;會寫的多、看懂的少&lt;ul&gt;
&lt;li&gt;如果你還是用一知半解的觀念去開發，你會花上大把大把的時間在除錯、鬼打牆、生悶氣、捶心肝。&lt;ul&gt;
&lt;li&gt;其實就係leaky abstraction 嘅問題&lt;ul&gt;
&lt;li&gt;當你要maintain D code，就算D third party library 好勁，好可靠，都要花時間去理解佢點運作。&lt;/li&gt;
&lt;li&gt;因為世上係冇完美嘅abstraction，當一遇到底層嘅問題，必需要對library有深入嘅了解先solve到。&lt;/li&gt;
&lt;li&gt;當出左事先抽時間去學，好可能會趕唔切，因為未必可以locate到個問題係邊個abstraction layer出事。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;當中推介D書遲D抽時間速睇。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Insight" scheme="http://199911.github.io/categories/Insight/"/>
    
    
  </entry>
  
  <entry>
    <title>&quot;CSS - the missing manual 2nd edition&quot; CSS Advanced CSS</title>
    <link href="http://199911.github.io/review/2016/11/24/CSS-missing-manual-4/"/>
    <id>http://199911.github.io/review/2016/11/24/CSS-missing-manual-4/</id>
    <published>2016-11-23T16:00:00.000Z</published>
    <updated>2016-11-23T16:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>This chapter gives some hints on writing maintainable CSS and introduce SCSS.</p>
<a id="more"></a>
<h3 id="Organize-style"><a href="#Organize-style" class="headerlink" title="Organize style"></a>Organize style</h3><ul>
<li>Class name<ul>
<li>Name style by purpose, not appearance</li>
<li>Don’t use name base on position<ul>
<li>.leftSideBar</li>
</ul>
</li>
<li>Avoid cryptic names</li>
</ul>
</li>
<li>Don’t repeat yourself<ul>
<li>I think it depends on context</li>
</ul>
</li>
<li>Use multiple Class<ul>
<li>Using partial in SCSS seems a better choice</li>
</ul>
</li>
<li>Group related style<ul>
<li>apply to related parts of a page</li>
<li>with a related purpose</li>
</ul>
</li>
<li>Separate groups by comment or put it in different style sheet<ul>
<li><code>@import</code> will delay the rendering, use css pre processor instead</li>
</ul>
</li>
</ul>
<h3 id="Reset-CSS-vs-Normalize-CSS"><a href="#Reset-CSS-vs-Normalize-CSS" class="headerlink" title="Reset CSS vs Normalize CSS"></a>Reset CSS vs Normalize CSS</h3><p>Reset style means remove all browser CSS, normalize means unify the styles. For example, reset CSS will make headlines and paragraph the same size.</p>
<p>Reset style:</p>
<ul>
<li>Remove padding and margins</li>
<li>Apply consistent font sizes</li>
<li>Set a consistent line height</li>
<li>Improve table border and create consistent table cells</li>
<li>Remove borders from linked images</li>
<li>Set consistent list indents and bullet types</li>
<li>Remove quote marks from quoted material</li>
</ul>
<h3 id="Using-Descendant-Selectors"><a href="#Using-Descendant-Selectors" class="headerlink" title="Using Descendant Selectors"></a>Using Descendant Selectors</h3><ul>
<li>Limit the scope of CSS by descendant selectors and <code>&lt;div&gt;</code>.</li>
<li>Add class to body to identify page type and layout<ul>
<li>Just like a “namespace”</li>
</ul>
</li>
</ul>
<h2 id="OOCSS-vs-SMACSS"><a href="#OOCSS-vs-SMACSS" class="headerlink" title="OOCSS vs SMACSS"></a>OOCSS vs SMACSS</h2><p>Other approaches on organizing CSS</p>
<ul>
<li>http:// coding.smashingmagazine.com/2011/12/12/an-introduction-to-object-oriented-css-oocss/</li>
<li><a href="http://smacss.com" target="_blank" rel="external">http://smacss.com</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This chapter gives some hints on writing maintainable CSS and introduce SCSS.&lt;/p&gt;
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
  <entry>
    <title>&quot;CSS - the missing manual 2nd edition&quot; CSS Page Layout</title>
    <link href="http://199911.github.io/review/2016/11/20/CSS-missing-manual-3/"/>
    <id>http://199911.github.io/review/2016/11/20/CSS-missing-manual-3/</id>
    <published>2016-11-19T16:00:00.000Z</published>
    <updated>2016-11-20T06:32:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>This chapter have enough images to help reader understand the layout. I highly recommend to learn layout by reading this chapter</p>
<h3 id="Layout-type"><a href="#Layout-type" class="headerlink" title="Layout type"></a>Layout type</h3><ul>
<li>Fixed width<ul>
<li>The <code>width</code> value is a fixed numerical value</li>
</ul>
</li>
<li>Fluid<ul>
<li>The <code>width</code> is a percentage value</li>
</ul>
</li>
<li>Responsive Web design (RWD)<ul>
<li>The layout change with the screen size</li>
<li>The layout for different screen can be “Fixed Width” and “Fluid”</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h3 id="Common-technique-for-css-layout"><a href="#Common-technique-for-css-layout" class="headerlink" title="Common technique for css layout"></a>Common technique for css layout</h3><ul>
<li>float (for different section)</li>
<li>absolute positioning</li>
</ul>
<h3 id="Why-mobile-first"><a href="#Why-mobile-first" class="headerlink" title="Why mobile first?"></a>Why mobile first?</h3><p>Limited screen size help us eliminate noise and focus on content</p>
<h3 id="Workflow-on-design"><a href="#Workflow-on-design" class="headerlink" title="Workflow on design"></a>Workflow on design</h3><p>In short, design from the highest abstraction layer to the lowest.</p>
<ol>
<li>Identify the layout first<ul>
<li>don’t spend too much time on graphic and detail</li>
</ul>
</li>
<li>Identify different sections (boxes)<ul>
<li>Notice that the HTML element will take up all width by default. The size of column should be determined in step 1.</li>
</ul>
</li>
<li>Remember the background image</li>
<li>Think about the implementation of layout</li>
<li>Design the style of different element</li>
<li>Determine the size of margins and padding</li>
</ol>
<h3 id="To-fix-items-inside-float-container-break-outside"><a href="#To-fix-items-inside-float-container-break-outside" class="headerlink" title="To fix items inside float container break outside"></a>To fix items inside float container break outside</h3><p>Four solutions:</p>
<ul>
<li>Add <code>clear: both;</code> element at the bottom inside the floating container</li>
<li>Float the Item</li>
<li>Add <code>overflow: hidden;</code><ul>
<li>Notice that if element is absolute positioned, it will not show up. (It is hidden)</li>
</ul>
</li>
<li>Use micro clear fix<ul>
<li>Add <code>clear: both;</code> in pseudo element <code>::after</code></li>
<li>Also <code>display: table;</code></li>
<li>Bootstrap 3 use this technique</li>
</ul>
</li>
</ul>
<h3 id="Using-table-to-layout"><a href="#Using-table-to-layout" class="headerlink" title="Using table to layout"></a>Using table to layout</h3><p>We can use multicolumn in CSS 3 instead</p>
<ul>
<li>Pros<ul>
<li>When you need to create columns with same height</li>
</ul>
</li>
<li>Cons<ul>
<li>Need to add html code</li>
<li>difficult to change</li>
<li>not work well in cellphone</li>
</ul>
</li>
</ul>
<h3 id="Float"><a href="#Float" class="headerlink" title="Float"></a>Float</h3><ul>
<li>height depends on content<ul>
<li>difficult to create full height column<ul>
<li>Use a wrapper to wrap the main content (should be long enough) with the columns</li>
<li>and then add background img with the same width and repeat vertically as the column in wrapper</li>
<li>the column have back ground , but actually it is background of the wrapper</li>
</ul>
</li>
</ul>
</li>
<li>Float does not work with <code>position:fixed</code> or <code>position:absolute</code></li>
</ul>
<h3 id="Positioning-properties-left-right-top-and-bottom"><a href="#Positioning-properties-left-right-top-and-bottom" class="headerlink" title="Positioning properties (left, right, top and bottom)"></a>Positioning properties (left, right, top and bottom)</h3><ul>
<li>Let browser calculate the size of element<ul>
<li>Specify both left and right / top and bottom</li>
<li>I cannot come up with use case<ul>
<li>may be using <code>vh</code> and <code>vw</code> already serve most of our needs</li>
<li><code>calc()</code> give us more flexibility</li>
</ul>
</li>
</ul>
</li>
<li>Percentage values will not change the element’s size</li>
</ul>
<h3 id="Media-query"><a href="#Media-query" class="headerlink" title="Media query"></a>Media query</h3><p>Common usage:</p>
<ul>
<li>adjust column</li>
<li>flexible width</li>
<li>tighten up white space</li>
<li>adjust font sizes</li>
<li>change navigation menus<ul>
<li>convert nav bar to dropdown in mobile device</li>
</ul>
</li>
<li>hide content on handhold device</li>
<li>use background image</li>
</ul>
<h2 id="Flexbox"><a href="#Flexbox" class="headerlink" title="Flexbox"></a>Flexbox</h2><h3 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h3><ul>
<li><code>flex-direction</code><ul>
<li>usually use ‘row’ in desktop and switch to ‘column’ in mobile</li>
</ul>
</li>
<li><code>justify-content</code><ul>
<li>if flex widths is used, justify-content have no effect</li>
</ul>
</li>
<li><code>align-items</code><ul>
<li>default value: <code>stretch</code></li>
<li>align baseline<ul>
<li>align the first line of text</li>
</ul>
</li>
</ul>
</li>
<li><code>align-content only works when</code><ul>
<li>flex-wrap is wrap</li>
<li>flex container must taller than the rows of flex items</li>
<li>default value: <code>stretch</code></li>
</ul>
</li>
<li><code>order</code><ul>
<li>Solve the CSS negative margin to change the order (they want to put main content in HTML first for SEO)</li>
</ul>
</li>
<li><code>flex</code><ul>
<li>default values:<ul>
<li>0 1 auto</li>
<li><ul>
<li>1 0% (if the first value is defined)</li>
</ul>
</li>
<li>what if * = 0?</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Special-note"><a href="#Special-note" class="headerlink" title="Special note"></a>Special note</h3><ul>
<li>flex containers and items are not block level element<ul>
<li>Some properties don’t apply to them</li>
</ul>
</li>
<li>flex items’ margins don’t collapse<ul>
<li>can auto take up all space -&gt; push left / right</li>
</ul>
</li>
<li>no-wrap + shrink 0 will make the item overflow<br>wrap will make the item drop (if sum of flex-basic &gt; container width)</li>
</ul>
<h3 id="Size-calculation"><a href="#Size-calculation" class="headerlink" title="Size calculation"></a>Size calculation</h3><ul>
<li>space difference = absolute( container size - sum of flex-basic of all items )</li>
<li>when flex container &gt; sum of minimum size of items<ul>
<li>item’s size = (flex-basic) + (flex-grow/sum of flex-grow) * (space difference)</li>
</ul>
</li>
<li>when flex container &lt; sum of minimum size of items<ul>
<li>item’s size = (flex-basic) - (flex-grow/sum of flex-shrink) * (space difference)</li>
</ul>
</li>
</ul>
<h3 id="flex-basic-auto-and-flex-basic-content"><a href="#flex-basic-auto-and-flex-basic-content" class="headerlink" title="flex-basic: auto; and flex-basic: content;"></a><code>flex-basic: auto;</code> and <code>flex-basic: content;</code></h3><p>According to <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis" target="_blank" rel="external">MDN</a>, <code>auto</code> can means “look at my width or height property” and “automatic sizing”.<br>At the end:</p>
<ul>
<li><code>auto</code> means “look at my width or height property”;</li>
<li><code>content</code> keyword is introduced to trigger automatic sizing;</li>
</ul>
<h3 id="Jargons"><a href="#Jargons" class="headerlink" title="Jargons"></a>Jargons</h3><ul>
<li>Float drops<ul>
<li>When there are not enough space, the column will drops down below the other</li>
<li>Solution: Use box-sizing to define the column size precisely</li>
</ul>
</li>
<li>Frameset<ul>
<li>fixed component in certain place</li>
<li>keep important fixtures handy</li>
<li>can implement with html frame</li>
</ul>
</li>
<li>Breakpoint<ul>
<li>are the screen size value which trigger style change</li>
</ul>
</li>
<li>Flexible grid<ul>
<li>Bootstrap 3’s grid system is an example</li>
</ul>
</li>
</ul>
<h3 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h3><ul>
<li>Don’t add unnecessary div</li>
<li>CSS built in grid layout<ul>
<li>But it is not ready</li>
</ul>
</li>
<li>There are lots of layout already, don’t need to start from zero</li>
<li>Search engine limited the amount of html crawl, it rank the content near the beginning higher score.<ul>
<li>I am not sure is it valid now</li>
</ul>
</li>
<li>Background image cannot be outside the element</li>
<li>CSS layout difficulty<ul>
<li>Cannot fix the position and sizes, because user can change the screen size</li>
</ul>
</li>
<li>Can use <code>media</code> attribute in link tag to determine which style sheet to download</li>
<li>Drawback of fluid image: force user to download a bigger image</li>
<li>Don’t add unit when the value is 0</li>
</ul>
<h3 id="To-read-list"><a href="#To-read-list" class="headerlink" title="To read list"></a>To read list</h3><ul>
<li>flexbox usage<ul>
<li><a href="https://philipwalton.github.io/solved-by-flexbox/" target="_blank" rel="external">https://philipwalton.github.io/solved-by-flexbox/</a></li>
</ul>
</li>
<li>mobile first<ul>
<li><a href="http://www.abookapart.com/products/mobile-first" target="_blank" rel="external">http://www.abookapart.com/products/mobile-first</a></li>
<li><a href="https://www.sitepoint.com/making-case-mobile-first-designs/" target="_blank" rel="external">https://www.sitepoint.com/making-case-mobile-first-designs/</a></li>
</ul>
</li>
<li>For a good explanation of why floated elements can break outside of their containing blocks<ul>
<li>www.complexspiral.com/publications/containing-floats.</li>
</ul>
</li>
<li>Create full height column (sidebar) with float<ul>
<li>some other technique: <a href="http://css-tricks.com/fluid-width-equal-height-columns/" target="_blank" rel="external">http://css-tricks.com/fluid-width-equal-height-columns/</a></li>
<li><a href="http://webdesign.tutsplus.com/tutorials/quick-tip-solving-the-equal-height-column-conundrum--cms-20403" target="_blank" rel="external">http://webdesign.tutsplus.com/tutorials/quick-tip-solving-the-equal-height-column-conundrum--cms-20403</a></li>
</ul>
</li>
<li>Responsive image technique<ul>
<li><a href="http://alistapart.com/article/responsive-images-in-practice" target="_blank" rel="external">http://alistapart.com/article/responsive-images-in-practice</a></li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This chapter have enough images to help reader understand the layout. I highly recommend to learn layout by reading this chapter&lt;/p&gt;
&lt;h3 id=&quot;Layout-type&quot;&gt;&lt;a href=&quot;#Layout-type&quot; class=&quot;headerlink&quot; title=&quot;Layout type&quot;&gt;&lt;/a&gt;Layout type&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fixed width&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;width&lt;/code&gt; value is a fixed numerical value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fluid&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;width&lt;/code&gt; is a percentage value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Responsive Web design (RWD)&lt;ul&gt;
&lt;li&gt;The layout change with the screen size&lt;/li&gt;
&lt;li&gt;The layout for different screen can be “Fixed Width” and “Fluid”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
  <entry>
    <title>&quot;CSS - the missing manual 2nd edition&quot; Applied CSS</title>
    <link href="http://199911.github.io/review/2016/11/19/CSS-missing-manual-2/"/>
    <id>http://199911.github.io/review/2016/11/19/CSS-missing-manual-2/</id>
    <published>2016-11-18T16:00:00.000Z</published>
    <updated>2016-11-19T14:17:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Applied-CSS"><a href="#Applied-CSS" class="headerlink" title="Applied CSS"></a>Applied CSS</h2><p>I almost know all style introduced in this chapter. I only jot down the information worth mentioning and some knowledge I don’t know.</p>
<a id="more"></a>
<h3 id="Font"><a href="#Font" class="headerlink" title="Font"></a>Font</h3><ul>
<li>Font license<ul>
<li>Some font companies ban other to use their fonts on web to prevent their creation is pirated.</li>
<li>Some companies offer license for web usage.</li>
</ul>
</li>
<li>Data format of icon font<ul>
<li>There are graphical icon or SVG icon.</li>
<li>These data format take more space to store, so the file size is bigger than web font.</li>
</ul>
</li>
<li>For fonts which are tailor made for italic and bold, we need to override font style in <code>&lt;strong&gt;</code> and <code>&lt;em&gt;</code>.</li>
<li>Absolute font size keyword<ul>
<li>For <code>font-size</code> property, we usually use number value, like <code>16px</code>, <code>2em</code>, <code>2</code> etc. Actually there are absolute size keywords, like <code>xx-small</code>, <code>medium</code>, <code>larger</code> etc.</li>
<li>These keywords are handled in different ways by browser vendors, it is seldom be used.</li>
</ul>
</li>
</ul>
<h3 id="Don’t-add-unit-to-Line-height"><a href="#Don’t-add-unit-to-Line-height" class="headerlink" title="Don’t add unit to Line height"></a>Don’t add unit to Line height</h3><p>Don’t put unit in <code>line-height</code>. Use numeric value only to make sure line height is calculated base on the current font size. This can prevent the bugs cause by CSS inheritance.</p>
<h3 id="Use-negative-margin-to-remove-space"><a href="#Use-negative-margin-to-remove-space" class="headerlink" title="Use negative margin to remove space"></a>Use negative margin to remove space</h3><p>It is a common technique.</p>
<h3 id="List-style"><a href="#List-style" class="headerlink" title="List style"></a>List style</h3><p>There are many option in <code>list-style-type</code>. We can also customize the style. <a href="http://blog.teamtreehouse.com/customize-ordered-lists-pseudo-element" target="_blank" rel="external">REF</a></p>
<h3 id="Collapsing-margins"><a href="#Collapsing-margins" class="headerlink" title="Collapsing margins"></a>Collapsing margins</h3><p>Margins will not stack, the maximum margin will be took. Use padding if you want to stack.<br>PS: If one margin is positive and one is negative, there is no collapsing margin</p>
<h3 id="Layout"><a href="#Layout" class="headerlink" title="Layout"></a>Layout</h3><ul>
<li>Avoid setting height of elements<ul>
<li>The content may overflow in some screen size</li>
</ul>
</li>
<li>Float make the element outside the normal layout flow<ul>
<li>Some element will be shown under the float element<ul>
<li>Such as background</li>
</ul>
</li>
<li>We can use overflow hidden to fix it</li>
</ul>
</li>
<li>Background image bottom bug<ul>
<li>When the screen is very big, the bottom is not the bottom of browser window.<ul>
<li>Using height 100% can make the page size at least as large as browser window</li>
</ul>
</li>
</ul>
</li>
<li>Background percentage<ul>
<li>A percentage value aligns the specified percentage of the image with the same percentage of the styled element.<ul>
<li>In another words, both origin of background image and position of the origin is affected by percentage value</li>
</ul>
</li>
</ul>
</li>
<li>Some browsers ignore background image when printing the web page</li>
<li>To implement background with color overlay, we can use background image blend.</li>
<li>To protect users’ privacy, limited style can be applied to the :visited pseudo-class<ul>
<li><code>color</code>, <code>background-color</code> and <code>border-color</code> is available</li>
</ul>
</li>
<li>Double border problem in list items<ul>
<li>All elements have top border, use <code>:last-child</code> or <code>:last-of-type</code> to add bottom border.</li>
<li>In bootstrap 3, it use -1px technique</li>
<li>In <code>&lt;table&gt;</code>, we can use <code>border-collapse</code> directly</li>
</ul>
</li>
<li>Don’t use <code>&lt;table&gt;</code> for layout</li>
</ul>
<h3 id="Jargon"><a href="#Jargon" class="headerlink" title="Jargon"></a>Jargon</h3><ul>
<li>Gutter<ul>
<li>It means white space between elements</li>
</ul>
</li>
<li>Source order<ul>
<li>The order in which you write your HTML</li>
</ul>
</li>
<li>Absolute path<ul>
<li><a href="http://199911.github.io/review/2016/11/12/CSS-missing-manual-1/">http://199911.github.io/</a></li>
</ul>
</li>
<li>Root-related path<ul>
<li><a href="/review/2016/11/12/CSS-missing-manual-1/">/review/2016/11/12/CSS-missing-manual-1/</a></li>
</ul>
</li>
<li>Document-related path<ul>
<li><a href="../CSS-missing-manual-1/">../CSS-missing-manual-1/</a></li>
</ul>
</li>
<li>CSS Sprites<ul>
<li>Merge all small image into a big one, use background position to show the particular image.<ul>
<li>It also is a preload technique, download all small image in batch.<ul>
<li>Avoid delay on user action and image download.<ul>
<li>Useful in imaged buttons.</li>
</ul>
</li>
</ul>
</li>
<li>Can make rollover event easier (by changing <code>background-position</code>).</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Transformation-Transition-and-Animation"><a href="#Transformation-Transition-and-Animation" class="headerlink" title="Transformation, Transition and Animation"></a>Transformation, Transition and Animation</h3><ul>
<li>scale can have negative value<ul>
<li>the element will be flipped</li>
</ul>
</li>
<li><a href="https://matthewlein.com/ceaser/" target="_blank" rel="external">animation timing function tools</a><ul>
<li>When class with transition is removed, there are no transition during the removal</li>
<li>Usually put transition style in the starting class instead of final class</li>
</ul>
</li>
<li>Transition delay can is useful in CSS dropdown<ul>
<li>Prevent the menu disappear quickly by delaying the style of transition class removal</li>
</ul>
</li>
<li>Transition on opacity, translate, scale and rotate is smoother than other as they take less CPU</li>
<li>Force the browser to use GPU: <code>transform: translateZ(0)</code></li>
<li>Animation<ul>
<li>write css rule for key framework, and then use the CSS animation rule to animate</li>
<li>can pause animation by <code>animation-play-state</code></li>
</ul>
</li>
</ul>
<h3 id="Other-information"><a href="#Other-information" class="headerlink" title="Other information"></a>Other information</h3><ul>
<li>Percentage does not work on drop shadows</li>
<li>Document-related path in CSS provide directions in relation to the style sheet file, not the HTML page URL</li>
<li>Less color can be shown in GIF<ul>
<li>Use GIF for icon</li>
</ul>
</li>
<li>Web surfer already familiar with form<ul>
<li>Don’t change the style of form too much otherwise they may be confused.</li>
</ul>
</li>
<li>There are some “@ rules”, like <code>@media</code></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Applied-CSS&quot;&gt;&lt;a href=&quot;#Applied-CSS&quot; class=&quot;headerlink&quot; title=&quot;Applied CSS&quot;&gt;&lt;/a&gt;Applied CSS&lt;/h2&gt;&lt;p&gt;I almost know all style introduced in this chapter. I only jot down the information worth mentioning and some knowledge I don’t know.&lt;/p&gt;
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
  <entry>
    <title>&quot;CSS - the missing manual 2nd edition&quot; Basic CSS</title>
    <link href="http://199911.github.io/review/2016/11/12/CSS-missing-manual-1/"/>
    <id>http://199911.github.io/review/2016/11/12/CSS-missing-manual-1/</id>
    <published>2016-11-11T16:00:00.000Z</published>
    <updated>2016-11-12T03:33:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>This book is very good for learning CSS. It has 4 sections, start from the basic knowledge to advanced technique. It also provide some exercises for user to get some hand on experience.</p>
<p>But this only have few picture and lots of text, it is quite boring to read.</p>
<ol>
<li>Basic CSS</li>
<li>Applied CSS</li>
<li>Page Layout CSS</li>
<li>Advanced CSS</li>
</ol>
<a id="more"></a>
<h2 id="Basic-CSS"><a href="#Basic-CSS" class="headerlink" title="Basic CSS"></a>Basic CSS</h2><h3 id="Know-what-browser-to-support"><a href="#Know-what-browser-to-support" class="headerlink" title="Know what browser to support"></a>Know what browser to support</h3><p>Browsers are also software product. They have bugs and feature not support. We may need to have work around on browser quirk. Market share of browser can help us to determine which browser and what version to support.:</p>
<ul>
<li><a href="http://www.netmarketshare.com/browser-market-share.aspx" target="_blank" rel="external">http://www.netmarketshare.com/browser-market-share.aspx</a></li>
<li><a href="http://gs.statcounter.com" target="_blank" rel="external">http://gs.statcounter.com</a></li>
<li><a href="https://developer.microsoft.com/en-us/microsoft-edge/ie6countdown/" target="_blank" rel="external">https://developer.microsoft.com/en-us/microsoft-edge/ie6countdown/</a></li>
</ul>
<h3 id="Some-tips-on-HTML"><a href="#Some-tips-on-HTML" class="headerlink" title="Some tips on HTML"></a>Some tips on HTML</h3><p>We can solve problem in many ways. But using some well known technique help other understand your code and help us avoid bugs. Here are some tips:</p>
<ul>
<li>Stop using <code>&lt;font&gt;</code>.</li>
<li>Don’t use <code>&lt;table&gt;</code> for layout.</li>
<li>Don’t use <code>&lt;br&gt;</code> for spacing, use margin or padding.</li>
<li>Don’t overuse <code>&lt;div&gt;</code> and <code>&lt;span&gt;</code></li>
<li>Don’t forget Doctype!<ul>
<li>No doctype will fallback to old browser mode, which may make the page render in a strange way.</li>
</ul>
</li>
</ul>
<h3 id="Some-mistakes-in-the-book"><a href="#Some-mistakes-in-the-book" class="headerlink" title="Some mistakes in the book"></a>Some mistakes in the book</h3><p>The book mention that there will be no CSS4, because CSS3 will only updating CSS3 modules. Actually w3c is release CSS4 on 2011</p>
<h3 id="Jargon-of-CSS"><a href="#Jargon-of-CSS" class="headerlink" title="Jargon of CSS"></a>Jargon of CSS</h3><p>A CSS rule have:</p>
<ul>
<li>selector<ul>
<li>type (element) selector</li>
<li>class selector</li>
<li>id selector</li>
</ul>
</li>
<li>declaration block<ul>
<li>declaration<ul>
<li>property</li>
<li>value</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="CSS-Inheritance"><a href="#CSS-Inheritance" class="headerlink" title="CSS Inheritance"></a>CSS Inheritance</h3><ul>
<li>Positioning style is not Inherit</li>
<li>Browser built in style may override the Inheritance</li>
</ul>
<h3 id="External-CSS-vs-Internal-CSS"><a href="#External-CSS-vs-Internal-CSS" class="headerlink" title="External CSS vs Internal CSS"></a>External CSS vs Internal CSS</h3><p>External CSS will be cached by browsers, need use force reload to view the changes ( cmd/ctrl + shift + R ). It is quite inconvenient during development. The cache may mislead us to think our CSS is wrong. One way to avoid it is to develop with internal CSS, move it to external later</p>
<p>Some developer use external script for general style and internal script for page customization. Make sure internal script is load after the external one if you do this.</p>
<h3 id="Avoid-ID-selector"><a href="#Avoid-ID-selector" class="headerlink" title="Avoid ID selector"></a>Avoid ID selector</h3><p>ID selectors have the highest specificity, stop using it in CSS to avoid specificity wars.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This book is very good for learning CSS. It has 4 sections, start from the basic knowledge to advanced technique. It also provide some exercises for user to get some hand on experience.&lt;/p&gt;
&lt;p&gt;But this only have few picture and lots of text, it is quite boring to read.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Basic CSS&lt;/li&gt;
&lt;li&gt;Applied CSS&lt;/li&gt;
&lt;li&gt;Page Layout CSS&lt;/li&gt;
&lt;li&gt;Advanced CSS&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
  <entry>
    <title>How to pick a framework?</title>
    <link href="http://199911.github.io/diary/2016/11/02/how-to-picking-a-library/"/>
    <id>http://199911.github.io/diary/2016/11/02/how-to-picking-a-library/</id>
    <published>2016-11-01T16:00:00.000Z</published>
    <updated>2016-11-02T15:28:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>I am working on building an auto-scaling docker cluster for our testing environment. I have no idea on the machine cluster, auto-scaling api and deployment framework, but I have to make decision on which framework to use and build the system. It is a challenge for me. There are lots of failure and lots of learning.</p>
<a id="more"></a>
<h2 id="Failure-one-Know-the-feature-but-does-not-understand-how-they-solve-the-problem"><a href="#Failure-one-Know-the-feature-but-does-not-understand-how-they-solve-the-problem" class="headerlink" title="Failure one: Know the feature, but does not understand how they solve the problem."></a>Failure one: Know the feature, but does not understand how they solve the problem.</h2><p>Schedule is tight, I don’t have time to learn everything from zero. I start from reading article comparing ECS, kubernetes and mesos, after skiming through the introduction in their official pages. But start fast does not mean good progress, I cannot make decision after reading several articles, because I don’t know which feature is important and which is matter to me.</p>
<p>At that time, I want to get hands on experience so I can understand the framework in a better way. These will take more time on learning unrelated stuff, such as setting up and configuring the framework. In the worst case, we may found the framework we spent lots of time on it does not suit our need!</p>
<p>It will be great if we understand how the framework works without trying it. It seems impossible. But if we can focus on testing the feature we need, we already save lots of effort. To do this, we must have a good understanding on the problems framework going to use. We don’t need to understand every details, but at least having an overview of the problems.</p>
<p>A good framework solve a problem in an easy way. To pick a framework, we must understand the problems and how the framework solve them.</p>
<h2 id="Failure-two-Without-refine-the-requirement"><a href="#Failure-two-Without-refine-the-requirement" class="headerlink" title="Failure two: Without refine the requirement"></a>Failure two: Without refine the requirement</h2><p>There is no silver bullet. There does not exist a single framework good at solving all kinds of problems. Every framework have their feature and design. It is really difficult to compare them, as the pros and cons are difficult to quantize the pros and cons of the features.</p>
<p>To find out the best framework which match our need, we need a marking scheme. The marking scheme can be a list of requirement.</p>
<p>Listing requirements is a really simple step, we always think we have know what we need, we understand the problem we have to solve. Write down the requirement is often skipped as it is too simple. But in most case, it is not as simple as you think.</p>
<p>No matter how simple the problem is, never skip the step writing down the requirement. Read every single words in your requirement. Think carefully to clarify every ambiguous word in the requirement. Evil is in the detail, every ambiguity mislead you to the wrong decision.</p>
<h2 id="Failure-three-Dig-too-deep-into-the-API-which-most-of-them-are-not-useful"><a href="#Failure-three-Dig-too-deep-into-the-API-which-most-of-them-are-not-useful" class="headerlink" title="Failure three: Dig too deep into the API ( which most of them are not useful )"></a>Failure three: Dig too deep into the API ( which most of them are not useful )</h2><p>Understanding what feature does a it provided is an important step when picking a framework, but reading the API documentation is not a good way to do it.</p>
<p>I read the ECS API documentation and understand how to use the service. But at the end, I still miss some APIs I need. Even I read the APIs, I still don’t know how to use it, because I cannot remember every details important to me. The time spent on reading the API documentation is kind of wasted, because I have to read it again after I understand every detail of the problem I am going to solve.</p>
<h2 id="Workflow-on-choosing-a-suitable-framework"><a href="#Workflow-on-choosing-a-suitable-framework" class="headerlink" title="Workflow on choosing a suitable framework"></a>Workflow on choosing a suitable framework</h2><h3 id="Step-1-Understand-the-problem"><a href="#Step-1-Understand-the-problem" class="headerlink" title="Step 1. Understand the problem"></a>Step 1. Understand the problem</h3><p>This is the most important step, we have to make sure we understanding the problem completely. Any ambiguous will lead us to make a wrong decision later. When we discover the mistake during implementation, the effort to fix it is doubled or even more.</p>
<p>To understand a new problem, I suggest</p>
<ul>
<li>Learn the related knowledge about this kind of problem</li>
<li>Search how others break it down into smaller problems</li>
<li>Search how others solve the problems<br>These help use to understand the structure of the problems, give us some direction to learn the frameworks.</li>
</ul>
<h3 id="Step-2-List-the-use-cases"><a href="#Step-2-List-the-use-cases" class="headerlink" title="Step 2. List the use cases"></a>Step 2. List the use cases</h3><p>This step is important for us to understand the requirements. Idea in our head is incomplete and inconsistent. Writing down the user stories can reveal the flaw of our idea. You may found the solution in your mind is missing some component to solve the problem. These missing puzzles will be a hint to pick a suitable framework.</p>
<h3 id="Step-3-Draft-the-requirement-from-the-use-cases"><a href="#Step-3-Draft-the-requirement-from-the-use-cases" class="headerlink" title="Step 3. Draft the requirement from the use cases"></a>Step 3. Draft the requirement from the use cases</h3><p>After step 1 and 2, we have a well understanding of the problem. We should not miss any important points now. We can list the requirement from the use case easily. In this step, we should prioritize the requirements.</p>
<p>There may have no framework to help us solve all problems easily, we may need to write some code or having some workaround. The priority help us to identify the importance of different features of framework, which help us a lot on quantizing the value of frameworks.</p>
<h3 id="Step-4-Check-the-documentation-of-framework"><a href="#Step-4-Check-the-documentation-of-framework" class="headerlink" title="Step 4. Check the documentation of framework"></a>Step 4. Check the documentation of framework</h3><p>After we got marking scheme, we can start grading the framework. We can search the documentation and the API by our requirements. If the time is enough, don’t miss the APIs which are not directly related to your requirement. It may inspire us to have a more efficient solution or a simpler way to solve the problem.</p>
<p>Tips: We can google the pros and cons of frameworks in this step, we should now able to understand the technical article and identify the article is related to our problem or not.</p>
<h3 id="Step-5-Go-back-to-step-3-until-you-can-decide-which-framework-to-use"><a href="#Step-5-Go-back-to-step-3-until-you-can-decide-which-framework-to-use" class="headerlink" title="Step 5. Go back to step 3 until you can decide which framework to use"></a>Step 5. Go back to step 3 until you can decide which framework to use</h3><p>If you have any new idea, don’t hesitate to go back to step 3. The requirements may not perfect, we can update it when we find a better way to solve the problems. Repeating the steps of requirement refinement and framework research can give us more confidence on our decision, also lower the chance we missed something during planning.</p>
<h3 id="Step-6-Work-on-the-technical-specification-and-then-implement-the-solution"><a href="#Step-6-Work-on-the-technical-specification-and-then-implement-the-solution" class="headerlink" title="Step 6. Work on the technical specification and then implement the solution"></a>Step 6. Work on the technical specification and then implement the solution</h3><p>After the research, we understand our problems and tools. We know what feature is going to be implement, which API we are going to use. We can predict behavior of the system implemented from user stories. In this stage, there should be no big surprise.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I am working on building an auto-scaling docker cluster for our testing environment. I have no idea on the machine cluster, auto-scaling api and deployment framework, but I have to make decision on which framework to use and build the system. It is a challenge for me. There are lots of failure and lots of learning.&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="http://199911.github.io/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>&quot;HTML5 - the missing manual 2nd edition&quot; part 2</title>
    <link href="http://199911.github.io/review/2016/10/21/html5-missing-manual-2/"/>
    <id>http://199911.github.io/review/2016/10/21/html5-missing-manual-2/</id>
    <published>2016-10-20T16:00:00.000Z</published>
    <updated>2016-10-21T14:14:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Audio-and-Video"><a href="#Audio-and-Video" class="headerlink" title="Audio and Video"></a>Audio and Video</h2><p>Internet become a place for entertainment from sharing academic research. Better supports on video and audio are introduced in HTML5</p>
<ul>
<li>Does not have any copy protect system, any one can download.</li>
<li>Digital rights management is developing in HTML5.1</li>
<li>current positioning of video (currentTime)</li>
<li>play speed (playbackRate)</li>
<li>download progress (seekable)</li>
<li>The book say no HTML5 only solution for web chat<ul>
<li>How about web RTC?</li>
</ul>
</li>
<li>lazy loading<ul>
<li>Use <code>preload</code> attribute, but some old browser does not pay attention on it</li>
</ul>
</li>
<li>media group<ul>
<li>sync different video and audio</li>
</ul>
</li>
<li>video subtitle<ul>
<li>WebVTT,SRT, TTML</li>
</ul>
</li>
<li>There are lots of other stuff to handle, better use video player library instead of building our own.</li>
</ul>
<a id="more"></a>
<h2 id="CSS3"><a href="#CSS3" class="headerlink" title="CSS3"></a>CSS3</h2><ul>
<li>browser does not support rgba will not fallback to rgb automatically</li>
<li>vendor prefix:<ul>
<li>let developer to use new feature and give feedback</li>
<li>tell developer the style rule may change in the future</li>
</ul>
</li>
<li>‘Sliding door’ technique:<ul>
<li>Create a resizable image by breaking it into 3 piece: left, middle and right.</li>
<li>The middle one will repeat.</li>
</ul>
</li>
<li>Transition support:<ul>
<li>transparency</li>
<li>shadow</li>
<li>gradients</li>
<li>transforms<ul>
<li>move</li>
<li>scale</li>
<li>skew</li>
<li>rotate</li>
</ul>
</li>
</ul>
</li>
<li>Column layout<ul>
<li>The layout used in newspaper)</li>
<li>Properties:<ul>
<li>count</li>
<li>width</li>
<li>span</li>
<li>rule</li>
<li>gap</li>
</ul>
</li>
</ul>
</li>
<li>Responsive web design<ul>
<li>Two types<ul>
<li>fluid</li>
<li>fixed</li>
</ul>
</li>
<li>Fluid typography<ul>
<li>Two ways to implement<ul>
<li>percentage</li>
<li><code>em</code> (more popular)<ul>
<li><code>em</code> is a unit from print typography</li>
</ul>
</li>
</ul>
</li>
<li><code>calc()</code> can combine fluid and fixed design</li>
<li>Use <code>em</code> for margin, border and padding to make the layout match the font size</li>
<li>Handle multiple level responsive typography<ul>
<li><code>em</code> inherit size from parent element</li>
<li><code>rem</code> (root em) specific the absolute size</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Viewport"><a href="#Viewport" class="headerlink" title="Viewport"></a>Viewport</h3><ul>
<li>Prevent mobile browsers not to perform their automatic viewport scaling.<ul>
<li>I guess view desktop version will ignore the viewport tag</li>
</ul>
</li>
</ul>
<h3 id="Media-query"><a href="#Media-query" class="headerlink" title="Media query"></a>Media query</h3><ul>
<li>width</li>
<li>height</li>
<li>device-height</li>
<li>orientation</li>
<li>device-aspect-ratio</li>
<li>device-pixel-ratio<ul>
<li>CSS pixel vs screen pixel</li>
</ul>
</li>
<li>color<ul>
<li>Query number of bits of color coding is used by the device</li>
</ul>
</li>
</ul>
<h3 id="Mobile-first-design"><a href="#Mobile-first-design" class="headerlink" title="Mobile first design"></a>Mobile first design</h3><ul>
<li>default mobile, extra for desktop</li>
<li>TODO: read<ul>
<li><a href="https://blog.intercom.com/why-mobile-first-may-already-be-outdated/" target="_blank" rel="external">https://blog.intercom.com/why-mobile-first-may-already-be-outdated/</a></li>
<li><a href="https://codemyviews.com/blog/mobilefirst" target="_blank" rel="external">https://codemyviews.com/blog/mobilefirst</a></li>
</ul>
</li>
<li>hidden content will still be downloaded (also images!)</li>
<li>using media attribute in link tag can replace whole css script</li>
<li><code>media</code> also work for <code>&lt;video&gt;</code> element<ul>
<li>load different resolution in different device</li>
</ul>
</li>
</ul>
<h2 id="Canvas"><a href="#Canvas" class="headerlink" title="Canvas"></a>Canvas</h2><ul>
<li>require js</li>
<li>for graphically advanced applications<ul>
<li>games</li>
<li>mapping tools</li>
<li>dynamic chart</li>
<li>current only support 2d drawing</li>
<li>no semantics or accessibility (check the current)<ul>
<li>seems some new rules added in 2015</li>
</ul>
</li>
<li>can be used to copy image from video</li>
<li>have fill function</li>
</ul>
</li>
</ul>
<h2 id="Webapp"><a href="#Webapp" class="headerlink" title="Webapp"></a>Webapp</h2><h3 id="Web-storage-API"><a href="#Web-storage-API" class="headerlink" title="Web storage API"></a>Web storage API</h3><ul>
<li>may fail if open in loacl file (some browser link storage to domain name)</li>
<li>storageChanged event<ul>
<li>can sync different tabs</li>
</ul>
</li>
</ul>
<h3 id="File-API"><a href="#File-API" class="headerlink" title="File API"></a>File API</h3><ul>
<li>To use the API, need to get file from<ul>
<li>input or</li>
<li>drag and drop</li>
</ul>
</li>
<li>Can read file content</li>
<li>Can read multiple file by adding <code>multiple</code> attribute to input element</li>
<li>Drag and drop need the to readAsDataURL() method, also drag and drop event</li>
</ul>
<h3 id="IndexedDB-web-SQL-database"><a href="#IndexedDB-web-SQL-database" class="headerlink" title="IndexedDB (web SQL database)"></a>IndexedDB (web SQL database)</h3><ul>
<li>for offline applications</li>
<li>enhancing performance</li>
<li>improving local storage</li>
<li>transaction is very important in indexedDB<ul>
<li>because the task will be interrupted easily (user close the page)</li>
<li>can transaction have multiple operations?</li>
</ul>
</li>
</ul>
<h3 id="Running-webapp-offline"><a href="#Running-webapp-offline" class="headerlink" title="Running webapp offline"></a>Running webapp offline</h3><ul>
<li>Use manifest file<ul>
<li>let browser know to download the manifest file by modify the web page</li>
<li>configure the web server to serve manifest files</li>
<li>don’t cache the page with query string</li>
<li>may turn off the caching for manifest files</li>
<li>support &gt;= IE 10</li>
<li>browser may request user’s permission to download the file</li>
<li>update when user visit the page next time</li>
<li>may need to clear browser cache when testing</li>
<li>beware the space limit<ul>
<li>mobile &lt;= 50MB</li>
<li>desktop &lt;= 250MB</li>
</ul>
</li>
<li><code>SETTINGS</code> only work in firefox</li>
<li><code>FALLBACK</code> can be use with javascript to check browser is online or not</li>
</ul>
</li>
<li>Trigger update<ul>
<li>manifest cannot be cached</li>
<li>manifest file need a new date (last-updated timestamp)</li>
<li>New content in manifest<ul>
<li>may have a line of comment to specific the version</li>
</ul>
</li>
<li>Need to specific the file to download when online (cached file default not downloaded)</li>
</ul>
</li>
<li>Traditional cache vs offline application (need more research)<ul>
<li>controlled by cache-control headers and time limit vs controlled by manifest</li>
</ul>
</li>
</ul>
<h3 id="Server-sent-event"><a href="#Server-sent-event" class="headerlink" title="Server sent event"></a>Server sent event</h3><ul>
<li>Server trigger the send data action to client</li>
<li>one way communication</li>
<li>IE does not support</li>
<li>Difficult to handle in server side, need to check the web server framework support it or not</li>
</ul>
<h3 id="web-socket"><a href="#web-socket" class="headerlink" title="web socket"></a>web socket</h3><ul>
<li>Two ways communication</li>
<li>Computer network setting may block web socket<ul>
<li>Proxy server (if any) may drop the socket connection</li>
</ul>
</li>
<li>web socket server need to handle lots of complex stuff</li>
</ul>
<h3 id="Geolocation"><a href="#Geolocation" class="headerlink" title="Geolocation"></a>Geolocation</h3><ul>
<li>It is not part of HTML5</li>
<li>Require user permission</li>
<li>may not accurate</li>
<li>geolocation can help debugging</li>
</ul>
<h3 id="Web-worker"><a href="#Web-worker" class="headerlink" title="Web worker"></a>Web worker</h3><ul>
<li>worker can only run code save in a separated file</li>
<li>communicate with <code>postMessage()</code></li>
<li>can we have multiple workers?</li>
</ul>
<h3 id="History-management"><a href="#History-management" class="headerlink" title="History management"></a>History management</h3><ul>
<li>Sync url when updated the content with ajax</li>
<li>Solve bookmarking the ajax page problem<ul>
<li>The old solution is using hashbang URLs</li>
</ul>
</li>
<li>Why give up hashbang solution<ul>
<li>complex url</li>
<li>inflexibility (cannot use hash)</li>
<li>no SEO</li>
<li>Cool URLs matter</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Audio-and-Video&quot;&gt;&lt;a href=&quot;#Audio-and-Video&quot; class=&quot;headerlink&quot; title=&quot;Audio and Video&quot;&gt;&lt;/a&gt;Audio and Video&lt;/h2&gt;&lt;p&gt;Internet become a place for entertainment from sharing academic research. Better supports on video and audio are introduced in HTML5&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Does not have any copy protect system, any one can download.&lt;/li&gt;
&lt;li&gt;Digital rights management is developing in HTML5.1&lt;/li&gt;
&lt;li&gt;current positioning of video (currentTime)&lt;/li&gt;
&lt;li&gt;play speed (playbackRate)&lt;/li&gt;
&lt;li&gt;download progress (seekable)&lt;/li&gt;
&lt;li&gt;The book say no HTML5 only solution for web chat&lt;ul&gt;
&lt;li&gt;How about web RTC?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;lazy loading&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;preload&lt;/code&gt; attribute, but some old browser does not pay attention on it&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;media group&lt;ul&gt;
&lt;li&gt;sync different video and audio&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;video subtitle&lt;ul&gt;
&lt;li&gt;WebVTT,SRT, TTML&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;There are lots of other stuff to handle, better use video player library instead of building our own.&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
  <entry>
    <title>&quot;HTML5 - the missing manual 2nd edition&quot; part 1</title>
    <link href="http://199911.github.io/review/2016/10/16/html5-missing-manual-1/"/>
    <id>http://199911.github.io/review/2016/10/16/html5-missing-manual-1/</id>
    <published>2016-10-15T16:00:00.000Z</published>
    <updated>2016-10-21T14:14:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>Part 1 focus on some updated basic markup.</p>
<h2 id="Three-principle-of-html5"><a href="#Three-principle-of-html5" class="headerlink" title="Three principle of html5"></a>Three principle of html5</h2><ol>
<li>don’t break the web<ul>
<li>XHTML 2 broke the Web because it demanded an immediate, dramatic shift in the way web pages were written (and it fail)</li>
<li>compatible, support degrade on new element</li>
</ul>
</li>
<li>pave the cowpaths<ul>
<li>embracing a widely supported but poorly designed feature</li>
<li>standardize some common use case</li>
</ul>
</li>
<li><p>be practical</p>
<ul>
<li>Change base on usage and requirement</li>
</ul>
<a id="more"></a>
</li>
</ol>
<h2 id="DOCTYPE"><a href="#DOCTYPE" class="headerlink" title="DOCTYPE"></a>DOCTYPE</h2><p>It is used to set up quirks mode. The browsers render the page with buggy rule for to make the page behave same as some old buggy browser.</p>
<h2 id="HTML5-loosened-rules"><a href="#HTML5-loosened-rules" class="headerlink" title="HTML5 loosened rules"></a>HTML5 loosened rules</h2><ul>
<li>Case insensitive</li>
<li>Ignore closing slash from a void element (empty element)</li>
<li>Don’t need quotation mark in attributes (must have no special char (which need to be escaped))</li>
<li>Attribute with no value is allowed (checked)<br>Suggestion:</li>
<li>Always include <html>, <body> and <head></head></body></html></li>
</ul>
<h2 id="Three-tools-to-help-writing-HTML"><a href="#Three-tools-to-help-writing-HTML" class="headerlink" title="Three tools to help writing HTML"></a>Three tools to help writing HTML</h2><ul>
<li>can i use</li>
<li>browser usage<ul>
<li><a href="http://gs.statcounter.com" target="_blank" rel="external">http://gs.statcounter.com</a></li>
<li>Using google analystic the track your visitor can give more precise information</li>
</ul>
</li>
<li>feature detection</li>
</ul>
<h2 id="Make-old-browser-support-HTML5"><a href="#Make-old-browser-support-HTML5" class="headerlink" title="Make old browser support HTML5"></a>Make old browser support HTML5</h2><ul>
<li>Add <code>display: block;</code> to HTML5 new tag</li>
<li>Use Google’s html5shim</li>
</ul>
<h2 id="Site-with-the-Semantic-elements"><a href="#Site-with-the-Semantic-elements" class="headerlink" title="Site with the Semantic elements"></a>Site with the Semantic elements</h2><ul>
<li>Header<ul>
<li>It may overlay with the task of <code>&lt;h1&gt;</code>, <code>&lt;header&gt;</code> is useful when there are title have sub-title, author and other meta data.</li>
</ul>
</li>
<li>Sidebar<ul>
<li>Consider sidebar as nav bar, we can put <code>&lt;aside&gt;</code> inside <code>&lt;nav&gt;</code></li>
<li>Sidebar contains different section, we can put <code>&lt;nav&gt;</code> inside <code>&lt;aside&gt;</code>, more suitable to use when the sidebar is complex.</li>
</ul>
</li>
<li><code>&lt;section&gt;</code><ul>
<li>Small blocks of content</li>
<li>Small contained content that can’t really be described as an article, like a customer billing record or a product listing.</li>
<li>Groups of content</li>
<li>A portion of a longer document</li>
</ul>
</li>
<li>Collapsible boxes<ul>
<li>Use <code>&lt;summary&gt;</code> as clickable header and <code>&lt;details&gt;</code></li>
</ul>
</li>
<li>Footer<ul>
<li>common feature<ul>
<li>Fixed positioning</li>
<li>A close button</li>
<li>A partially transparent background</li>
<li>Animation</li>
</ul>
</li>
<li>We can be use a div with id to split the standard footer</li>
<li>If there are multiple section, we can use <code>&lt;aside&gt;</code></li>
</ul>
</li>
<li><code>&lt;main&gt;</code><ul>
<li>New element introduced in HTML5.1</li>
<li>Same level as <code>&lt;header&gt;</code> and <code>&lt;footer&gt;</code></li>
<li>It holds the page’s full main content, it cannot be put inside any other semantic element.</li>
</ul>
</li>
</ul>
<p>Notice the scope of tag, if there is a <footer> inside <aside>, it means it is footer of the aside.</aside></footer></p>
<h2 id="HTML5-outline-System"><a href="#HTML5-outline-System" class="headerlink" title="HTML5 outline System"></a>HTML5 outline System</h2><ul>
<li>Search engine use this to build a better page preview</li>
<li>Can be used as quality assurance tool</li>
<li>Many developer ignore this</li>
<li>In HTML 5, there can be more than one <code>&lt;h1&gt;</code>.</li>
</ul>
<h2 id="Text-level-semantics"><a href="#Text-level-semantics" class="headerlink" title="Text-level semantics"></a>Text-level semantics</h2><p>Besides page-level semantics mentioned before, there are 3 text-level semantics elements</p>
<ul>
<li><code>&lt;time&gt;</code><ul>
<li><code>datetime</code> attribute<ul>
<li>YYYY-MM-DD</li>
<li>HH:MM</li>
</ul>
</li>
<li><code>pubdate</code><ul>
<li>Publish date</li>
</ul>
</li>
</ul>
</li>
<li><code>&lt;output&gt;</code><ul>
<li>Show javascript output</li>
</ul>
</li>
<li><code>&lt;mark&gt;</code><ul>
<li>Represent a section of text that’s highlighted for reference</li>
</ul>
</li>
</ul>
<h2 id="Accessibility"><a href="#Accessibility" class="headerlink" title="Accessibility"></a>Accessibility</h2><ul>
<li>ARIA<ul>
<li>Accessible Rich Internet Application</li>
<li><code>role</code> attribute</li>
</ul>
</li>
<li>REFa</li>
<li>Microformat</li>
<li>microdata</li>
</ul>
<h2 id="Some-interest-new-feature-in-HTML5"><a href="#Some-interest-new-feature-in-HTML5" class="headerlink" title="Some interest new feature in HTML5"></a>Some interest new feature in HTML5</h2><ul>
<li>‘auto-complete’ attribute in form input</li>
<li>‘require’ and ‘optional’ attributes in form input</li>
<li><code>&lt;datalist&gt;</code> element in form</li>
<li><code>&lt;meter&gt;</code> and <code>progress</code> elements</li>
<li>‘content-editable’ and ‘design mode’ attributes</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Part 1 focus on some updated basic markup.&lt;/p&gt;
&lt;h2 id=&quot;Three-principle-of-html5&quot;&gt;&lt;a href=&quot;#Three-principle-of-html5&quot; class=&quot;headerlink&quot; title=&quot;Three principle of html5&quot;&gt;&lt;/a&gt;Three principle of html5&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;don’t break the web&lt;ul&gt;
&lt;li&gt;XHTML 2 broke the Web because it demanded an immediate, dramatic shift in the way web pages were written (and it fail)&lt;/li&gt;
&lt;li&gt;compatible, support degrade on new element&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;pave the cowpaths&lt;ul&gt;
&lt;li&gt;embracing a widely supported but poorly designed feature&lt;/li&gt;
&lt;li&gt;standardize some common use case&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;be practical&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Change base on usage and requirement&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
</feed>
