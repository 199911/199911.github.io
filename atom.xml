<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Coding Sunday</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://199911.github.io/"/>
  <updated>2017-09-29T17:24:06.000Z</updated>
  <id>http://199911.github.io/</id>
  
  <author>
    <name>Sunday Ku</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Elizabeth離開500 Startups</title>
    <link href="http://199911.github.io/diary/2017/09/30/ey-leave-500/"/>
    <id>http://199911.github.io/diary/2017/09/30/ey-leave-500/</id>
    <published>2017-09-29T16:00:00.000Z</published>
    <updated>2017-09-29T17:24:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>Elizabeth係我之前係500 Startups嘅Mentor，佢俾我嘅感覺係一個好爽朗，直接嘅人。而500 Startups係一間僅次於YC嘅VC，<br>但因為一件事，Elizabeth (下文簡稱EY) 係七月就離開左500 Startups。</p>
<a id="more"></a>
<p><a href="https://techcrunch.com/2017/07/03/employee-email-claims-500-startups-leadership-delayed-acknowledging-mcclures-harassment-as-new-allegations-surface/" target="_blank" rel="external">Employee email claims 500 Startups leadership delayed acknowledging McClure’s harassment, as new allegations surface</a></p>
<p>500 Startup嘅core value係多元同平等，所以佢地會投資好多唔同國家嘅start up，而且唔會有性別岐視，會投資係女founder身上。但係500其中一個老細Dave係一個sexual harassment嘅事件被調查，因此暫事停職。而500嘅高層冇公開到事件，嘗試幫Dave隱瞞件事。500嘅高層嘅行為，完全違背左500嘅Core value。由一個違背左Core value嘅公司帶領公司，令EY好難受，就算佢放緊產假，佢都決定辭職。</p>
<p>以佢係500嘅職位，可以輕鬆咁攞到高嘅人工。以公司嘅資源同名氣，仲可以做到好多嘅Achievement。只係公司其中一個老細違反左Core value，公司交俾另一個老細咪得lo，再者公司其他高層只係冇公開到件事，諗住「圓滑」D咁應對個問題，點解要辭職咁嚴重？隻眼開隻眼閉就可以安安穩穩過日子，為左道氣，真係值得？</p>
<p>EY係一個正直嘅人，我以佢作為我mentor為榮。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Elizabeth係我之前係500 Startups嘅Mentor，佢俾我嘅感覺係一個好爽朗，直接嘅人。而500 Startups係一間僅次於YC嘅VC，&lt;br&gt;但因為一件事，Elizabeth (下文簡稱EY) 係七月就離開左500 Startups。&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="http://199911.github.io/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>倉頡輸入法</title>
    <link href="http://199911.github.io/diary/2017/09/09/cangjie/"/>
    <id>http://199911.github.io/diary/2017/09/09/cangjie/</id>
    <published>2017-09-08T16:00:00.000Z</published>
    <updated>2017-09-09T14:17:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前一直用速成，轉左用Mac之後開始打倉頡，因為Mac好user friendly，唔洗打曬全部碼就出<br>到字。我ED半桶水嘅人好易上手，打頭2個碼好多時出就到我想要嘅字。</p>
<p>但係有D平時少字用嘅字就唔識打，要花好多時間去選字，所以都係用少少時間學返好。</p>
<a id="more"></a>
<p>大約睇左少少網上resource，發現其實識左九成，係補返少少missing knowledge，之後直接玩D打字練習，表現都ok。比我想像<br>中快上手。以下係我重温倉頡嘅resources：</p>
<h2 id="倉頡Overview"><a href="#倉頡Overview" class="headerlink" title="倉頡Overview"></a><a href="http://vicid603.pixnet.net/blog/post/36982370-%E5%80%89%E9%A0%A1%E8%BC%B8%E5%85%A5%E6%B3%95%E3%80%8C%E9%87%8D%E9%BB%9E%E6%95%99%E5%AD%B8%E3%80%8D#comment-49135221" target="_blank" rel="external">倉頡Overview</a></h2><p>非常有用嘅文：</p>
<ol>
<li>總結每個字碼代表嘅筆劃</li>
<li>總結取碼規則<br>一野就連結左我打咁耐速成嘅經驗，仲指出左我缺少左嘅倉頡知識，令我可以快速補完唔識嘅野。</li>
</ol>
<h2 id="輔助字形表"><a href="#輔助字形表" class="headerlink" title="輔助字形表"></a>輔助字形表</h2><p>有D筆劃好複雜，好易會唔記得或者記錯對應嘅字碼。<a href="http://www.hkpe.net/cj/cjtable.htm" target="_blank" rel="external">E個表</a>就可以做一個<br>reminder。睇完之後，我強力推薦<a href="https://www.ifreesite.com/typing/cangjie-2.htm" target="_blank" rel="external">E個網</a>入邊嘅輔助字形練習。</p>
<h2 id="倉頡字典"><a href="#倉頡字典" class="headerlink" title="倉頡字典"></a>倉頡字典</h2><p>有唔識打嘅字，係查字典之前，可以亂打試下。遇到唔識取嘅字碼，可以用「重」字碼代替。「重」字碼就好以regex嘅星號咁，<br>代表任何字碼。係Mac入邊，仲會列出推薦字表入邊嘅字嘅完整倉頡碼，可以唔洗查字典。</p>
<p>如果真係要查嘅話，我會用<a href="http://input.foruto.com/cccls/cjzd.html" target="_blank" rel="external">E個</a>，因為有D字佢會show埋佢點樣取碼，<br>幫助理解，唔洗死記。</p>
<h2 id="唔同嘅倉頡version"><a href="#唔同嘅倉頡version" class="headerlink" title="唔同嘅倉頡version"></a>唔同嘅倉頡version</h2><p>有D字係唔同version嘅倉頡有唔同打法，例如係個「函」字，係舊版係「弓山水」，新版係「山弓水」。但係mac幫我地handle左，2個打法都出到個「函」字。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前一直用速成，轉左用Mac之後開始打倉頡，因為Mac好user friendly，唔洗打曬全部碼就出&lt;br&gt;到字。我ED半桶水嘅人好易上手，打頭2個碼好多時出就到我想要嘅字。&lt;/p&gt;
&lt;p&gt;但係有D平時少字用嘅字就唔識打，要花好多時間去選字，所以都係用少少時間學返好。&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="http://199911.github.io/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>Move-back-to-blogging</title>
    <link href="http://199911.github.io/diary/2017/09/05/my-facebook-page/"/>
    <id>http://199911.github.io/diary/2017/09/05/my-facebook-page/</id>
    <published>2017-09-04T16:00:00.000Z</published>
    <updated>2017-09-05T15:33:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>In the last two months, I create a facebook page and share technical article with my own comment<br>in Catonese. Trying to have more interaction with others, because it is very difficult to get<br>readers on my blog.</p>
<p>After two month of trial, I decide to move back to blogging. Maintaining a facebook page is very<br>difficult, many post got less than 10 view. Number or read is even less. I don’t have much time to<br>maintain the page and acquire readers. Without enough number of readers, it is not likely to  get<br>feedback from others.</p>
<a id="more"></a>
<p>Besides facebook page, I also try to publish posts on Medium. My posts does not get lots of<br>attention, but I feel like it is the right way. I will try to get my post publish on some<br>publication with large amount of follower.</p>
<p>To get feedback, may be it better to push articles to some experts. But I have to get the contact of<br>experts first…</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In the last two months, I create a facebook page and share technical article with my own comment&lt;br&gt;in Catonese. Trying to have more interaction with others, because it is very difficult to get&lt;br&gt;readers on my blog.&lt;/p&gt;
&lt;p&gt;After two month of trial, I decide to move back to blogging. Maintaining a facebook page is very&lt;br&gt;difficult, many post got less than 10 view. Number or read is even less. I don’t have much time to&lt;br&gt;maintain the page and acquire readers. Without enough number of readers, it is not likely to  get&lt;br&gt;feedback from others.&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="http://199911.github.io/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>讀後感四</title>
    <link href="http://199911.github.io/book/2017/07/15/book-review-4/"/>
    <id>http://199911.github.io/book/2017/07/15/book-review-4/</id>
    <published>2017-07-14T16:00:00.000Z</published>
    <updated>2017-09-05T15:33:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Declaring-a-breakdown"><a href="#Declaring-a-breakdown" class="headerlink" title="Declaring a breakdown"></a>Declaring a breakdown</h1><p>本書重新define一D觀念，去幫助人地創做未來。每個chapter都有一個叫generative practices嘅section，俾你係日常生活練習D新concept</p>
<h2 id="Part-I-Getting-start"><a href="#Part-I-Getting-start" class="headerlink" title="Part I: Getting start"></a>Part I: Getting start</h2><h3 id="The-Centrality-of-Conversation"><a href="#The-Centrality-of-Conversation" class="headerlink" title="The Centrality of Conversation"></a>The Centrality of Conversation</h3><ul>
<li>What is conversation<ul>
<li>create action, meaning, listening, moods and emotions and future</li>
<li>also include moods and body langage</li>
</ul>
</li>
<li>3 types of conversation<ul>
<li>generative: create action, outcomes of action, possibilities, commitments, identities, etc<ul>
<li>It is the most important type of conversation in leadership</li>
</ul>
</li>
<li>descriptive</li>
<li>speculative: intent to explore possibilities</li>
<li>active: create a mood for action and keep promise</li>
</ul>
</li>
<li>Generative Practices<ul>
<li>Aware ‘word spoken’ != ‘idea heard’ in daily conversation</li>
<li>Observe how one’s experience and culture affect ‘word heard’</li>
<li>Aware how conversation provoke emotions</li>
<li>Observe how conversation with emotion affect others</li>
<li>Observe how conversation create future</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h3 id="Transparency"><a href="#Transparency" class="headerlink" title="Transparency"></a>Transparency</h3><ul>
<li>What we see is we are looking for<ul>
<li>Sounds like confirmation bias</li>
</ul>
</li>
<li>We live in two world, physical world and the linguistic world that we create and manifest<ul>
<li>We also live in the world we see, not alway the objective physical world</li>
</ul>
</li>
<li>Our actions or inactions in the present leading us to a future</li>
</ul>
<h3 id="Interruption-that-require-coping"><a href="#Interruption-that-require-coping" class="headerlink" title="Interruption that require coping"></a>Interruption that require coping</h3><ul>
<li>Interruption is a break in the transparent flow of action that we need to pay attention</li>
<li>An interruption may interrupt our attention, behaviour, practice, even expectations and interpreation of future</li>
<li>It bring us to attend the actions or events which were invisible to us before</li>
<li>It implies a possibility of change</li>
<li>Declare breakdown is to listen the interruption, to find out possibilities and take action to change the default future</li>
<li>Generative Practices<ul>
<li>Explore how the interruption that you choosen to create help you</li>
<li>Reflect how do you observe interruption in the recent past</li>
</ul>
</li>
</ul>
<h2 id="Part-II-The-6-step-Process-at-a-Glance"><a href="#Part-II-The-6-step-Process-at-a-Glance" class="headerlink" title="Part II: The 6-step Process at a Glance"></a>Part II: The 6-step Process at a Glance</h2><ol>
<li>Declare Breakdown<ul>
<li>Declaring you will take action</li>
</ul>
</li>
<li>Assertion<ul>
<li>Observe facts, action happend or did not happen</li>
<li>No stories, no justification, no explanation or no reasons. Only focus on facts</li>
</ul>
</li>
<li>Think about the default future, if no new action is taken</li>
<li>Figure out the new future you want</li>
<li>Identify the tension between ideal world and current situation<ul>
<li>Find out missing action and owkr on it</li>
</ul>
</li>
<li>Take action</li>
</ol>
<h3 id="Declare-Breakdown"><a href="#Declare-Breakdown" class="headerlink" title="Declare Breakdown"></a>Declare Breakdown</h3><ul>
<li>Care is fundamental to declaring breakdowns</li>
<li>Declaration brings forth new possibilities</li>
<li>Declare future with experience limit ourselves by the past, don’t do it</li>
<li>Declaration from persion who is not authorized is useless</li>
<li>Declaration is taking responsibility</li>
<li>Blame is ‘not taking responsibility’. It is choosing not be the cause of problem and hope someone else will solve the problem</li>
<li>Only you can declare a breakdown, other cannot declare it for you</li>
<li>Generative Practices<ul>
<li>Reflect what you care about</li>
<li>Is there missing declaration on the area you care?</li>
<li>Do you choose to take responsibility</li>
<li>Do your team have a shared promise?</li>
<li>Consider declare a breakdown every time the team prmoise is at threat or at risk</li>
</ul>
</li>
</ul>
<h3 id="Get-Present-to-‘What-Is-So’"><a href="#Get-Present-to-‘What-Is-So’" class="headerlink" title="Get Present to ‘What Is So’"></a>Get Present to ‘What Is So’</h3><ul>
<li>What is assertion<ul>
<li>Claims of facts</li>
<li>either true or false</li>
<li>standard established by the community</li>
<li>measurable or evidentiary</li>
<li>reveal thing being observed</li>
<li>about past and the present</li>
<li>the lanugage is most descriptive and least generative</li>
<li>not determined by moods and emotions</li>
</ul>
</li>
<li>What is assesssments<ul>
<li>judgements, opinions or conclusions</li>
<li>never true or false, but can be grounded or ungrounded</li>
<li>different observers make different assessments</li>
<li>the language is generative and creately</li>
<li>influence by moods and emotions</li>
</ul>
</li>
<li>Need to make question to assessment, which may affect your future badly</li>
<li>People limited by assessments</li>
<li>Questions help you ground an assessment<ul>
<li>For the sake of what am I making this assessment?</li>
<li>In which domain of action has this assessment been made?</li>
<li>According to what or whose standard am I operationg when I have made this assessment?</li>
<li>What true assertions support the assessment that I have made?</li>
<li>What true assertions are couinter to the assessment that I have made?</li>
</ul>
</li>
<li>What doess acceptance mean?<ul>
<li>acknowledgeing ‘what is’, but not acknowledging your assessments as ‘the Truth’</li>
</ul>
</li>
<li>3Cs of leadership</li>
<li>Generative Practices<ul>
<li>Spend 10 minute to think about assessments you made about the events in the day</li>
<li>Think 3 major situations that your are overwhelmed by your interpretation of the events.</li>
<li>Get present and ground assessments you made about yourself</li>
<li>Find out assessment you have on different people</li>
</ul>
</li>
</ul>
<h3 id="Default-Future"><a href="#Default-Future" class="headerlink" title="Default Future"></a>Default Future</h3><ul>
<li>The default future is most times simply a repetition of the past</li>
<li>Your past assessment -&gt; your action -&gt; default future</li>
<li>Awareness create choice -&gt; declare breakdown to change the future</li>
<li>Generative Practices<ul>
<li>Consider the default future of following area<ul>
<li>Health, Family, Career and organization, Hobbies, Emotional</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Create-a-new-future"><a href="#Create-a-new-future" class="headerlink" title="Create a new future"></a>Create a new future</h3><ul>
<li>Some conversation close and others open possibilities</li>
<li>Don’t need to know ‘how to achieve’ before get start, ‘What’ needs to come first and then<br>‘How’ starts to get disclosed</li>
<li>Take action with ‘not knowing’ is a skill</li>
</ul>
<h3 id="Identifying-mission-actions"><a href="#Identifying-mission-actions" class="headerlink" title="Identifying mission actions"></a>Identifying mission actions</h3><ul>
<li>Commitment shape action</li>
<li>Conversation raise commitment</li>
<li>Listen to dissatisfaction to find our missing actions</li>
<li>Listening is an interpretation that the listener makes based on his or her context</li>
<li>4 important types of listening<ul>
<li>Listening to make yourself right<ul>
<li>Only aware what you want to hear</li>
</ul>
</li>
<li>Listening for Objective Facts<ul>
<li>Objective facts not always depend on past assessments</li>
<li>Help us to make grounded assessments and not depends on past ungrounded assessments</li>
</ul>
</li>
<li>Listening for Care and Commitment</li>
<li>Listening for Possibilities</li>
</ul>
</li>
<li>Need to build up relation before getting meaningful and productive results from people</li>
<li>Objective of conversion for relationship is to establish shared interest, shared care and shared commitment</li>
</ul>
<h3 id="Conversation-for-action"><a href="#Conversation-for-action" class="headerlink" title="Conversation for action"></a>Conversation for action</h3><ul>
<li>Milestone of conversation for action<ol>
<li>request</li>
<li>negotiation<ul>
<li>accept</li>
<li>decline</li>
<li>counter-offer</li>
</ul>
</li>
<li>promise</li>
<li>execution</li>
<li>declaration of completion</li>
<li>declaration of satisfaction / dissatisfaction</li>
<li>revoke / cancel</li>
</ol>
</li>
<li>Generative Practices<ul>
<li>Are you making dffective requests? What elements of requests are generally missing for you?</li>
<li>Are you committed to action, or are you committed to comfort?</li>
<li>What do you do when you make a request and recieve a commitment that you canno trust? Do you accept this untrustworthy commitment?</li>
<li>You have a choice to let the person know that you do not trust his/her commitment. and seek a commitment that you can trust</li>
</ul>
</li>
</ul>
<h3 id="Execution"><a href="#Execution" class="headerlink" title="Execution"></a>Execution</h3><ul>
<li>Listening to too many will shake your conviction</li>
<li>Failure is an assessment. Faliure is not an assertion</li>
<li>Confusion is an indulgence, give them an excuse for taking no action</li>
<li>Confusion -&gt; inaction -&gt; confusion. It is a vicious circle</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Declaring-a-breakdown&quot;&gt;&lt;a href=&quot;#Declaring-a-breakdown&quot; class=&quot;headerlink&quot; title=&quot;Declaring a breakdown&quot;&gt;&lt;/a&gt;Declaring a breakdown&lt;/h1&gt;&lt;p&gt;本書重新define一D觀念，去幫助人地創做未來。每個chapter都有一個叫generative practices嘅section，俾你係日常生活練習D新concept&lt;/p&gt;
&lt;h2 id=&quot;Part-I-Getting-start&quot;&gt;&lt;a href=&quot;#Part-I-Getting-start&quot; class=&quot;headerlink&quot; title=&quot;Part I: Getting start&quot;&gt;&lt;/a&gt;Part I: Getting start&lt;/h2&gt;&lt;h3 id=&quot;The-Centrality-of-Conversation&quot;&gt;&lt;a href=&quot;#The-Centrality-of-Conversation&quot; class=&quot;headerlink&quot; title=&quot;The Centrality of Conversation&quot;&gt;&lt;/a&gt;The Centrality of Conversation&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;What is conversation&lt;ul&gt;
&lt;li&gt;create action, meaning, listening, moods and emotions and future&lt;/li&gt;
&lt;li&gt;also include moods and body langage&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3 types of conversation&lt;ul&gt;
&lt;li&gt;generative: create action, outcomes of action, possibilities, commitments, identities, etc&lt;ul&gt;
&lt;li&gt;It is the most important type of conversation in leadership&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;descriptive&lt;/li&gt;
&lt;li&gt;speculative: intent to explore possibilities&lt;/li&gt;
&lt;li&gt;active: create a mood for action and keep promise&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Generative Practices&lt;ul&gt;
&lt;li&gt;Aware ‘word spoken’ != ‘idea heard’ in daily conversation&lt;/li&gt;
&lt;li&gt;Observe how one’s experience and culture affect ‘word heard’&lt;/li&gt;
&lt;li&gt;Aware how conversation provoke emotions&lt;/li&gt;
&lt;li&gt;Observe how conversation with emotion affect others&lt;/li&gt;
&lt;li&gt;Observe how conversation create future&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Book Review" scheme="http://199911.github.io/categories/Book-Review/"/>
    
    
  </entry>
  
  <entry>
    <title>讀後感三</title>
    <link href="http://199911.github.io/book/2017/06/03/book-review-3/"/>
    <id>http://199911.github.io/book/2017/06/03/book-review-3/</id>
    <published>2017-06-02T16:00:00.000Z</published>
    <updated>2017-09-05T15:33:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="反脆弱"><a href="#反脆弱" class="headerlink" title="反脆弱"></a>反脆弱</h1><ul>
<li>重覆嘅生活會帶來慢性壓力</li>
<li>系統個體脆弱，可以為成個系統帶來反脆弱嘅特性<ul>
<li>因為其他人從錯誤中學習，為成個系統帶黎進步</li>
<li>重點在錯誤要受控，不能毀滅成個系統</li>
</ul>
</li>
<li>不要對小資訊過份敏感</li>
<li>書中認為大量資訊會令人受到雜訊影響，做出錯誤決定<ul>
<li>我認為只要用統計學嘅方法就可以過濾雜訊</li>
</ul>
</li>
<li>誤將觸媒當成起因<ul>
<li>研究邊一條草壓死駱駝係冇用，因為重點唔係條草到</li>
<li>將重點放係如何接受風險，唔係預測風險</li>
</ul>
</li>
<li>有脆弱性嘅系統，好易因為一次錯誤而令你個嘅optimatization賺嘅野冇曬</li>
<li>係好多領域，中庸之道唔係最好選擇<ul>
<li>同時投資2個極端更安全</li>
</ul>
</li>
<li>選擇權係反脆弱重要嘅一環</li>
<li>選擇權多，需要嘅知識比較少</li>
<li>作者認為選擇權比知識重要</li>
<li>「整件事需要完全不費吹灰之力，才值得去做。」<ul>
<li>E個話有D意思，係擴闊領域果時好有用，因為係以最少effort學到最多野</li>
<li>但係專精一件事上，難免要難花費唔少精神先可以有少少成果</li>
</ul>
</li>
<li>有時候唔應該太過執著理論同原因，跟據現實嘅feedback，直接tune個策略更加有用<ul>
<li>理論唔係完全冇用，可以當做一個abstraction，以誤差做代價去簡化事情</li>
</ul>
</li>
<li>人跟據脆弱性，易唔係機率做決定<ul>
<li>特別係當其中一個帶黎嘅後果遠大於另一面嘅時候</li>
<li>某一D情況下，跟據expected value去做決定係違反人性</li>
</ul>
</li>
<li>電子交易脆弱，因為所有系統用類似嘅algo，一有錯誤會propagate出去</li>
<li>估計脆弱性，要考慮假設錯誤對系統嘅影響</li>
<li>有D咩唔好做同要做D咩一樣重要<ul>
<li>要為自己冇做嘅事驕傲</li>
</ul>
</li>
<li>舊技術唔一定比新技術差，因為未有足夠嘅時間去淘汰較差嘅新技術<ul>
<li>要留意新舊技術嘅共通點，唔好單單睇佢地嘅差異</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h1 id="Digital-design-theory-Readings-from-the-field"><a href="#Digital-design-theory-Readings-from-the-field" class="headerlink" title="Digital design theory - Readings from the field"></a>Digital design theory - Readings from the field</h1><ul>
<li>集合左1960到易家嘅一D designer寫嘅文章</li>
<li>睇到電腦出現對design industry嘅影響</li>
<li>1960 - 1970<ul>
<li>電腦岩岩出現。Designer開始提出要standardize design，利用電腦去改進</li>
</ul>
</li>
<li>1970 - 1980<ul>
<li>電腦開始普及，設計唔再俾大公司壟斷</li>
<li>開始提出Designer要識用computer science，唔係單單只係design。電腦係新一代designer唔可以缺少嘅工具</li>
<li>Mac出現，graphical computer令到電腦唔再單單係一樣工具，己經係一個medium。Designer 開始要design電腦show出來嘅野，唔單單係用電腦去整product，開始有UI/UX 嘅concept出現</li>
</ul>
</li>
<li>2000 ~ Present<ul>
<li>開始用biology嘅角度比轉網絡，例如ecosystem,生態等</li>
<li>網絡開始轉變，由以往pubisher到custom嘅單向資訊傳輸變成用戶間雙向嘅interactive</li>
<li>Design嘅心態轉變，focus係用戶點樣interact</li>
</ul>
</li>
<li>文中提到一間叫LettError嘅design公司，佢地有一個font嘅得意idea<ul>
<li>隻font係dynamic，會收集唔同嘅數據，跟據唔同嘅環境轉變。例如天氣潮濕可以整濛隻字，好以化開咁。又可以嘅據唔同嘅背景去微調D字，扮D字print係唔同紙質嘅效果</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;反脆弱&quot;&gt;&lt;a href=&quot;#反脆弱&quot; class=&quot;headerlink&quot; title=&quot;反脆弱&quot;&gt;&lt;/a&gt;反脆弱&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;重覆嘅生活會帶來慢性壓力&lt;/li&gt;
&lt;li&gt;系統個體脆弱，可以為成個系統帶來反脆弱嘅特性&lt;ul&gt;
&lt;li&gt;因為其他人從錯誤中學習，為成個系統帶黎進步&lt;/li&gt;
&lt;li&gt;重點在錯誤要受控，不能毀滅成個系統&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;不要對小資訊過份敏感&lt;/li&gt;
&lt;li&gt;書中認為大量資訊會令人受到雜訊影響，做出錯誤決定&lt;ul&gt;
&lt;li&gt;我認為只要用統計學嘅方法就可以過濾雜訊&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;誤將觸媒當成起因&lt;ul&gt;
&lt;li&gt;研究邊一條草壓死駱駝係冇用，因為重點唔係條草到&lt;/li&gt;
&lt;li&gt;將重點放係如何接受風險，唔係預測風險&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有脆弱性嘅系統，好易因為一次錯誤而令你個嘅optimatization賺嘅野冇曬&lt;/li&gt;
&lt;li&gt;係好多領域，中庸之道唔係最好選擇&lt;ul&gt;
&lt;li&gt;同時投資2個極端更安全&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;選擇權係反脆弱重要嘅一環&lt;/li&gt;
&lt;li&gt;選擇權多，需要嘅知識比較少&lt;/li&gt;
&lt;li&gt;作者認為選擇權比知識重要&lt;/li&gt;
&lt;li&gt;「整件事需要完全不費吹灰之力，才值得去做。」&lt;ul&gt;
&lt;li&gt;E個話有D意思，係擴闊領域果時好有用，因為係以最少effort學到最多野&lt;/li&gt;
&lt;li&gt;但係專精一件事上，難免要難花費唔少精神先可以有少少成果&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有時候唔應該太過執著理論同原因，跟據現實嘅feedback，直接tune個策略更加有用&lt;ul&gt;
&lt;li&gt;理論唔係完全冇用，可以當做一個abstraction，以誤差做代價去簡化事情&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;人跟據脆弱性，易唔係機率做決定&lt;ul&gt;
&lt;li&gt;特別係當其中一個帶黎嘅後果遠大於另一面嘅時候&lt;/li&gt;
&lt;li&gt;某一D情況下，跟據expected value去做決定係違反人性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;電子交易脆弱，因為所有系統用類似嘅algo，一有錯誤會propagate出去&lt;/li&gt;
&lt;li&gt;估計脆弱性，要考慮假設錯誤對系統嘅影響&lt;/li&gt;
&lt;li&gt;有D咩唔好做同要做D咩一樣重要&lt;ul&gt;
&lt;li&gt;要為自己冇做嘅事驕傲&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;舊技術唔一定比新技術差，因為未有足夠嘅時間去淘汰較差嘅新技術&lt;ul&gt;
&lt;li&gt;要留意新舊技術嘅共通點，唔好單單睇佢地嘅差異&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Book Review" scheme="http://199911.github.io/categories/Book-Review/"/>
    
    
  </entry>
  
  <entry>
    <title>讀後感二</title>
    <link href="http://199911.github.io/book/2017/05/27/book-review-2/"/>
    <id>http://199911.github.io/book/2017/05/27/book-review-2/</id>
    <published>2017-05-26T16:00:00.000Z</published>
    <updated>2017-05-27T13:37:17.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一人一故事-新聞人的心聲細語"><a href="#一人一故事-新聞人的心聲細語" class="headerlink" title="一人一故事 新聞人的心聲細語"></a>一人一故事 新聞人的心聲細語</h2><p>記者嘅工作唔係一成不變，有好多唔同嘅挑戰。有唔少記者都感嘆自己做得唔夠，唔係就可以帶來多D改變。</p>
<a id="more"></a>
<h2 id="蘇菲的世界（下）"><a href="#蘇菲的世界（下）" class="headerlink" title="蘇菲的世界（下）"></a>蘇菲的世界（下）</h2><p>披住小說皮嘅哲學史Sum up，簡單介紹由古至今西方哲學思想</p>
<ul>
<li>洛克 (經驗主義)<ul>
<li>事物分為能客觀測量嘅主要性質同只能主觀感受嘅次要性質</li>
</ul>
</li>
<li>柏克萊 (經驗主義)<ul>
<li>質疑物質嘅真實性</li>
<li>人的感受只係出自於「靈」，並唔係真實存在</li>
</ul>
</li>
<li>啟蒙運動<ul>
<li>反抗權威</li>
<li>理性主義</li>
<li>文化上的樂觀態度</li>
<li>回歸自然</li>
<li>自然宗教<ul>
<li>自然神論<ul>
<li>神在創造世界後就唔再干涉</li>
</ul>
</li>
</ul>
</li>
<li>人權</li>
</ul>
</li>
<li>康德<ul>
<li>感官和理性互相影響</li>
<li>實踐的設准<ul>
<li>無法證明的假設，但為了實踐而假設為真</li>
</ul>
</li>
<li>道德係天生，先於經驗，但並非基於理性</li>
</ul>
</li>
<li>浪漫主義<ul>
<li>普世浪漫主義<ul>
<li>世界精神<ul>
<li>世界為一個完整有機體</li>
</ul>
</li>
</ul>
</li>
<li>民族浪漫主義<ul>
<li>重點在人民嘅歷史，語言同文化</li>
</ul>
</li>
</ul>
</li>
<li>黑格爾<ul>
<li>冇永恆的真理，哲學唯一可倚賴嘅固定點就係歷史</li>
<li>理性係漸進式</li>
<li>歷史嘅進程係「正反合」</li>
<li>人並唔係絕對自由，受到生存嘅歷史環境影響</li>
</ul>
</li>
<li>齊克果<ul>
<li>反對黑格爾嘅觀點忽視左個人</li>
<li>認為真理係個人的，係人所關心嘅事物</li>
<li>人嘅存在有三個階段<ul>
<li>美感階段</li>
<li>道德階段</li>
<li>宗教階段</li>
</ul>
</li>
</ul>
</li>
<li>馬克思<ul>
<li>認為政治，哲學等上層構造基於物質，經濟等社會基礎</li>
<li>每個歷史，必有階級鬥爭，只有革命先可以有改變</li>
<li>職業係人重要嘅一部份</li>
</ul>
</li>
<li>達爾文主義<ul>
<li>演化論</li>
</ul>
</li>
<li>佛洛伊德<ul>
<li>人的行為唔一定出於理性，會受到本能影響</li>
<li>影響超現實主義</li>
</ul>
</li>
<li>存在主義<ul>
<li>沙特<ul>
<li>人要為自己嘅決定負責，係自由嘅詛咒</li>
</ul>
</li>
</ul>
</li>
<li>荒謬主義<ul>
<li>以荒謬反諷，引起人對現實嘅反思</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一人一故事-新聞人的心聲細語&quot;&gt;&lt;a href=&quot;#一人一故事-新聞人的心聲細語&quot; class=&quot;headerlink&quot; title=&quot;一人一故事 新聞人的心聲細語&quot;&gt;&lt;/a&gt;一人一故事 新聞人的心聲細語&lt;/h2&gt;&lt;p&gt;記者嘅工作唔係一成不變，有好多唔同嘅挑戰。有唔少記者都感嘆自己做得唔夠，唔係就可以帶來多D改變。&lt;/p&gt;
    
    </summary>
    
      <category term="Book Review" scheme="http://199911.github.io/categories/Book-Review/"/>
    
    
  </entry>
  
  <entry>
    <title>讀後感一</title>
    <link href="http://199911.github.io/book/2017/05/06/book-review-1/"/>
    <id>http://199911.github.io/book/2017/05/06/book-review-1/</id>
    <published>2017-05-05T16:00:00.000Z</published>
    <updated>2017-05-06T11:53:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>決定將非technical嘅書嘅讀後感放係同一個cat到</p>
<h2 id="钝感力"><a href="#钝感力" class="headerlink" title="钝感力"></a>钝感力</h2><p>幾有意思，有部份例子唔太認同。但係不為瑣事動搖嘅能力的確係一種重要才能。</p>
<h2 id="發掘你的太陽魔力"><a href="#發掘你的太陽魔力" class="headerlink" title="發掘你的太陽魔力"></a>發掘你的太陽魔力</h2><p>以半小說形式介紹太陽劇團嘅人員點樣保持熱情，keep住創新。</p>
<a id="more"></a>
<h2 id="嗨-我是和尚。東大IT僧侶修行日記"><a href="#嗨-我是和尚。東大IT僧侶修行日記" class="headerlink" title="嗨! 我是和尚。東大IT僧侶修行日記"></a>嗨! 我是和尚。東大IT僧侶修行日記</h2><p>E 本書顛覆我對佛教嘅印象，估唔到日本嘅佛教可以咁有活力，會有人肯創新，借出佛寺搞音樂會，開上網cafe，令佛教追上時代。作者唔係佛教世家，作為一個外人進入佛教世界，特別多思考，相當有趣。文中有唔少金句。</p>
<blockquote>
<p>如果不是出自作者內心，已經成為其身上血肉的語言，是無法被衆人之耳聽進去的。</p>
<p>並非「原因必然導致結果」，而是「事出必有因」</p>
<p>對於靠著金錢的支援來建構的人生而感到安心，這種狀態其實是最危險的。假使我們難得生而為人，卻放棄生而為人應該以多面相的感性來品嘗人生，而活在金錢這種空虛的安全感之中度日，這樣的人生才叫做充滿風險的人生。<br>「我身為出家人，就必須將我的天線伸往各種不同的方向來磨練我的感性才行」<br>我們並不應該遇到任何事都直接用很正面積極去接納並且一概認為都是好的，而是要更加珍惜這種愕然的感覺，然後從正面去超越。<br>旅行的高手則是無論在哪裡都能夠找到自己的地方，當作自己的家一樣悠閒自在，一旦成了旅行達人，則會發現全世界沒有任何一個自己不可以落腳的地方。</p>
</blockquote>
<p>PS：原來日本政府係導入議院內閣制之前，用佛教集團本願寺做體制實驗</p>
<h2 id="FBI教你辦公室讀心術"><a href="#FBI教你辦公室讀心術" class="headerlink" title="FBI教你辦公室讀心術"></a>FBI教你辦公室讀心術</h2><p>雖然傳統成日講唔好以貌取人，但人天生係視覺為主，始終要注意一下。書中主要講解人嘅非語言行為，<br>非語言行為都係溝通嘅一種，可以幫助溝通，表現出同理心。書名「讀心術」只係吸引讀者嘅一種方法，並非咩神奇技能。</p>
<ul>
<li>用對方一模一樣嘅字詞提高共同感，注意係要用同一個字詞，同義或類近嘅都唔得</li>
<li>人在自在嘅時候會模仿對方嘅行為</li>
<li>當人改變站姿，腳尖轉向另一邊代表想走開</li>
<li>以腹部面對人以示專重</li>
<li>人向前傾表示專重或對此事感興趣</li>
<li>缺乏安全感時，會隱藏大拇指</li>
<li>禮儀的基本要素，其實是一種讓別人感到舒服的藝術，它指的是用心留意發生在周遭的事物</li>
<li>握手時如想強調自己的善意，可以月另一集手碰觸對方的上臂或手肘，不可用手蓋住對方的手</li>
<li>如果你看到不安的非言語行為，除非時機適當，否則不宜當場挑明<ul>
<li>可以想辦法把話題繞回剛剛在討論的事情</li>
</ul>
</li>
</ul>
<h2 id="蘇菲的世界（上）"><a href="#蘇菲的世界（上）" class="headerlink" title="蘇菲的世界（上）"></a>蘇菲的世界（上）</h2><p>披住小說皮嘅哲學史Sum up，簡單介紹由古至今西方哲學思想</p>
<ul>
<li>詭辯學派(相對主義)<ul>
<li>主張善良、真理、正義都與人本身需要的利益相關，所以沒有絕對的真理與正義</li>
</ul>
</li>
<li>理型論<ul>
<li>世界分為感觀世界及理型世界<ul>
<li>感觀世界不斷變化</li>
<li>理型世界為永恆不變，存在世上萬物的理想形象，只能以理性去體會</li>
</ul>
</li>
</ul>
</li>
<li>四因論<ul>
<li>唔認同理型論，認為世界冇天生嘅概念，概念係人以理性分類出來的</li>
<li>目的因<ul>
<li>認為世上所有事物都因一個目的而誕生</li>
</ul>
</li>
</ul>
</li>
<li>犬儒學派<ul>
<li>認為真正的幸福並唔係建立喺外來嘅好處。每人都可以獲得幸福，而且一旦擁有，就絕對不會再失去。唔需要去擔心任何野。</li>
</ul>
</li>
<li>一元論<ul>
<li>世界只有一個大自然，冇所為精神或物質世界</li>
</ul>
</li>
<li>人本主義<ul>
<li>以個人為中心</li>
</ul>
</li>
<li>伊比鳩魯學派<ul>
<li>認為人生係追求快樂，但認為要克制慾望才可以過快樂嘅生活</li>
</ul>
</li>
<li>神秘主義<ul>
<li>一元論嘅一種，認為「一」就係上帝</li>
</ul>
</li>
<li>文藝復興<ul>
<li>由以神為中心嘅世界觀回歸到人本主義</li>
</ul>
</li>
<li>巴洛克<ul>
<li>理想主義(唯心主義)<ul>
<li>認為自然界本質存在一種精神</li>
</ul>
</li>
<li>唯物主義<ul>
<li>認為自然萬物由具體嘅物質所產生</li>
</ul>
</li>
</ul>
</li>
<li>泛神論<ul>
<li>大自然就係神，並唔存在超自然嘅野</li>
</ul>
</li>
<li>經驗主義<ul>
<li>唔存在先天嘅經驗</li>
<li>經驗經心靈分析感覺而誕生</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;決定將非technical嘅書嘅讀後感放係同一個cat到&lt;/p&gt;
&lt;h2 id=&quot;钝感力&quot;&gt;&lt;a href=&quot;#钝感力&quot; class=&quot;headerlink&quot; title=&quot;钝感力&quot;&gt;&lt;/a&gt;钝感力&lt;/h2&gt;&lt;p&gt;幾有意思，有部份例子唔太認同。但係不為瑣事動搖嘅能力的確係一種重要才能。&lt;/p&gt;
&lt;h2 id=&quot;發掘你的太陽魔力&quot;&gt;&lt;a href=&quot;#發掘你的太陽魔力&quot; class=&quot;headerlink&quot; title=&quot;發掘你的太陽魔力&quot;&gt;&lt;/a&gt;發掘你的太陽魔力&lt;/h2&gt;&lt;p&gt;以半小說形式介紹太陽劇團嘅人員點樣保持熱情，keep住創新。&lt;/p&gt;
    
    </summary>
    
      <category term="Book Review" scheme="http://199911.github.io/categories/Book-Review/"/>
    
    
  </entry>
  
  <entry>
    <title>簡評十六</title>
    <link href="http://199911.github.io/insight/2017/04/17/commentaries-16/"/>
    <id>http://199911.github.io/insight/2017/04/17/commentaries-16/</id>
    <published>2017-04-16T16:00:00.000Z</published>
    <updated>2017-05-06T09:39:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Releasing-Prettier-1-0"><a href="#Releasing-Prettier-1-0" class="headerlink" title="Releasing Prettier 1.0"></a><a href="http://jlongster.com/prettier-1.0" target="_blank" rel="external">Releasing Prettier 1.0</a></h2><p>好似幾方面，冇學過compiler，唔識implement AST。原來compiler D theory 可以咁apply。</p>
<h2 id="Sealing-JavaScript-Objects-using-Object-seal"><a href="#Sealing-JavaScript-Objects-using-Object-seal" class="headerlink" title="Sealing JavaScript Objects using Object.seal()"></a><a href="https://techshard.com/2017/04/16/sealing-javascript-objects-using-object-seal/" target="_blank" rel="external">Sealing JavaScript Objects using Object.seal()</a></h2><p><code>Object.seal()</code> is not making the object immutable, even no new properties can be added, properties can be updated.<br>We can use <code>Object.freeze()</code>, but notice the nested object inside is not frozen.</p>
<h2 id="Debugging-Tips-and-Tricks"><a href="#Debugging-Tips-and-Tricks" class="headerlink" title="Debugging Tips and Tricks"></a><a href="https://css-tricks.com/debugging-tips-tricks/" target="_blank" rel="external">Debugging Tips and Tricks</a></h2><p>Very useful</p>
<ul>
<li>Calling <code>debugger;</code> in code will pause the code execution</li>
<li><code>console.dir()</code> can log and interactive list</li>
<li>Responsive image linter: <a href="https://github.com/ausi/respimagelint" target="_blank" rel="external">https://github.com/ausi/respimagelint</a></li>
<li>Accessibility extension: <a href="https://chrome.google.com/webstore/detail/axe/lhdoppojpmngadmnindnejefpokejbdd" target="_blank" rel="external">https://chrome.google.com/webstore/detail/axe/lhdoppojpmngadmnindnejefpokejbdd</a></li>
<li>Dev tips: <a href="https://umaar.com/dev-tips/" target="_blank" rel="external">https://umaar.com/dev-tips/</a></li>
<li>Mobile browser console: <a href="http://eruda.liriliri.io/" target="_blank" rel="external">http://eruda.liriliri.io/</a></li>
</ul>
<h2 id="How-to-Safely-Enable-WordPress-SVG-Support"><a href="#How-to-Safely-Enable-WordPress-SVG-Support" class="headerlink" title="How to Safely Enable WordPress SVG Support"></a><a href="https://kinsta.com/blog/wordpress-svg/" target="_blank" rel="external">How to Safely Enable WordPress SVG Support</a></h2><p>Svg is an XML file, content need to be sanitized to prevent security problems.</p>
<h2 id="Release-Notes-for-Safari-Technology-Preview-27"><a href="#Release-Notes-for-Safari-Technology-Preview-27" class="headerlink" title="Release Notes for Safari Technology Preview 27"></a><a href="https://webkit.org/blog/7497/release-notes-for-safari-technology-preview-27/" target="_blank" rel="external">Release Notes for Safari Technology Preview 27</a></h2><p>Unprefixed intrinsic sizing keyword, <code>max-content</code>, <code>min-content</code>, but this value does not support in IE. Still cannot be used in production</p>
<h2 id="Between-the-Lines"><a href="#Between-the-Lines" class="headerlink" title="Between the Lines"></a><a href="https://css-tricks.com/between-the-lines/" target="_blank" rel="external">Between the Lines</a></h2><p>Use <code>calc()</code> with linear interpolation to make smooth responsive design. Very good effect if use with <code>rem</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Releasing-Prettier-1-0&quot;&gt;&lt;a href=&quot;#Releasing-Prettier-1-0&quot; class=&quot;headerlink&quot; title=&quot;Releasing Prettier 1.0&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://jlon
    
    </summary>
    
      <category term="Insight" scheme="http://199911.github.io/categories/Insight/"/>
    
    
  </entry>
  
  <entry>
    <title>簡評十七</title>
    <link href="http://199911.github.io/insight/2017/04/17/commentaries-17/"/>
    <id>http://199911.github.io/insight/2017/04/17/commentaries-17/</id>
    <published>2017-04-16T16:00:00.000Z</published>
    <updated>2017-05-20T03:17:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Google’s-real-Kubernetes-magic-is-all-about-community-not-code"><a href="#Google’s-real-Kubernetes-magic-is-all-about-community-not-code" class="headerlink" title="Google’s real Kubernetes magic is all about community, not code"></a><a href="http://www.techrepublic.com/article/googles-real-kubernetes-magic-is-all-about-community-not-code/?utm_source=wanqu.co&amp;utm_campaign=Wanqu+Daily&amp;utm_medium=rss" target="_blank" rel="external">Google’s real Kubernetes magic is all about community, not code</a></h2><p>When come to real world situation, the team’s average quality is much more important than individual’s. This is an good example. When there is a good community, there will be more resources to help the project. More effective than spending all effort in increasing code quality.</p>
<h2 id="Optimising-GIFs-for-the-Web"><a href="#Optimising-GIFs-for-the-Web" class="headerlink" title="Optimising GIFs for the Web"></a><a href="https://bitsofco.de/optimising-gifs/" target="_blank" rel="external">Optimising GIFs for the Web</a></h2><p>Gif can have larger file size the HTML5 video</p>
<h2 id="The-Partnership-Fallacy"><a href="#The-Partnership-Fallacy" class="headerlink" title="The Partnership Fallacy"></a><a href="http://www.barnetttalks.com/2017/04/the-partnership-fallacy.html?utm_source=wanqu.co&amp;utm_campaign=Wanqu+Daily&amp;utm_medium=rss" target="_blank" rel="external">The Partnership Fallacy</a></h2><p>We partner up hoping to improve our weaknesses, only to divide labor and so make our weaknesses even worse.</p>
<p>Effective leaders understand how organizations learn, so they avoid the partnership fallacy.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Google’s-real-Kubernetes-magic-is-all-about-community-not-code&quot;&gt;&lt;a href=&quot;#Google’s-real-Kubernetes-magic-is-all-about-community-not-
    
    </summary>
    
      <category term="Insight" scheme="http://199911.github.io/categories/Insight/"/>
    
    
  </entry>
  
  <entry>
    <title>簡評十五</title>
    <link href="http://199911.github.io/insight/2017/04/16/commentaries-15/"/>
    <id>http://199911.github.io/insight/2017/04/16/commentaries-15/</id>
    <published>2017-04-15T16:00:00.000Z</published>
    <updated>2017-05-06T09:39:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Regular-Expressions-in-a-post-ES6-world"><a href="#Regular-Expressions-in-a-post-ES6-world" class="headerlink" title="Regular Expressions in a post-ES6 world"></a><a href="https://ponyfoo.com/articles/regular-expressions-post-es6" target="_blank" rel="external">Regular Expressions in a post-ES6 world</a></h2><ul>
<li>Sticky group<ul>
<li>I don’t use regex a lot, don’t know how much can this feature helps</li>
</ul>
</li>
<li>Better support of Unicode</li>
<li>Regex match group with key<ul>
<li>Easier to read the regex</li>
</ul>
</li>
<li>Lookbehind assertion<ul>
<li>I don’t even know what is lookahead assertion.</li>
</ul>
</li>
</ul>
<h2 id="Scalable-Design-Beyond-Responsive-Design"><a href="#Scalable-Design-Beyond-Responsive-Design" class="headerlink" title="Scalable Design: Beyond Responsive Design"></a><a href="https://medium.com/@julienetienne_/beyond-responsive-design-f51ee2a9bfd" target="_blank" rel="external">Scalable Design: Beyond Responsive Design</a></h2><p><code>vh</code> and <code>vw</code> units make zoom function fail (as the view port does not change)<br>The article introduce a library to solve responsive font problem: <a href="https://github.com/julienetie/mimetic" target="_blank" rel="external">https://github.com/julienetie/mimetic</a><br>Seems the requirement is to use <code>rem</code> for fonts.</p>
<a id="more"></a>
<h2 id="Runtime-Coverage-using-Chrome-DevTools"><a href="#Runtime-Coverage-using-Chrome-DevTools" class="headerlink" title="Runtime Coverage using Chrome DevTools"></a><a href="https://gideonpyzer.com/blog/runtime-coverage-using-chrome-devtools/" target="_blank" rel="external">Runtime Coverage using Chrome DevTools</a></h2><p>Can use code coverage as a indicator for network optimization. If the percentage of unused bytes in the code is high, it suggests that the end user is having to download a lot more than is necessary to run the app.</p>
<h2 id="11-Ways-to-Invoke-a-Function"><a href="#11-Ways-to-Invoke-a-Function" class="headerlink" title="11 Ways to Invoke a Function"></a><a href="https://gist.github.com/myshov/05800f083a0afce56e0f782314a103eb" target="_blank" rel="external">11 Ways to Invoke a Function</a></h2><ul>
<li>What is <code>Reflect</code>?<ul>
<li><a href="https://www.keithcirkel.co.uk/metaprogramming-in-es6-part-2-reflect/" target="_blank" rel="external">https://www.keithcirkel.co.uk/metaprogramming-in-es6-part-2-reflect/</a></li>
<li>A collection of js internal method.</li>
<li>Easy to extend</li>
<li>Better backward compatibility</li>
</ul>
</li>
<li>What is <code>require(&#39;vm&#39;).Script</code><ul>
<li>Node.js lib</li>
</ul>
</li>
</ul>
<h2 id="以Game載道"><a href="#以Game載道" class="headerlink" title="以Game載道"></a>以Game載道</h2><p>無意中係圖書館見到E本書，於是就借左黎睇。入邊最深刻就係遊戲係sell緊content同experience，同報紙雜誌一樣係一個媒體。甚至可以做到教化作用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Regular-Expressions-in-a-post-ES6-world&quot;&gt;&lt;a href=&quot;#Regular-Expressions-in-a-post-ES6-world&quot; class=&quot;headerlink&quot; title=&quot;Regular Expressions in a post-ES6 world&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://ponyfoo.com/articles/regular-expressions-post-es6&quot;&gt;Regular Expressions in a post-ES6 world&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Sticky group&lt;ul&gt;
&lt;li&gt;I don’t use regex a lot, don’t know how much can this feature helps&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Better support of Unicode&lt;/li&gt;
&lt;li&gt;Regex match group with key&lt;ul&gt;
&lt;li&gt;Easier to read the regex&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Lookbehind assertion&lt;ul&gt;
&lt;li&gt;I don’t even know what is lookahead assertion.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Scalable-Design-Beyond-Responsive-Design&quot;&gt;&lt;a href=&quot;#Scalable-Design-Beyond-Responsive-Design&quot; class=&quot;headerlink&quot; title=&quot;Scalable Design: Beyond Responsive Design&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://medium.com/@julienetienne_/beyond-responsive-design-f51ee2a9bfd&quot;&gt;Scalable Design: Beyond Responsive Design&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;vh&lt;/code&gt; and &lt;code&gt;vw&lt;/code&gt; units make zoom function fail (as the view port does not change)&lt;br&gt;The article introduce a library to solve responsive font problem: &lt;a href=&quot;https://github.com/julienetie/mimetic&quot;&gt;https://github.com/julienetie/mimetic&lt;/a&gt;&lt;br&gt;Seems the requirement is to use &lt;code&gt;rem&lt;/code&gt; for fonts.&lt;/p&gt;
    
    </summary>
    
      <category term="Insight" scheme="http://199911.github.io/categories/Insight/"/>
    
    
  </entry>
  
  <entry>
    <title>簡評十四</title>
    <link href="http://199911.github.io/insight/2017/03/26/commentaries-14/"/>
    <id>http://199911.github.io/insight/2017/03/26/commentaries-14/</id>
    <published>2017-03-25T16:00:00.000Z</published>
    <updated>2017-05-06T09:39:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CSS-Custom-Properties-The-Basics"><a href="#CSS-Custom-Properties-The-Basics" class="headerlink" title="CSS Custom Properties - The Basics"></a><a href="https://sgom.es/posts/2017-01-27-css-custom-properties-the-basics/" target="_blank" rel="external">CSS Custom Properties - The Basics</a></h2><p>CSS Custom value is variable in CSS. Use CSS selector to define scope. <code>:root</code> means global.<br>Can use with <code>calc()</code><br>Note: it is not support by most popular version of browsers.<br>Can use with JS: <code>styles.getPropertyValue(property)</code> and <code>styles.setProperty()</code></p>
<h2 id="Window-Window-Measuring-Screen-Sizes-with-JavaScript"><a href="#Window-Window-Measuring-Screen-Sizes-with-JavaScript" class="headerlink" title="Window, Window: Measuring Screen Sizes with JavaScript"></a><a href="http://thenewcode.com/1181/Window-Window-Measuring-Screen-Sizes-with-JavaScript" target="_blank" rel="external">Window, Window: Measuring Screen Sizes with JavaScript</a></h2><ul>
<li>The viewport is the display area of the browser<ul>
<li>It does not include the URL bar and browser UI.</li>
</ul>
</li>
<li><code>document.documentElement.clientWidth</code> not included scroll bar, but <code>window.innerWidth</code> include.<ul>
<li>So is height</li>
<li>Better to take max of these two value.</li>
</ul>
</li>
<li>The screen is the current display the browser is in<ul>
<li>note that many devices can have more than one screen.</li>
</ul>
</li>
<li>Need to recalculate screen size when <code>resize</code> and <code>orientationchange</code> fired</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;CSS-Custom-Properties-The-Basics&quot;&gt;&lt;a href=&quot;#CSS-Custom-Properties-The-Basics&quot; class=&quot;headerlink&quot; title=&quot;CSS Custom Properties - The 
    
    </summary>
    
      <category term="Insight" scheme="http://199911.github.io/categories/Insight/"/>
    
    
  </entry>
  
  <entry>
    <title>&quot;Professional: JavaScript for Web Developers, Third Edition&quot; part 2</title>
    <link href="http://199911.github.io/review/2017/03/18/professional-javascript-for-web-developers-3rd-edition-2/"/>
    <id>http://199911.github.io/review/2017/03/18/professional-javascript-for-web-developers-3rd-edition-2/</id>
    <published>2017-03-17T16:00:00.000Z</published>
    <updated>2017-03-18T07:57:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>In chapter 6, the book demonstrate how to control JavaScript object’s property with its internal value. I think immuntable.js may make sure this techniques in implementation.<br>In chapter 7, is show some interest property in function object, but it is not accessible in strict mode, it is not very useful.<br>In chapter 9, this book explain how user agent evolve, and meaning of each component. It is quite interesting.</p>
<a id="more"></a>
<h1 id="Chapter-6-Object-Oriented-Programming"><a href="#Chapter-6-Object-Oriented-Programming" class="headerlink" title="Chapter 6: Object-Oriented Programming"></a>Chapter 6: Object-Oriented Programming</h1><h2 id="Internal-values-of-property-of-objects"><a href="#Internal-values-of-property-of-objects" class="headerlink" title="Internal values of property of objects"></a>Internal values of property of objects</h2><p><code>Object.defineProperty()</code> and <code>Object.defineProperties()</code> can change the internal value</p>
<ul>
<li>data attribute<ul>
<li>configurable</li>
<li>enumerable</li>
<li>writable</li>
<li>value</li>
</ul>
</li>
<li>accessor attribute<ul>
<li>configurable</li>
<li>enumerable</li>
<li>get</li>
<li>set</li>
</ul>
</li>
</ul>
<h2 id="Other-Information"><a href="#Other-Information" class="headerlink" title="Other Information"></a>Other Information</h2><ul>
<li><code>instanceof</code> check prototype chain</li>
<li>constructor will create a new context, changing the <code>this</code> value</li>
</ul>
<h2 id="Class-Inheritance"><a href="#Class-Inheritance" class="headerlink" title="Class Inheritance"></a>Class Inheritance</h2><p>The books spent lots of time to talk about implementation of class inheritance in JavaScript. I skipped it as ES6 have support <code>class</code>. What is the es5 equivalent of es6 class may be an interesting question.</p>
<ul>
<li>Prototype share all functions<ul>
<li>But access time is long</li>
</ul>
</li>
<li>In ECMAScript spec, prototype is internal object, but many browsers implement <code>__proto__</code><ul>
<li>Standard way to get prototype is <code>getPrototypeOf</code></li>
</ul>
</li>
<li><code>in</code> operator<ul>
<li><code>(name in object)</code> return true if the object have an index <code>name</code><ul>
<li>no matter it is a instance property or prototype property</li>
</ul>
</li>
</ul>
</li>
<li>All native object use prototype</li>
<li>Prototype and constructor can be different</li>
<li>Drawback of prototype, can change inheritance during execution</li>
<li>Although possible, it is not recommended to modify native object prototypes in a production environment.</li>
<li>Share data value (especially array and object) in prototype can cause tricky bugs<ul>
<li>One solution is use constructor for data property, prototype for function property<ul>
<li>I think we should stick to es6 class if possible, it is over-complicated to implement class in es5</li>
</ul>
</li>
</ul>
</li>
<li><code>return</code> statement in constructor can override the value return by constructor by default</li>
</ul>
<h1 id="Chapter-7-Function-Expressions"><a href="#Chapter-7-Function-Expressions" class="headerlink" title="Chapter 7: Function Expressions"></a>Chapter 7: Function Expressions</h1><ul>
<li>Recursion<ul>
<li>callee vs function f() and f = function()<ul>
<li>callee is not available in strict mode</li>
<li>anonymous function fail if the function varaible changed<ul>
<li>as the recursion coerced to the variable</li>
</ul>
</li>
<li>Use named function in recursion</li>
</ul>
</li>
</ul>
</li>
<li>Anonymous function != closure<ul>
<li>Closures are functions that have access to variables from another function’s scope.</li>
</ul>
</li>
<li>Closures carry with them the containing function’s scope<ul>
<li>They take up more memory than other functions.</li>
<li>It’s recommended you use them only when absolutely necessary.</li>
<li>Beware which context do <code>this</code> refer to</li>
</ul>
</li>
<li>Can use closure to mimic block scope<ul>
<li><code>let</code> keyword in es6 create variable in block scope</li>
</ul>
</li>
</ul>
<h1 id="Chapter-8-The-Browser-Object-Model"><a href="#Chapter-8-The-Browser-Object-Model" class="headerlink" title="Chapter 8: The Browser Object Model"></a>Chapter 8: The Browser Object Model</h1><h2 id="window-and-frame"><a href="#window-and-frame" class="headerlink" title="window and frame"></a>window and frame</h2><ul>
<li><code>window</code> in BOM is global in ECMAScript</li>
<li>All frames have its own <code>window</code><ul>
<li>It means there are multiple global object, one object for one frame</li>
</ul>
</li>
<li><code>window.frames</code> store all <code>window</code> object for frames in this frame</li>
<li><code>window</code> is current frame</li>
<li>The <code>window.top</code> object always points to the very top (outermost) frame, which is the browser window itself.</li>
<li>Root’s <code>window.parent</code> is itself</li>
<li><code>screenLeft</code> and <code>screenTop</code> give frame position information</li>
<li><p><code>window.self</code> = <code>window</code></p>
</li>
<li><p>Cross browser window position detection</p>
<ul>
<li>Check both screenLeft and screenX</li>
<li>Is it standardized now?</li>
</ul>
</li>
<li>Window size<ul>
<li><code>window.innerWidth</code> and <code>document.body.clientWidth</code></li>
<li>Is it standardized now?</li>
</ul>
</li>
</ul>
<h2 id="Pop-up-window"><a href="#Pop-up-window" class="headerlink" title="Pop up window"></a>Pop up window</h2><ul>
<li><code>window.open()</code> can change the content of iframe.</li>
<li>special windows’ name <code>_self</code>, <code>_parent</code>, <code>_top</code>, or <code>_blank</code>.</li>
<li>Also have lots of setting to control pop up window</li>
<li><code>open()</code> return <code>null</code> if it is blocked by build-in pop up blocker</li>
</ul>
<h2 id="Set-time-out"><a href="#Set-time-out" class="headerlink" title="Set time out"></a>Set time out</h2><ul>
<li>Can accept string input instead of function<ul>
<li>but it is not recommended, because there are performance penalty</li>
</ul>
</li>
<li><code>this</code> in timeout callback refer to <code>window</code><ul>
<li>if <code>bind()</code> is not called</li>
</ul>
</li>
</ul>
<h2 id="Location-object"><a href="#Location-object" class="headerlink" title="Location object"></a>Location object</h2><ul>
<li><code>assign()</code> process the new url and add to history<ul>
<li>equivalent assign url to <code>window.location</code> and <code>location.href</code></li>
</ul>
</li>
<li>If you don’t want to update history, use <code>replace()</code></li>
<li><code>reload()</code> may load the page from browser cache<ul>
<li>use <code>reload(true)</code> to force browser to get a new page</li>
</ul>
</li>
</ul>
<h2 id="Navigator-object"><a href="#Navigator-object" class="headerlink" title="Navigator object"></a>Navigator object</h2><ul>
<li>usually for client detection</li>
<li><code>appcodename</code> always return <code>mozilla</code></li>
<li>Can detect plugin like flash shockwave</li>
<li><code>registerContentHandler()</code> and <code>registerProtocolHandler()</code><ul>
<li>Don’t know what is it</li>
</ul>
</li>
</ul>
<h2 id="screen-object"><a href="#screen-object" class="headerlink" title="screen object"></a><code>screen</code> object</h2><p>Is it standard? From MDN, seems in working draft</p>
<h2 id="history-object"><a href="#history-object" class="headerlink" title="history object"></a><code>history</code> object</h2><p>It will refresh page, how web app work?</p>
<ul>
<li><code>go()</code><ul>
<li>integer / url string</li>
</ul>
</li>
<li><code>back()</code></li>
<li><code>forward()</code></li>
</ul>
<h1 id="Chapter-9-Client-Detection"><a href="#Chapter-9-Client-Detection" class="headerlink" title="Chapter 9: Client Detection"></a>Chapter 9: Client Detection</h1><ul>
<li>Capability detection<ul>
<li>Use JavaScripts to check<ul>
<li>Make sure method exist and make sure the method is a function.</li>
<li>But IE 8 have buggy <code>typeof</code>, sometimes return object instead of function</li>
<li>We can use double NOT operator to produce a Boolean result<ul>
<li>Which is more optimal to store and access</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Quirks Detection<ul>
<li>Detect browser bugs</li>
</ul>
</li>
<li>User-Agent Detection<ul>
<li>Identifying the rendering engine<ul>
<li>The exact name and version of a browser isn’t as important as the rendering engine being used.</li>
</ul>
</li>
<li>Detect platform is also useful<ul>
<li>Notice that game systems have web browser now</li>
</ul>
</li>
</ul>
</li>
<li>Capability detection &gt; Quirks Detection &gt; User-Agent Detection</li>
</ul>
<h1 id="Chapter-10-The-Document-Object-Model"><a href="#Chapter-10-The-Document-Object-Model" class="headerlink" title="Chapter 10: The Document Object Model"></a>Chapter 10: The Document Object Model</h1><ul>
<li>12 types of node, all of which inherit from a base type.<ul>
<li>Node.ELEMENT_NODE (1)</li>
<li>Node.ATTRIBUTE_NODE (2)</li>
<li>Node.TEXT_NODE (3)</li>
<li>Node.CDATA_SECTION_NODE (4)</li>
<li>Node.ENTITY_REFERENCE_NODE (5)</li>
<li>Node.ENTITY_NODE (6)</li>
<li>Node.PROCESSING_INSTRUCTION_NODE (7)</li>
<li>Node.COMMENT_NODE (8)</li>
<li>Node.DOCUMENT_NODE (9)</li>
<li>Node.DOCUMENT_TYPE_NODE (10)</li>
<li>Node.DOCUMENT_FRAGMENT_NODE (11)</li>
<li>Node.NOTATION_NODE (12)</li>
<li>Not all types are supported</li>
</ul>
</li>
</ul>
<h2 id="node-interface"><a href="#node-interface" class="headerlink" title="node interface"></a><code>node</code> interface</h2><ul>
<li>Basic properties<ul>
<li>nodeName is tag name</li>
<li>nodeValue is null (if element)</li>
</ul>
</li>
<li>Node relationship<ul>
<li>childNodes contain NodeList<ul>
<li>NodeList is an array like object, but not instance of Array)</li>
</ul>
</li>
<li>Node list is living, any change reflect directly</li>
<li>Related properties<ul>
<li><code>parentNode</code></li>
<li><code>previousSibling</code></li>
<li><code>nextSibling</code></li>
<li><code>firstChild</code></li>
<li><code>lastChild</code></li>
<li><code>hasChildNodes()</code></li>
</ul>
</li>
<li>One final relationship is shared by every node.<ul>
<li>The <code>ownerDocument</code> property is a pointer to the document node that represents the entire document.</li>
</ul>
</li>
</ul>
</li>
<li>Manipulating Nodes<ul>
<li>DOM node exist at most one location in a document</li>
<li><code>appendChild()</code>, which adds a node to the end of the childNodes list<ul>
<li>It does not create new node, it move node.</li>
</ul>
</li>
<li><code>insertBefore()</code></li>
<li><code>replaceChild()</code></li>
<li><code>removeChild()</code></li>
<li><code>cloneNode()</code><ul>
<li>It only copy attributes and, optionally, child nodes.</li>
<li>Event handlers are not cloned</li>
</ul>
</li>
<li><code>normalize()</code><ul>
<li>Merge text node and remove empty text node</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Document-node"><a href="#Document-node" class="headerlink" title="Document node"></a>Document node</h2><ul>
<li>Can be accessed by <code>window.document</code></li>
<li><code>nodeType</code> is 9.</li>
<li><code>nodeName</code> is “#document”.</li>
<li><code>parentNode</code> is null.</li>
<li><code>ownerDocument</code> is null.</li>
<li><code>document.documentElement</code>, which always points to the <html> element in an HTML page.</html></li>
<li><code>document.body</code></li>
<li><code>document.doctype</code><ul>
<li>Inconsistent browser support</li>
</ul>
</li>
<li>Useful properties<ul>
<li><code>title</code>, <code>URL</code>, <code>domain</code>, and <code>referrer</code></li>
<li>The ability to set document.domain is useful when there is a frame or iframe on the page from a different subdomain.<ul>
<li>Pages from different subdomains can’t communicate with one another via JavaScript because of cross-domain security restrictions.<ul>
<li>By setting document.domain in each page to the same value, the pages can access JavaScript objects from each other.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><code>document.getElementById()</code></li>
<li><code>document.getElementsByTagName()</code><ul>
<li>Tag names are case insensitive for html, but sensitive for xml and xhtml</li>
</ul>
</li>
<li>Special collections<ul>
<li><code>document.anchors</code></li>
<li><code>document.applets</code></li>
<li><code>document.forms</code></li>
<li><code>document.images</code></li>
<li><code>document.links</code></li>
</ul>
</li>
<li>DOM Conformance Detection<ul>
<li><code>document.implementation.hasFeature()</code><ul>
<li>Browser vendor may not implement the feature correctly</li>
<li>This is not very reliable</li>
</ul>
</li>
</ul>
</li>
<li><code>document.write()</code><ul>
<li>Write content to document directly</li>
</ul>
</li>
</ul>
<h2 id="Inline-script-injection"><a href="#Inline-script-injection" class="headerlink" title="Inline script injection"></a>Inline script injection</h2><p>Beware cannot have string contains <code>&#39;&lt;/script&gt;&#39;</code>, it will be parsed as close tag of javascript. We need to escape <code>/</code>, like <code>&#39;&lt;\/script&gt;&#39;</code></p>
<p>Document writing is not supported in strict XHTML documents. For pages that are served with the application/xml+xhtml content type, these methods will not work.</p>
<h2 id="Element-node"><a href="#Element-node" class="headerlink" title="Element node"></a>Element node</h2><ul>
<li><code>nodeType</code> is 1.</li>
<li><code>nodeName</code> is the element’s tag name.</li>
<li><code>nodeValue</code> is null.</li>
<li><code>parentNode</code> may be a Document or Element.</li>
<li><code>nodeName</code> is always in uppercase</li>
<li>Standard attributes<ul>
<li><code>id</code>, <code>title</code>, <code>lang</code>, <code>dir</code>, <code>className</code><ul>
<li><code>dir</code> is the direction of language, can be <code>ltr</code> or <code>rtl</code></li>
<li><code>className</code> is <code>class</code> attributes in HTML<ul>
<li><code>class</code> is not used in JavaScript because it is reserved word</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>There are lots of subtype for element node, each represent a HTML tag</li>
<li><code>style</code> object is not living (change not directly reflect)</li>
<li><code>element.attributes</code> is living</li>
<li><code>NameNodeMap</code> type<ul>
<li><code>getNamedItem(name)</code> — Returns the node whose <code>nodeName</code> property is equal to <code>name</code>.</li>
<li><code>removeNamedItem(</code>name<code>)</code> — Removes the node whose <code>nodeName</code> property is equal to name from the list.</li>
<li><code>setNamedItem(node)</code> — Adds the <code>node</code> to the list, indexing it by its <code>nodeName</code> property.</li>
<li><code>item(pos)</code> — Returns the node in the numerical position <code>pos</code>.</li>
</ul>
</li>
</ul>
<h2 id="Text-node"><a href="#Text-node" class="headerlink" title="Text node"></a>Text node</h2><ul>
<li><code>nodeType</code> is 3.</li>
<li><code>nodeName</code> is “#text”.</li>
<li><code>nodeValue</code> is text contained in the node.</li>
<li>Child nodes are not supported.<ul>
<li><code>appendData(text)</code> — Appends text to the end of the node.</li>
<li><code>deleteData(offset, count)</code> — Deletes count number of characters starting at position offset.</li>
<li><code>insertData(offset, text)</code> — Inserts text at position offset.</li>
<li><code>replaceData(offset, count, text)</code> — Replaces the text starting at offset through offset + count with text.</li>
<li><code>splitText(offset)</code> — Splits the text node into two text nodes separated at position offset.</li>
<li><code>substringData(offset, count)</code> — Extracts a string from the text beginning at position offset and continuing until offset + count.</li>
</ul>
</li>
<li>length property return the length of text</li>
<li>The special characters add to text node by method is automatically escaped</li>
<li><code>parentNode.normalize()</code> merge the adjacent children or remove empty text node</li>
</ul>
<h2 id="Comment-node"><a href="#Comment-node" class="headerlink" title="Comment node"></a>Comment node</h2><ul>
<li><code>nodeType</code> is 8.</li>
<li><code>nodeName</code> is “#comment”.</li>
<li><code>nodeValue</code> is the content of the comment.</li>
<li><code>parentNode</code> is a Document or Element.</li>
<li>Child nodes are not supported.</li>
<li>Inherit from text node, having the methods.</li>
<li>can access text by <code>node.data</code></li>
<li>Browsers don’t recognize comments that exist after the closing  tag.</li>
</ul>
<h2 id="CDATASection"><a href="#CDATASection" class="headerlink" title="CDATASection"></a>CDATASection</h2><p>CDATA sections are specific to XML-based documents</p>
<ul>
<li><code>nodeType</code> is 4.</li>
<li><code>nodeName</code> is “#cdata-section”.</li>
<li><code>nodeValue</code> is the contents of the CDATA section.</li>
<li><code>parentNode</code> is a Document or Element.</li>
<li>Child nodes are not supported.</li>
<li>Also inherit form text node</li>
<li>CDATA sections are valid only in XML documents<ul>
<li>So most browsers will incorrectly parse a CDATA section into either a Comment or an Element.</li>
</ul>
</li>
</ul>
<h2 id="DocumentType"><a href="#DocumentType" class="headerlink" title="DocumentType"></a>DocumentType</h2><ul>
<li><code>nodeType</code> is 10.</li>
<li><code>nodeName</code> is the name of the doctype.</li>
<li><code>nodeValue</code> is null.</li>
<li><code>parentNode</code> is a Document.</li>
<li>Child nodes are not supported.</li>
<li>Cannot be create by code in DOM level 1<ul>
<li>Only the <code>name</code> property is useful in html and xhtml, <code>entities</code> and <code>notations</code> are empty</li>
</ul>
</li>
</ul>
<h2 id="The-DocumentFragment-Type"><a href="#The-DocumentFragment-Type" class="headerlink" title="The DocumentFragment Type"></a>The DocumentFragment Type</h2><ul>
<li><code>nodeType</code> is 11.</li>
<li><code>nodeName</code> is “#document-fragment”.</li>
<li><code>nodeValue</code> is null.</li>
<li><code>parentNode</code> is null.</li>
<li>No representation in markup</li>
<li>Cannot be add to document directly</li>
<li>For render performance<ul>
<li>Can create a document fragment with multiple element to prevent live update of each insertion<ul>
<li>In another word, we can achieve batch update with doucment fragment</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Attr-type"><a href="#Attr-type" class="headerlink" title="Attr type"></a>Attr type</h2><ul>
<li><code>nodeType</code> is 11.</li>
<li><code>nodeName</code> is the attribute name.</li>
<li><code>nodeValue</code> is the attribute value.</li>
<li><code>parentNode</code> is null.</li>
<li>Child nodes are not supported in HTML.<ul>
<li>Child nodes may be Text or EntityReference in XML.</li>
</ul>
</li>
<li>Exist in an element’s attributes property.<ul>
<li>But not considered part of the DOM document tree</li>
<li>There are three properties on an Attr object:<ul>
<li><code>name</code>, which is the attribute name (same as nodeName)</li>
<li><code>value</code>, which is the attribute value (same as nodeValue)</li>
<li><code>specified</code> always return <code>true</code></li>
</ul>
</li>
</ul>
</li>
<li>From <a href="https://developer.mozilla.org/en-US/docs/Web/API/Attr" target="_blank" rel="external">MDN</a>, attribute node no longer inherit from node in DOM 4<br>-The <code>getAttribute()</code>, <code>setAttribute()</code>, and <code>removeAttribute()</code> methods are preferable over manipulating attribute nodes.<ul>
<li>Custom properties does not show up in object, need to use <code>getAttribute()</code></li>
<li>Attribute names get normalized to lowercase when set using <code>setAttribute()</code></li>
</ul>
</li>
</ul>
<h2 id="Manipulating-Tables"><a href="#Manipulating-Tables" class="headerlink" title="Manipulating Tables"></a>Manipulating Tables</h2><p>There are methods to make create table element easier</p>
<h2 id="Element-Traversal"><a href="#Element-Traversal" class="headerlink" title="Element Traversal"></a>Element Traversal</h2><p>There are new properties and methods to help us access sibling, children elements and number of children elements (not include comment and text node)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In chapter 6, the book demonstrate how to control JavaScript object’s property with its internal value. I think immuntable.js may make sure this techniques in implementation.&lt;br&gt;In chapter 7, is show some interest property in function object, but it is not accessible in strict mode, it is not very useful.&lt;br&gt;In chapter 9, this book explain how user agent evolve, and meaning of each component. It is quite interesting.&lt;/p&gt;
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
  <entry>
    <title>&quot;Professional: JavaScript for Web Developers, Third Edition&quot; part 1</title>
    <link href="http://199911.github.io/review/2017/03/14/professional-javascript-for-web-developers-3rd-edition-1/"/>
    <id>http://199911.github.io/review/2017/03/14/professional-javascript-for-web-developers-3rd-edition-1/</id>
    <published>2017-03-13T16:00:00.000Z</published>
    <updated>2017-03-13T23:44:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>This books is published on 2012, some information is outdated. But it is still a good start to get deeper understand on javascript, not only the language itself, also the implementation in different browsers. The book spent certain pages to explain the workaround in IE, we can just skip them. This book skips some JavaScript specification which does not implemented by any browser (at that time). We may need to get up-to-date information from other place</p>
<a id="more"></a>
<h1 id="Chapter-1-What-is-JavaScript"><a href="#Chapter-1-What-is-JavaScript" class="headerlink" title="Chapter 1: What is JavaScript?"></a>Chapter 1: What is JavaScript?</h1><ul>
<li>ECMAScript != JavaScript<ul>
<li>ECMAScript is part of JavaScript</li>
<li>JavaScript include<ul>
<li>The Core (ECMAScript)</li>
<li>The Document Object Model</li>
<li>The Browser Object Model</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="The-Document-Object-Model"><a href="#The-Document-Object-Model" class="headerlink" title="The Document Object Model"></a>The Document Object Model</h2><ul>
<li>DOM provides methods and interfaces for working with the content of a web page</li>
<li>Allow programmer change the page appearance without reload the page</li>
<li>DOM is also implement in other language</li>
<li>DOM levels<ul>
<li>Level 1<ul>
<li>DOM core: map xml based document to data structure which is easy to access<ul>
<li>Should be DOM tree, but I don’t know does it provide extra feature</li>
</ul>
</li>
<li>DOM HTML: extended DOM core by adding HTML-specific objects and method</li>
</ul>
</li>
<li>Level 2<ul>
<li>DOM View</li>
<li>DOM Events</li>
<li>DOM style</li>
<li>DOM Traversal and Range</li>
</ul>
</li>
<li>Level 3<ul>
<li>DOM Load and Save</li>
<li>DOM Validation</li>
<li>Extended DOM core to support all XML 1.0</li>
</ul>
</li>
</ul>
</li>
<li>Other DOMs<ul>
<li>SVG</li>
<li>MathML</li>
<li>Synchronized Multimedia Integration Language (SMIL)</li>
</ul>
</li>
</ul>
<h2 id="The-Browser-Object-Model-BOM"><a href="#The-Browser-Object-Model-BOM" class="headerlink" title="The Browser Object Model (BOM)"></a>The Browser Object Model (BOM)</h2><ul>
<li>BOM provides methods and interfaces for interacting with the browser<ul>
<li>pop up new windows</li>
<li>move, resize and close browser windows</li>
<li><code>navigator</code> object</li>
<li><code>location</code> object</li>
</ul>
</li>
<li>It is not standardize for a long time, until HTML5</li>
</ul>
<h1 id="Chapter-2-JavaScript-in-HTML"><a href="#Chapter-2-JavaScript-in-HTML" class="headerlink" title="Chapter 2: JavaScript in HTML"></a>Chapter 2: JavaScript in HTML</h1><ul>
<li>Traditionally, we put JavaScript on header<ul>
<li>It is download and parsed before content (blocking)</li>
<li>Use <code>async</code> and <code>defer</code> attributes in <code>&lt;script&gt;</code></li>
</ul>
</li>
<li>Or put it at the end of body, so the html content is parsed first</li>
</ul>
<h2 id="Defer"><a href="#Defer" class="headerlink" title="Defer"></a>Defer</h2><ul>
<li>The purpose of defer is to indicate that a script won’t be changing the structure of the page as it executes.<ul>
<li>Even the HTML5 specific defer script will run in order, but this may not happen in real world.</li>
<li>So keep at most one defer script</li>
</ul>
</li>
<li>Script can be loaded before DOMContentLoaded</li>
</ul>
<h2 id="Async"><a href="#Async" class="headerlink" title="Async"></a>Async</h2><ul>
<li>async, run immediately after download, can run before or after DOMContentloaded, but guaranteed before loaded</li>
</ul>
<h2 id="Inline-script-in-XHTML"><a href="#Inline-script-in-XHTML" class="headerlink" title="Inline script in XHTML"></a>Inline script in XHTML</h2><ul>
<li>Less than sign make in script tag make XHTML broken, as it is consider as an open tag<ul>
<li>Use &lt;</li>
<li>Use CDATA section</li>
</ul>
</li>
</ul>
<h2 id="External-script-is-better"><a href="#External-script-is-better" class="headerlink" title="External script is better"></a>External script is better</h2><ul>
<li>Maintainable</li>
<li>Caching</li>
<li>Future-proof<ul>
<li>Don’t need to use the hack for XHTML</li>
<li>Same script work in both HTML and XTHML</li>
</ul>
</li>
</ul>
<h1 id="Chapter-3-Language-Basics"><a href="#Chapter-3-Language-Basics" class="headerlink" title="Chapter 3: Language Basics"></a>Chapter 3: Language Basics</h1><ul>
<li>variable not declared by <code>var</code> will be global</li>
<li><code>typeof</code> null return <code>object</code></li>
<li><code>typeof</code> regex is object (chrome 7 have a bug, which return function)</li>
<li>variable not declared !== undefined variable<ul>
<li>using variables not declared throw error (reference error)</li>
</ul>
</li>
<li><code>typeof</code> variables not declared return undefined</li>
</ul>
<h2 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h2><ul>
<li>octal number start with 0</li>
<li>octal number is invalid in strict mode</li>
<li>octal number can be tricky: 078-077 = 15</li>
<li>number large than max value or small than smallest value will become (negative) infinity</li>
<li><code>typeof</code> NaN is number</li>
<li>NaN will make the computation return NaN</li>
<li>NaN not equal to any value<ul>
<li>so we have to use isNaN()</li>
</ul>
</li>
</ul>
<h2 id="Number-vs-Parser-Int"><a href="#Number-vs-Parser-Int" class="headerlink" title="Number vs Parser Int"></a>Number vs Parser Int</h2><ul>
<li>be careful when parsing number with leading 0<ul>
<li>number start with 0 will be consider as octal number</li>
<li>always include 10 in second parameter</li>
</ul>
</li>
</ul>
<h2 id="Built-in-object-method"><a href="#Built-in-object-method" class="headerlink" title="Built in object method"></a>Built in object method</h2><ul>
<li><code>null</code> and <code>undefined</code> don’t have toString()</li>
<li><code>String()</code> alway return string, it is good when you don’t know the value whether null or undefined</li>
<li>Can also convert to string by concatenating empty string<ul>
<li>I think it is more straight forward.</li>
</ul>
</li>
<li><code>hasOwnProperty(&#39;propertyName&#39;)</code> checks the property exist (do not check prototype)</li>
<li><code>propertyIsEnumerable(&#39;propertyName&#39;)</code>, whether can use for-in</li>
<li><code>toLocateString()</code> return localization string</li>
<li><code>valueOf()</code>, <code>toString()</code> will be called if apply operator on object</li>
</ul>
<p><strong>Notice that BOM and DOM is not included in ES standard, they may or may not follow the ES object standard</strong></p>
<h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><ul>
<li>bitwise operator<ul>
<li>value converted to number by Number() (32 bit numbers)</li>
</ul>
</li>
<li><code>arguments</code> is an array-like object, but it is not array</li>
<li>string is not object in JavaScript, unlike other language</li>
<li>ECMA-262 specifies that any object implementing the internal [[Call]] method should return “function” from typeof<ul>
<li>user defined <code>call()</code> seems does not works</li>
</ul>
</li>
</ul>
<h1 id="Chapter-4-Variables-Scope-and-Memory"><a href="#Chapter-4-Variables-Scope-and-Memory" class="headerlink" title="Chapter 4: Variables, Scope, and Memory"></a>Chapter 4: Variables, Scope, and Memory</h1><ul>
<li>In browser, global context = windows</li>
<li>5 types of scope in browser<ul>
<li>global, function, eval(), catch block, with block</li>
</ul>
</li>
<li>browser optimized variable look up, don’t worry about access variable from different scope</li>
<li>Circular reference no longer leak memory, in browser</li>
<li>Garbage collect can be trigger by code in some browser, but it is not recommended</li>
<li>Release memory by dereference them (set variable to null)</li>
</ul>
<h1 id="Chapter-5-Reference-Types"><a href="#Chapter-5-Reference-Types" class="headerlink" title="Chapter 5 Reference Types"></a>Chapter 5 Reference Types</h1><ul>
<li>Function interface<ul>
<li>The best approach is to use named arguments for those that are required arguments</li>
<li>And an object literal to encompass multiple optional arguments.</li>
</ul>
</li>
<li>Use <code>{}</code> and <code>[]</code> create object and array, the <code>Object()</code> and <code>Array()</code> constructor is not called</li>
<li>Arrays can contain a maximum of 4,294,967,295 items.<ul>
<li>If you try to add more than that number, an exception occurs.</li>
<li>A long-running script error may be thrown before you reach the arrays’ maximum.</li>
</ul>
</li>
<li><code>instanceof</code> assumes a single global execution context.<ul>
<li>Different frames in a web page haves distinct global execution contexts and therefore two versions of the Array constructor.</li>
<li>If you were to pass an array from one frame into a second frame, that array has a different constructor function than an array created natively in the second frame.</li>
<li>To solve this problem, ECMAScript 5 introduced the Array.isArray() method</li>
</ul>
</li>
<li><code>toString()</code> of date object of different browser return stings with different format</li>
<li>use string to define regex, need to escape the slash as it is escape character in string (not regex)<ul>
<li><code>source</code> property in regex object does not have slash</li>
<li>Better not to use string to create REGEX</li>
</ul>
</li>
<li>function constructor is not recommended, as it caused performance issue.</li>
<li>strict mode does not support <code>callee</code> and <code>caller</code><ul>
<li>Using <code>arguments.callee</code> can decouple recursive functions</li>
<li><code>arguments.callee.caller</code> return parent function</li>
</ul>
</li>
<li><code>length</code> property of a function is # of named arguments</li>
<li>In strict mode, the <code>this</code> value of a function called without a context object is not coerced to window.<ul>
<li><code>this</code> becomes undefined unless explicitly set by either attaching the function to an object or using apply() or call().</li>
</ul>
</li>
<li>Primitive type cannot have custom properties<ul>
<li>Can workaround by using constructor to create primitive type wrapper<ul>
<li><code>var j = new Number(1234);</code></li>
</ul>
</li>
<li><code>typeof</code> return Object for primitive type wrapper</li>
</ul>
</li>
<li>There was method to format HTML dynamically, but it is not implemented by browsers now.</li>
<li>Singleton object<ul>
<li>global scope and Math</li>
</ul>
</li>
<li>In strict mode, the variable created in eval() cannot be access from outside</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This books is published on 2012, some information is outdated. But it is still a good start to get deeper understand on javascript, not only the language itself, also the implementation in different browsers. The book spent certain pages to explain the workaround in IE, we can just skip them. This book skips some JavaScript specification which does not implemented by any browser (at that time). We may need to get up-to-date information from other place&lt;/p&gt;
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
  <entry>
    <title>簡評十三</title>
    <link href="http://199911.github.io/insight/2017/02/19/commentaries-13/"/>
    <id>http://199911.github.io/insight/2017/02/19/commentaries-13/</id>
    <published>2017-02-18T16:00:00.000Z</published>
    <updated>2017-05-06T09:39:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="混合型的-Javascript"><a href="#混合型的-Javascript" class="headerlink" title="混合型的 Javascript"></a><a href="http://www.codemud.net/~thinker/GinGin_CGI.py/show_id_doc/476" target="_blank" rel="external">混合型的 Javascript</a></h1><p>Generate javascript code from server side. The use case in example is generating database connect function. It is a quite interesting idea, but I cannot come up with any use cases.</p>
<a id="more"></a>
<h1 id="快樂的小成就"><a href="#快樂的小成就" class="headerlink" title="快樂的小成就"></a><a href="http://www.codemud.net/~thinker/GinGin_CGI.py/show_id_doc/469" target="_blank" rel="external">快樂的小成就</a></h1><p>Quite interesting idea. The article suggest us to enjoy every little small progress. It is ok to be confident, even the how small the achievements are.</p>
<h1 id="反思「過早最佳化是萬惡的根源」"><a href="#反思「過早最佳化是萬惡的根源」" class="headerlink" title="反思「過早最佳化是萬惡的根源」"></a><a href="http://www.codemud.net/~thinker/GinGin_CGI.py/show_id_doc/472" target="_blank" rel="external">反思「過早最佳化是萬惡的根源」</a></h1><p><code>Early optimization is root of evil</code> is reasonable on performance optimization. If we put this idea into architecture and system design, it would bring some problems. Because other team mate will follow the pattern of the system. The bad design and pattern will be reproduced if we don’t fix it in early stage. Therefore, architecture and system design have to be well planned and design as soon as possible.</p>
<h1 id="真正的「矽谷精神」是讓年輕人不需要賭身家，就有資源實現自己的技術和理想"><a href="#真正的「矽谷精神」是讓年輕人不需要賭身家，就有資源實現自己的技術和理想" class="headerlink" title="真正的「矽谷精神」是讓年輕人不需要賭身家，就有資源實現自己的技術和理想"></a><a href="https://hk.thenewslens.com/article/61910" target="_blank" rel="external">真正的「矽谷精神」是讓年輕人不需要賭身家，就有資源實現自己的技術和理想</a></h1><p>金句：</p>
<ul>
<li>新創公司就是要突破傳統，要選擇最激進的路。拿自己的錢出來，玩自己的公司，容易考慮太保守，失敗的機率就很大</li>
<li>矽谷的精髓不在這些新創的技術，而是這樣一個良好的生態圈。如果我們的新創公司，需要年輕人傾家蕩產，把所有的東西和人脈一次賭出去，做決策的時候一定綁手綁腳，無法做出正確的決定。</li>
</ul>
<h1 id="JavaScript-Type-and-Code-Coverage-Profiling"><a href="#JavaScript-Type-and-Code-Coverage-Profiling" class="headerlink" title="JavaScript Type and Code Coverage Profiling"></a><a href="https://webkit.org/blog/3846/type-profiling-and-code-coverage-profiling-for-javascript/" target="_blank" rel="external">JavaScript Type and Code Coverage Profiling</a></h1><p>原來safari inspector 有 type 同 code coverage profiling</p>
<p><a href="https://blog.jscrambler.com/how-captcha-works/" target="_blank" rel="external">How CAPTCHA Works</a></p>
<p>Interesting history of CAPTCAH</p>
<ul>
<li>The text image is generated by machine from normal text.<ul>
<li>Distorting text and adding background</li>
</ul>
</li>
<li>There are audio version for blinds<ul>
<li>Background noise is added</li>
</ul>
</li>
<li>The second generation of Captcha ask user to recognizing image<ul>
<li>Easier than recognizing distorted text</li>
<li>Mobile friendly</li>
<li>More difficult question for machine</li>
</ul>
</li>
<li>new reCaptcha analysis browser history<ul>
<li>Fallback to image / text recognition if cannot determine</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;混合型的-Javascript&quot;&gt;&lt;a href=&quot;#混合型的-Javascript&quot; class=&quot;headerlink&quot; title=&quot;混合型的 Javascript&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.codemud.net/~thinker/GinGin_CGI.py/show_id_doc/476&quot;&gt;混合型的 Javascript&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;Generate javascript code from server side. The use case in example is generating database connect function. It is a quite interesting idea, but I cannot come up with any use cases.&lt;/p&gt;
    
    </summary>
    
      <category term="Insight" scheme="http://199911.github.io/categories/Insight/"/>
    
    
  </entry>
  
  <entry>
    <title>Udemy: Introduction to CSS Development</title>
    <link href="http://199911.github.io/diary/2017/02/12/udemy-introduction-to-css-development/"/>
    <id>http://199911.github.io/diary/2017/02/12/udemy-introduction-to-css-development/</id>
    <published>2017-02-11T16:00:00.000Z</published>
    <updated>2017-02-12T10:37:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>It is a free Course. The first few section is simple and basic, you can learn those thing from lots of place. But the ‘CSS architecture’ section make this worth taking. I may write another post to talk about that part.</p>
<h2 id="Points"><a href="#Points" class="headerlink" title="Points"></a>Points</h2><ul>
<li>Horizontal margin<ul>
<li>It does not mention any limitation on these two methods, I am quite disappointed</li>
</ul>
</li>
<li>vertical-align<ul>
<li>The table cell will fill the table by default, it is the drawback of table-cell method.</li>
</ul>
</li>
<li>Clearfix<ul>
<li>It is good. Drawback is mentioned.</li>
<li>But it is basically the content of <a href="https://css-tricks.com/all-about-floats/" target="_blank" rel="external">All About Floats</a></li>
<li>If you want to see live demo, you can watch the video, otherwise, the article is better.</li>
</ul>
</li>
<li>Specificity<ul>
<li>The <a href="http://specificity.keegan.st/" target="_blank" rel="external">calculator</a> may be useful</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;It is a free Course. The first few section is simple and basic, you can learn those thing from lots of place. But the ‘CSS architecture’ 
    
    </summary>
    
      <category term="Diary" scheme="http://199911.github.io/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>簡評十二</title>
    <link href="http://199911.github.io/insight/2017/02/11/commentaries-12/"/>
    <id>http://199911.github.io/insight/2017/02/11/commentaries-12/</id>
    <published>2017-02-10T16:00:00.000Z</published>
    <updated>2017-05-06T09:39:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="A-Web-Dev’s-Valentine"><a href="#A-Web-Dev’s-Valentine" class="headerlink" title="A Web Dev’s Valentine"></a><a href="http://codepen.io/AllThingsSmitty/pen/pNLVWm/" target="_blank" rel="external">A Web Dev’s Valentine</a></h1><p>Create a heart with CSS and html</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">.heart:before,</div><div class="line">.heart:after &#123;</div><div class="line">  background: #cd231b;</div><div class="line">  border-radius: 50px 50px 0 0;</div><div class="line">  content: &quot;&quot;;</div><div class="line">  height: 25px;</div><div class="line">  left: 15px;</div><div class="line">  position: absolute;</div><div class="line">  transform: rotate(-45deg);</div><div class="line">  transform-origin: 0 100%;</div><div class="line">  width: 15px;</div><div class="line">&#125;</div><div class="line">.heart:after &#123;</div><div class="line">  left: 0;</div><div class="line">  transform: rotate(45deg);</div><div class="line">  transform-origin: 100% 100%;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Dear-JavaScript-Maintainers"><a href="#Dear-JavaScript-Maintainers" class="headerlink" title="Dear JavaScript Maintainers,"></a><a href="http://thefullstack.xyz/dear-javascript-maintainers/" target="_blank" rel="external">Dear JavaScript Maintainers,</a></h1><p>MIT license stated the code is not guarenteed to work properly.</p>
<h1 id="JavaScript-Will-Finally-Get-Proper-Asynchronous-Programming"><a href="#JavaScript-Will-Finally-Get-Proper-Asynchronous-Programming" class="headerlink" title="JavaScript Will Finally Get Proper Asynchronous Programming"></a><a href="http://thenewstack.io/async-officially-coming-javascript-year/" target="_blank" rel="external">JavaScript Will Finally Get Proper Asynchronous Programming</a></h1><p><code>async</code> will be available in ES2017. It make the javascript non blocking, even there are long running code.</p>
<h1 id="The-end-of-the-clearfix-hack"><a href="#The-end-of-the-clearfix-hack" class="headerlink" title="The end of the clearfix hack?"></a><a href="https://www.rachelandrew.co.uk/archives/2017/01/24/the-end-of-the-clearfix-hack/" target="_blank" rel="external">The end of the clearfix hack?</a></h1><p>We apply clearfix hack to float element container to prevent it collapse. But there a new value <code>flow-root</code> for <code>display</code> to solve this problem. We don’t need to have clearfix hack in the future.<br>FYI: <a href="http://caniuse.com/#search=flow-root" target="_blank" rel="external">Can I Use</a></p>
<h1 id="CSS-only-3d-Macbook-Air"><a href="#CSS-only-3d-Macbook-Air" class="headerlink" title="CSS only 3d Macbook Air"></a><a href="http://codepen.io/neoberg/full/istyp/" target="_blank" rel="external">CSS only 3d Macbook Air</a></h1><p>Crazy CSS and HTML only macbook air animation</p>
<h1 id="Hard-Reset-Using-the-CSS-Initial-Value"><a href="#Hard-Reset-Using-the-CSS-Initial-Value" class="headerlink" title="Hard Reset: Using the CSS Initial Value"></a><a href="http://thenewcode.com/1172/Hard-Reset-Using-the-CSS-Initial-Value" target="_blank" rel="external">Hard Reset: Using the CSS Initial Value</a></h1><p><code>initial</code> value reset the property to default value of user’s browser. So the normalized style will be reset too.<br><code>initial</code> does not work in all IE, even IE 11. WTF.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;A-Web-Dev’s-Valentine&quot;&gt;&lt;a href=&quot;#A-Web-Dev’s-Valentine&quot; class=&quot;headerlink&quot; title=&quot;A Web Dev’s Valentine&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://codepen
    
    </summary>
    
      <category term="Insight" scheme="http://199911.github.io/categories/Insight/"/>
    
    
  </entry>
  
  <entry>
    <title>All about css float</title>
    <link href="http://199911.github.io/review/2017/02/08/all-about-css-float/"/>
    <id>http://199911.github.io/review/2017/02/08/all-about-css-float/</id>
    <published>2017-02-07T16:00:00.000Z</published>
    <updated>2017-02-08T15:15:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>This article explain the behaviour of CSS float property. I like this article because it compare float with other CSS layout properties, but it is an old post from 2008.</p>
<h2 id="Auto-reflow"><a href="#Auto-reflow" class="headerlink" title="Auto reflow"></a>Auto reflow</h2><p>Float can reflow after resize (Push the adjacent element automatically). If use <code>position: absolute;</code>, the resized element may cover adjacent elements.</p>
<h2 id="Three-clear-float-solutions"><a href="#Three-clear-float-solutions" class="headerlink" title="Three clear float solutions"></a>Three clear float solutions</h2><ul>
<li>The Empty Div Method:<ul>
<li>Add an empty div with <code>clear: both;</code></li>
</ul>
</li>
<li>The overflow method:<ul>
<li>If this property is set to auto or hidden on the parent element, the parent will expand to contain the floats</li>
</ul>
</li>
<li>The Easy Clearing Method:<ul>
<li>Use the following CSS (also used by bootstrap 3)<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.clearfix:after &#123;</div><div class="line">   content: &quot;.&quot;;</div><div class="line">   visibility: hidden;</div><div class="line">   display: block;</div><div class="line">   height: 0;</div><div class="line">   clear: both;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="Problems-with-floats"><a href="#Problems-with-floats" class="headerlink" title="Problems with floats"></a>Problems with floats</h2><ul>
<li>Push down<ul>
<li>The image overflow from parent and push the adjacent elements downward.</li>
</ul>
</li>
</ul>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li><a href="https://css-tricks.com/all-about-floats/" target="_blank" rel="external">All About Floats</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This article explain the behaviour of CSS float property. I like this article because it compare float with other CSS layout properties, 
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
  <entry>
    <title>Udemy: 掌握 Git &amp; Github 程式時光機</title>
    <link href="http://199911.github.io/diary/2017/02/07/udemy-git-and-github/"/>
    <id>http://199911.github.io/diary/2017/02/07/udemy-git-and-github/</id>
    <published>2017-02-06T16:00:00.000Z</published>
    <updated>2017-02-07T15:49:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前係Facebook見到有couple，可以免費Take。</p>
<p>課程用普通話，係台灣人教，內容比較基本，冇咩特別。除左tag之外，入邊D feature我平時有用開，入邊教D野太簡單，冇咩大insight。就算係tag果part，都只係一個簡單嘅overview。</p>
<p>我睇左個course先知原來Github可以用 <code>master</code> branch做Github page，己經唔洗特別整一條 <code>gh-pages</code> branch。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前係Facebook見到有couple，可以免費Take。&lt;/p&gt;
&lt;p&gt;課程用普通話，係台灣人教，內容比較基本，冇咩特別。除左tag之外，入邊D feature我平時有用開，入邊教D野太簡單，冇咩大insight。就算係tag果part，都只係一個簡單嘅overview
    
    </summary>
    
      <category term="Diary" scheme="http://199911.github.io/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>Using Redux in server-side</title>
    <link href="http://199911.github.io/diary/2017/01/29/using-redux-in-backend/"/>
    <id>http://199911.github.io/diary/2017/01/29/using-redux-in-backend/</id>
    <published>2017-01-28T16:00:00.000Z</published>
    <updated>2017-01-29T14:10:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>Redux store the state of whole app into a single object. Which make the system’s state transition predictable and manageable. I try to apply Redux as an event system in backend. But unfortunately, it does not work.</p>
<a id="more"></a>
<h1 id="How-I-use-Redux-in-server-side"><a href="#How-I-use-Redux-in-server-side" class="headerlink" title="How I use Redux in server side"></a>How I use Redux in server side</h1><p>My idea is, every time user send a request to server, we queue it up (add the request to store). After that the server will take action base on the state. The server subscribes the change of store and decide which action to take.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(Server router get request) -&gt; (dispatch action) -&gt; (reducer put the request in the state)</div><div class="line">                                    ^                                  |</div><div class="line">                                    |                                  v</div><div class="line">                         (Server process requests) -&gt;  (Server subscribe the change)</div></pre></td></tr></table></figure>
<p>The diagram looks good, the logic flow is very clear. But there are lots of problems during implementation</p>
<h2 id="Server-action-care-actions-not-states"><a href="#Server-action-care-actions-not-states" class="headerlink" title="Server action care actions, not states"></a>Server action care actions, not states</h2><p>In server side, the most logic only care ‘changes’, not ‘state’. Take web server as an example.</p>
<p>At first, there are no request, so the store looks like <code>{queue: []}</code>.<br>When there is a ‘index.html’ request, I will store the request in the queue and start processing it. The store looks like <code>{queue: [&#39;index.html&#39;]}</code>.<br>If we get ‘index.html’ request from another user, we can found there is a same request. From the app state, we don’t know we are computing the result or not, we don’t know should we process the request.<br>Therefore, we have to store the state of request. like<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  queue: [</div><div class="line">    &#123;page:&apos;index.html&apos;, state:&apos;processing&apos;&#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>And we need to have lots of action and reducer to transit the state of request.</p>
<p>These kind of state does not means much in server side. If the request is processing, we only need to wait, we don’t have logic hooked on the <code>processing</code> state. But in client side, we may have a lot UI to update when the request is processing, the state will be very useful to prevent user from confusion.</p>
<p>Short conclusion: Redux keeps all app state in a clear way. It is very important in client side, because we need to guarantee the data present to user is consistent and up-to-date. But in server side logic, we only care “what is do we need to process”, instead of “what are we processing now”. Using “state first” approach in server side introduce lots of boilerplate code.</p>
<h2 id="Hook-and-Anchor-pattern-implementation-is-complex-in-Redux"><a href="#Hook-and-Anchor-pattern-implementation-is-complex-in-Redux" class="headerlink" title="Hook and Anchor pattern implementation is complex in Redux"></a>Hook and Anchor pattern implementation is complex in Redux</h2><p>Hook and anchor pattern is useful in server side, like the <code>the_content</code> hook in Wordpress, which will be call before the post content sent to client, allow programmer inject customization content component easily. But in Redux, the implementation is not very straight forward.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">const reducer = (action, state) =&gt; &#123;</div><div class="line">  switch(action.type) &#123;</div><div class="line">    &apos;UPDATE_FETCH_POST_STATE&apos;:</div><div class="line">      return action.state;</div><div class="line">    ...</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">dispatch(&#123;type:&apos;UPDATE_FETCH_POST_STATE&apos;, state:&apos;preparing&apos;&#125;);</div><div class="line">dispatch(&#123;type:&apos;UPDATE_FETCH_POST_STATE&apos;, state:&apos;running&apos;&#125;);</div><div class="line">fetchPost()</div><div class="line">  .then(() =&gt; &#123;</div><div class="line">    dispatch(&#123;type:&apos;UPDATE_FETCH_POST_STATE&apos;, state:&apos;done&apos;&#125;);</div><div class="line">  &#125;)</div></pre></td></tr></table></figure>
<p>To implement the filter, we need to have 2 action to change the state to preparing and running. Because the ‘event subscriber’ in Redux can only see the state, we need to create a short ‘section’ to notify the subscriber. The implementation is more complex than the pub-sub.</p>
<h2 id="Difficult-to-handle-async-hook-handler-in-Redux"><a href="#Difficult-to-handle-async-hook-handler-in-Redux" class="headerlink" title="Difficult to handle async hook handler in Redux"></a>Difficult to handle async hook handler in Redux</h2><p>As dispatch does not return the anything about the subscriber, don’t know what subscriber did. If the subscriber is async, we cannot know it is finished or not. In some scenarios, it is a big problem.</p>
<p>For example, I want to insert the author data in post content, we need to run <code>getAuthorAsync()</code> before sent the content. We cannot guarantee <code>getAuthorAsync()</code> finished before <code>fetchPost()</code> using <code>dispatch()</code>.</p>
<p>In another implementation, we can implement this in a very simple way.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">// Return all return value of hook handlers</div><div class="line">const handlers = willFetchPostHooks();</div><div class="line">Promise.all(handlers)</div><div class="line">  .then(() =&gt; &#123;</div><div class="line">    return fetchPost();</div><div class="line">  &#125;)</div><div class="line">  .then((post) =&gt; &#123;</div><div class="line">    ...</div><div class="line">    return Promise.all(didFetchPostHooks());</div><div class="line">  &#125;)</div></pre></td></tr></table></figure></p>
<p>Asynchronous hooks are very common in server side, as most task in backend take a longer process time. But in client side, it is not a big problem, as most of the action (UI update) are short and synchronous.</p>
<h1 id="Better-way-in-server-side"><a href="#Better-way-in-server-side" class="headerlink" title="Better way in server side"></a>Better way in server side</h1><p>Redux separate the state of each component, and store them in a single store. But we don’t need to do it in server side, because server side logic don’t have lots of share states. Using traditional OOP, each object take care of their own states may be good enough.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Redux store the state of whole app into a single object. Which make the system’s state transition predictable and manageable. I try to apply Redux as an event system in backend. But unfortunately, it does not work.&lt;/p&gt;
    
    </summary>
    
      <category term="Diary" scheme="http://199911.github.io/categories/Diary/"/>
    
    
  </entry>
  
  <entry>
    <title>&quot;CSS: The Definitive Guide 3rd Edition&quot; part 2</title>
    <link href="http://199911.github.io/review/2017/01/22/css-the-definitive-guide-3rd-edition-2/"/>
    <id>http://199911.github.io/review/2017/01/22/css-the-definitive-guide-3rd-edition-2/</id>
    <published>2017-01-21T16:00:00.000Z</published>
    <updated>2017-01-22T12:54:55.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="4-Values-and-Units"><a href="#4-Values-and-Units" class="headerlink" title="4 Values and Units"></a>4 Values and Units</h1><ul>
<li>There are only 17 defined color in css 2.1, but CSS 3 have 140 color, which recongized by most browsers.</li>
<li><code>rgb(50%, 0%, 100%)</code> is a valid color</li>
<li>The “web-safe” colors are those colors that generally avoid dithering on 256-color computer systems<ul>
<li>Value can be express in multiple of 20%</li>
<li>I think we don’t need to care these nowadays</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h2 id="Length-units"><a href="#Length-units" class="headerlink" title="Length units"></a>Length units</h2><ul>
<li>Valid units: <code>in</code>, <code>cm</code>, <code>mm</code>, <code>pt</code>, <code>pc</code> (picas)</li>
<li><code>em</code> and <code>ex</code> stand for “em-height” and “x-height”<ul>
<li>Different fonts with same <code>em</code> may have different <code>ex</code>, as the font design is different<ul>
<li>But in practical, not all font have <code>ex</code> defined, will fallback to convention (<code>0.5 em</code> = <code>1 ex</code>)</li>
</ul>
</li>
</ul>
</li>
<li><code>1 em</code> = <code>14 px</code></li>
<li><code>12 pt</code> = <code>1 pc</code></li>
<li><code>72 pt</code> = <code>1 in</code> is only correct in classic mac, as the monitor have different ppi (pt per in).<ul>
<li>Don’t assume OS can convert <code>pt</code> to accurate length on monitor, it is the reason to avoid <code>pt</code>.</li>
</ul>
</li>
<li><code>in</code> is a reliable unit</li>
<li>Absolute unit (in, cm, mm) is more useful in <code>print</code> media</li>
<li><code>px</code> may scale when print, so it is defined as relative unit</li>
<li><code>ex</code> is not commonly used, use <code>em</code> or <code>px</code> is better</li>
</ul>
<h2 id="List-of-value"><a href="#List-of-value" class="headerlink" title="List of value"></a>List of value</h2><ul>
<li>number</li>
<li>color</li>
<li>uri</li>
<li>keyword</li>
<li>angle (deg, grad, rad)</li>
<li>time</li>
<li>frequency</li>
</ul>
<h1 id="5-Fonts"><a href="#5-Fonts" class="headerlink" title="5 Fonts"></a>5 Fonts</h1><ul>
<li>Don’t forget provide fallback for font family</li>
<li>Use quotation mark as font family may have special characters</li>
<li>Fonts have variant<ul>
<li>Example: Zurich Bold, Zurich Black, Zurich UltraBlack, Zurich Light, and Zurich Regular</li>
<li><code>font-weight</code> is using different font variant</li>
<li><code>font-weight</code> to font variant conversion is complex, check the book if needed.</li>
</ul>
</li>
<li>lighter / bolder is relative value<ul>
<li>Increase / decrease <code>font-weight</code> inherit by parent</li>
</ul>
</li>
<li>Font size is the size of em box<ul>
<li>From baseline to extra leading</li>
<li>Font size is not size of any characters</li>
</ul>
</li>
<li>There absolutive and relative font size value keywords<ul>
<li>Absolute keywords: (increase or decrease by a constant factor for each keywords)</li>
<li>Relative keywords: (larger / smaller) same factor as absolute keywords<ul>
<li>Relative keywords in font size and weight is useful when define style of tags like <code>&lt;em&gt;</code>, <code>&lt;strong&gt;</code></li>
</ul>
</li>
</ul>
</li>
<li>Percentage value in font-size is effectively cumulative<ul>
<li>PS: Round off to integer</li>
</ul>
</li>
<li>Small caps font variant<ul>
<li>Instead of upper and lowercase letters, a small-caps font employs uppercase letters of different sizes.</li>
</ul>
</li>
<li><code>font-stretch</code> and <code>font-size-adjust</code> are not implemented</li>
</ul>
<h2 id="System-fonts"><a href="#System-fonts" class="headerlink" title="System fonts"></a>System fonts</h2><p>These are used to take the font size, family, weight, style, and variant of elements of the operating system, and apply them to an element.</p>
<ul>
<li>caption</li>
<li>icon</li>
<li>menu</li>
<li>message-box</li>
<li>small-caption</li>
<li>status-bar</li>
</ul>
<h2 id="Font-synthesis"><a href="#Font-synthesis" class="headerlink" title="Font synthesis"></a>Font synthesis</h2><p>From <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font-synthesis" target="_blank" rel="external">MDN</a>, <code>font-synthesis</code> control the generaton of missing typefaces</p>
<h1 id="6-Text-Properties"><a href="#6-Text-Properties" class="headerlink" title="6 Text Properties"></a>6 Text Properties</h1><ul>
<li><p><code>text-indent</code></p>
<ul>
<li>Only works on block level elements. Use padding in inline elements</li>
<li>Percentage is relative to the parent’s width</li>
<li>Always inherited the computed value, not declared value</li>
</ul>
</li>
<li><p><code>text-align</code> can be ugly when</p>
<ul>
<li>the container is too narrow</li>
<li>the word are too long (can use hyphenation)</li>
</ul>
</li>
<li><p><code>line-height</code></p>
<ul>
<li>The line will be short when the children have a larger font size</li>
<li>Use factors (number without value) to overcome inheritances problem<ul>
<li>Because the value is relative to font size</li>
</ul>
</li>
</ul>
</li>
<li><p><code>vertical-align</code> does not work on block elements</p>
<ul>
<li>We can use it to align <code>inline-block</code> and <code>inline</code> elements</li>
</ul>
</li>
<li><p><code>text-decoration</code> is not inherited, but the decoration is still appear in children (it is from parent, not children’s decoration)</p>
<ul>
<li>To remove the children’s decoration, use text-decoration: none;<ul>
<li>In other elements, we use <code>initial</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="White-space"><a href="#White-space" class="headerlink" title="White space"></a>White space</h2><ul>
<li>pre: keep all, no auto line wrapping (no line break unless there are new line character)</li>
<li>pre-wrap: keep all space, and line wrap normally</li>
<li>pre-line: collapse the space within the same line, and line wrap normally</li>
</ul>
<h2 id="Text-direction"><a href="#Text-direction" class="headerlink" title="Text direction"></a>Text direction</h2><p><code>direction</code> affects the writing direction of text in a block-level element, the direction of table column layout, the direction in which content horizontally overflows its element box, and the position of the last line of a fully justified element.<br>For inline elements, direction applies only if the property unicode-bidi is set to either embed or bidi-override.<br>For top to bottom language, CSS 3 have writing mode</p>
<h1 id="7-Basic-Visual-Formatting"><a href="#7-Basic-Visual-Formatting" class="headerlink" title="7 Basic Visual Formatting"></a>7 Basic Visual Formatting</h1><ul>
<li>margin can be negative, but size, padding and border cannot be negative</li>
<li>The computed value of percentage size is taken as the height of the containing block-level</li>
<li>Size <code>auto</code> is the minimum size that contain the whole content</li>
</ul>
<h2 id="Collapsing-margin"><a href="#Collapsing-margin" class="headerlink" title="Collapsing margin"></a>Collapsing margin</h2><p>Only vertical will collapse. not horizontal margins. For other case, refer to <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing" target="_blank" rel="external">MDN</a>.</p>
<ul>
<li>anonymous text<ul>
<li>the texts in inline elements but don’t inside the nested inline element</li>
</ul>
</li>
<li>em box</li>
<li>inline box</li>
<li>content area</li>
<li>leading<ul>
<li>height of the box = line-height (box of one line)</li>
</ul>
</li>
<li>line box<ul>
<li>shortest box bounds the highest and the lowest points of inline boxes (multi line inline box)</li>
</ul>
</li>
<li>percentage value of vertical-align take value from line-height<ul>
<li>Because vertical-align is align in line level, not block level</li>
</ul>
</li>
<li>Line in the same block can have different computed value of line-height, if we use number without unit<ul>
<li>It is computed base on height of elements in each line.</li>
</ul>
</li>
<li>Characters are usually smaller than their em boxes<ul>
<li>But cursives fonts usually have character glyphs larger than their em boxes.</li>
</ul>
</li>
<li>Adding padding and borders does not affect the height of the inline box</li>
<li>Margin top and bottom does not apply to inline non-replaced elements</li>
<li>Inline replaced element is align to baseline<ul>
<li>which may create a gap which is half leading</li>
</ul>
</li>
<li>Computed value of display can change if an element is floated or positioned.</li>
</ul>
<h1 id="8-Padding-Borders-and-Margins"><a href="#8-Padding-Borders-and-Margins" class="headerlink" title="8 Padding, Borders and Margins"></a>8 Padding, Borders and Margins</h1><ul>
<li>Percentage margin depends on parent’s width, even margin-top and margin-bottom<ul>
<li>If margin-top and margin-bottom depends on parent’s height, there will be infinite loop</li>
<li>The treatment of percentage values for top and bottom margins is different for positioned elements<ul>
<li>I guess it is because the size of element does not depends on parent anymore</li>
</ul>
</li>
</ul>
</li>
<li>Margin top and bottom does not work in inline element<ul>
<li>Only line height, font size and vertical align can change the distance between lines</li>
</ul>
</li>
<li>Default border value<ul>
<li>border: none</li>
<li>weight: medium</li>
<li>color: foreground color</li>
</ul>
</li>
<li>In CSS 2.1, the element’s background is the background of the content, padding, and border areas.</li>
<li>Border cannot have percentage value</li>
</ul>
<h1 id="9-Colors-and-Backgrounds"><a href="#9-Colors-and-Backgrounds" class="headerlink" title="9 Colors and Backgrounds"></a>9 Colors and Backgrounds</h1><ul>
<li><code>color</code> properties also change border color of elements if <code>border-color</code> is not set.</li>
<li>Many form elements have border by default.</li>
<li>Foreground color can be inherited, but not background.</li>
<li><code>transparent</code> is a color keyword</li>
</ul>
<ul>
<li>Background image with background color<ul>
<li>Serve as fallback when image fail to load</li>
<li>Some image have alpha value<ul>
<li>Background image is on top of background color<ul>
<li>Need some extra CSS to set up image overlay</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>The background image-placement context in CSS 2 and 2.1 is the inner border edge</li>
<li><code>background-attachment</code> attaches image to viewport</li>
</ul>
<h2 id="Class-naming"><a href="#Class-naming" class="headerlink" title="Class naming"></a>Class naming</h2><p>It’s actually better to pick class names that describe the type of information contained within, not the visual effect you’re trying to achieve. It’s preferable to pick a class name which actually mean something and, more importantly, are independent of any presentational concepts. So we don’t need to rename if we want to change the visual effect</p>
<h1 id="10-Floating-and-Positioning"><a href="#10-Floating-and-Positioning" class="headerlink" title="10 Floating and Positioning"></a>10 Floating and Positioning</h1><h2 id="Float"><a href="#Float" class="headerlink" title="Float"></a>Float</h2><ul>
<li>Float will convert the element to <code>display: block</code></li>
<li>Negative margin can make a float element higher than parent</li>
<li>when the element is larger than parent it will overflow</li>
<li>An inline box that overlaps with a float has its borders, background, and content all rendered “on top” of the float.</li>
<li>A block box that overlaps with a float has its borders and background rendered “behind” the float, whereas its content is rendered “on top” of the float.</li>
<li>PS: the overlap behavior is independent of source order</li>
<li>Clearance is extra spacing added above an element’s top margin to push it past any floated elements</li>
<li>(percentage) max/min size is useful when use with float elements</li>
</ul>
<h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><ul>
<li>Beside overflow hidden, we can clip the content by <code>clip</code></li>
<li>Clip can have negative value (use with overflow hidden?)<ul>
<li>But the browser implementation is not consistent</li>
</ul>
</li>
<li><code>top: auto;</code> does not align the absolute positioned block vertical center<ul>
<li>It is used to reset the <code>top</code> property</li>
</ul>
</li>
</ul>
<h1 id="11-Table-Layout"><a href="#11-Table-Layout" class="headerlink" title="11 Table Layout"></a>11 Table Layout</h1><ul>
<li>It is impossible to give table cell margin (browser will ignore them)</li>
<li>The position of first table column depends on language direction</li>
<li>The CSS specification discourages, but does not prohibit, the positioning of table cells and other internal table elements.</li>
<li>Table header and footer will be repeated in printed version, if the whole table is not fit in one page</li>
<li>CSS table layout pick the “row primacy” principle:<ul>
<li>User explicitly define row, the browser find the column by calculation (we use <code>tr</code> but no <code>col</code> in table)</li>
<li>In another words, it is row-oriented</li>
</ul>
</li>
<li>Anonymous table object - table with missing cell<ul>
<li>Browser will insert the missing cell automatically</li>
</ul>
</li>
<li>Table layer<ul>
<li>Table elements: cell, row, row groups, columns, columns, table</li>
</ul>
</li>
<li>Table style will be drawn first</li>
<li>Border spacing = cell margin</li>
<li><code>empty-cell: hidden;</code> make browser set empty cell to <code>display: none;</code></li>
</ul>
<h2 id="table-layout"><a href="#table-layout" class="headerlink" title="table-layout"></a>table-layout</h2><ul>
<li><code>auto</code>: the table size is depends on the content</li>
<li><code>fixed</code>: the table size is defined by the first row<ul>
<li><code>fixed</code> layout is fast to render, no need to go through all content</li>
</ul>
</li>
<li>Vertical align content in table center is easy, can use vertical align directly</li>
<li><code>vertical-align</code> will make browser ignore <code>sub</code>, <code>super</code>, <code>text-top</code>, and <code>text-bottom</code> when applied to table cells</li>
<li>Table layout can cause text wrap problem<ul>
<li><code>fixed</code> vs <code>auto</code>?</li>
</ul>
</li>
</ul>
<h1 id="12-List-and-Generated-Content"><a href="#12-List-and-Generated-Content" class="headerlink" title="12 List and Generated Content"></a>12 List and Generated Content</h1><p>CSS does not define the behavior of nonnumeric counting styles for negative counter</p>
<h1 id="13-User-Interface-Styles"><a href="#13-User-Interface-Styles" class="headerlink" title="13 User Interface Styles"></a>13 User Interface Styles</h1><ul>
<li>There are default system style:<ul>
<li>font</li>
<li>color</li>
<li>cursor<ul>
<li>can have graphic cursor</li>
</ul>
</li>
<li>outline</li>
</ul>
</li>
</ul>
<h1 id="14-Non-Screen-Media"><a href="#14-Non-Screen-Media" class="headerlink" title="14 Non-Screen Media"></a>14 Non-Screen Media</h1><h2 id="Print-version"><a href="#Print-version" class="headerlink" title="Print version"></a>Print version</h2><ul>
<li>Some suggested style to apply to printed version<ul>
<li>Overwrite background and font color</li>
<li>No float and no column (width: auto)</li>
<li>Position element out side the page is not a good solution to avoid rendering<ul>
<li>Because this produce lots of blank page in printed version</li>
</ul>
</li>
</ul>
</li>
<li>Some style for paged media<ul>
<li><code>page-break-[before|after|inside]</code> prevent page break insert to the elements</li>
<li><code>widow</code> and <code>orphan</code>: min number of word when having a new page</li>
<li>There are detail page break rules explained in the book</li>
</ul>
</li>
<li>running head: item appear in every page<ul>
<li>use position fixed to implement running head</li>
</ul>
</li>
</ul>
<h2 id="Projection"><a href="#Projection" class="headerlink" title="Projection"></a>Projection</h2><p>Not implemented by many browser</p>
<h2 id="Speaker"><a href="#Speaker" class="headerlink" title="Speaker"></a>Speaker</h2><p>The book mentions styles in CSS2. The CSS3 specification is not finalised.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;4-Values-and-Units&quot;&gt;&lt;a href=&quot;#4-Values-and-Units&quot; class=&quot;headerlink&quot; title=&quot;4 Values and Units&quot;&gt;&lt;/a&gt;4 Values and Units&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;There are only 17 defined color in css 2.1, but CSS 3 have 140 color, which recongized by most browsers.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rgb(50%, 0%, 100%)&lt;/code&gt; is a valid color&lt;/li&gt;
&lt;li&gt;The “web-safe” colors are those colors that generally avoid dithering on 256-color computer systems&lt;ul&gt;
&lt;li&gt;Value can be express in multiple of 20%&lt;/li&gt;
&lt;li&gt;I think we don’t need to care these nowadays&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Review" scheme="http://199911.github.io/categories/Review/"/>
    
    
  </entry>
  
</feed>
